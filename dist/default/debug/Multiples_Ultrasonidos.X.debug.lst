

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Mar 02 20:42:51 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F883
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     	;# 
    40  0001                     	;# 
    41  0002                     	;# 
    42  0003                     	;# 
    43  0004                     	;# 
    44  0005                     	;# 
    45  0006                     	;# 
    46  0007                     	;# 
    47  0009                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  000E                     	;# 
    53  000E                     	;# 
    54  000F                     	;# 
    55  0010                     	;# 
    56  0011                     	;# 
    57  0012                     	;# 
    58  0013                     	;# 
    59  0014                     	;# 
    60  0015                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0017                     	;# 
    64  0018                     	;# 
    65  0019                     	;# 
    66  001A                     	;# 
    67  001B                     	;# 
    68  001B                     	;# 
    69  001C                     	;# 
    70  001D                     	;# 
    71  001E                     	;# 
    72  001F                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0086                     	;# 
    76  0087                     	;# 
    77  0089                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  008F                     	;# 
    82  0090                     	;# 
    83  0091                     	;# 
    84  0092                     	;# 
    85  0093                     	;# 
    86  0093                     	;# 
    87  0093                     	;# 
    88  0094                     	;# 
    89  0095                     	;# 
    90  0096                     	;# 
    91  0097                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  0105                     	;# 
   101  0107                     	;# 
   102  0108                     	;# 
   103  0109                     	;# 
   104  010C                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  0185                     	;# 
   110  0187                     	;# 
   111  0188                     	;# 
   112  0189                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0093                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  0105                     	;# 
   177  0107                     	;# 
   178  0108                     	;# 
   179  0109                     	;# 
   180  010C                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  0185                     	;# 
   186  0187                     	;# 
   187  0188                     	;# 
   188  0189                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001B                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  0081                     	;# 
   226  0085                     	;# 
   227  0086                     	;# 
   228  0087                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  008F                     	;# 
   234  0090                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0093                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  009F                     	;# 
   252  0105                     	;# 
   253  0107                     	;# 
   254  0108                     	;# 
   255  0109                     	;# 
   256  010C                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  0185                     	;# 
   262  0187                     	;# 
   263  0188                     	;# 
   264  0189                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0089                     	;# 
   306  008C                     	;# 
   307  008D                     	;# 
   308  008E                     	;# 
   309  008F                     	;# 
   310  0090                     	;# 
   311  0091                     	;# 
   312  0092                     	;# 
   313  0093                     	;# 
   314  0093                     	;# 
   315  0093                     	;# 
   316  0094                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009A                     	;# 
   323  009B                     	;# 
   324  009C                     	;# 
   325  009D                     	;# 
   326  009E                     	;# 
   327  009F                     	;# 
   328  0105                     	;# 
   329  0107                     	;# 
   330  0108                     	;# 
   331  0109                     	;# 
   332  010C                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010E                     	;# 
   336  010F                     	;# 
   337  0185                     	;# 
   338  0187                     	;# 
   339  0188                     	;# 
   340  0189                     	;# 
   341  018C                     	;# 
   342  018D                     	;# 
   343                           
   344                           	psect	idataBANK0
   345  05D3                     __pidataBANK0:	
   346                           
   347                           ;initializer for _lcdcolumns
   348  05D3  3410               	retlw	16
   349                           
   350                           ;initializer for _lcdrows
   351  05D4  3402               	retlw	2
   352                           
   353                           ;initializer for _distancia1
   354  05D5  3429               	retlw	low (_dist1| 0)
   355                           
   356                           ;initializer for _distancia2
   357  05D6  3433               	retlw	low (_dist2| 0)
   358                           
   359                           ;initializer for _distancia3
   360  05D7  343D               	retlw	low (_dist3| 0)
   361                           
   362                           ;initializer for _distancia4
   363  05D8  34A0               	retlw	low (_dist4| 0)
   364                           
   365                           	psect	strings
   366  0483                     __pstrings:	
   367  0483                     stringtab:	
   368  0483                     __stringtab:	
   369                           
   370                           ;	String table - string pointers are 1 byte each
   371  0483  1BFF               	btfsc	btemp+1,7
   372  0484  2C8D               	ljmp	stringcode
   373  0485  1383               	bcf	3,7
   374  0486  187F               	btfsc	btemp+1,0
   375  0487  1783               	bsf	3,7
   376  0488  0800               	movf	0,w
   377  0489  0A84               	incf	4,f
   378  048A  1903               	skipnz
   379  048B  0AFF               	incf	btemp+1,f
   380  048C  0008               	return
   381  048D                     stringcode:	
   382  048D                     stringdir:	
   383  048D  3004               	movlw	high stringdir
   384  048E  008A               	movwf	10
   385  048F  0804               	movf	4,w
   386  0490  0A84               	incf	4,f
   387  0491  0782               	addwf	2,f
   388  0492                     __stringbase:	
   389  0492  3400               	retlw	0
   390  0493                     __end_of__stringtab:	
   391  0493                     _dpowers:	
   392  0493  3401               	retlw	1
   393  0494  3400               	retlw	0
   394  0495  340A               	retlw	10
   395  0496  3400               	retlw	0
   396  0497  3464               	retlw	100
   397  0498  3400               	retlw	0
   398  0499  34E8               	retlw	232
   399  049A  3403               	retlw	3
   400  049B  3410               	retlw	16
   401  049C  3427               	retlw	39
   402  049D                     __end_of_dpowers:	
   403  049D                     _rowaddr:	
   404  049D  3400               	retlw	0
   405  049E  3440               	retlw	64
   406  049F  3414               	retlw	20
   407  04A0  3454               	retlw	84
   408  04A1                     __end_of_rowaddr:	
   409  04A1                     STR_1:	
   410  04A1  3444               	retlw	68	;'D'
   411  04A2  3469               	retlw	105	;'i'
   412  04A3  3473               	retlw	115	;'s'
   413  04A4  3474               	retlw	116	;'t'
   414  04A5  3461               	retlw	97	;'a'
   415  04A6  346E               	retlw	110	;'n'
   416  04A7  3463               	retlw	99	;'c'
   417  04A8  3469               	retlw	105	;'i'
   418  04A9  3461               	retlw	97	;'a'
   419  04AA  3473               	retlw	115	;'s'
   420  04AB  343A               	retlw	58	;':'
   421  04AC  3420               	retlw	32	;' '
   422  04AD  3400               	retlw	0
   423  04AE                     STR_2:	
   424  04AE  3425               	retlw	37	;'%'
   425  04AF  3464               	retlw	100	;'d'
   426  04B0  3420               	retlw	32	;' '
   427  04B1  3463               	retlw	99	;'c'
   428  04B2  346D               	retlw	109	;'m'
   429  04B3  3400               	retlw	0
   430                           
   431                           ; #config settings
   432  0000                     
   433                           	psect	nvBANK0
   434  006C                     __pnvBANK0:	
   435  006C                     _iomode:	
   436  006C                     	ds	1
   437  000E                     _TMR1	set	14
   438  000B                     _INTCON	set	11
   439  000C                     _PIR1	set	12
   440  0006                     _PORTB	set	6
   441  0007                     _PORTC	set	7
   442  0010                     _T1CON	set	16
   443  005F                     _GIE	set	95
   444  0030                     _RB0	set	48
   445  0031                     _RB1	set	49
   446  0032                     _RB2	set	50
   447  0033                     _RB3	set	51
   448  0034                     _RB4	set	52
   449  0035                     _RB5	set	53
   450  0036                     _RB6	set	54
   451  0037                     _RB7	set	55
   452  005B                     _RBIE	set	91
   453  0058                     _RBIF	set	88
   454  003A                     _RC2	set	58
   455  003B                     _RC3	set	59
   456  003C                     _RC4	set	60
   457  003D                     _RC5	set	61
   458  003E                     _RC6	set	62
   459  003F                     _RC7	set	63
   460  0080                     _TMR1ON	set	128
   461  0096                     _IOCB	set	150
   462  008F                     _OSCCON	set	143
   463  008C                     _PIE1	set	140
   464  0086                     _TRISB	set	134
   465  0087                     _TRISC	set	135
   466  043A                     _TRISC2	set	1082
   467  043B                     _TRISC3	set	1083
   468  043C                     _TRISC4	set	1084
   469  043D                     _TRISC5	set	1085
   470  043E                     _TRISC6	set	1086
   471  043F                     _TRISC7	set	1087
   472  0189                     _ANSELH	set	393
   473                           
   474                           	psect	cinit
   475  0013                     start_initialization:	
   476  0013                     __initialization:	
   477                           
   478                           ; Clear objects allocated to COMMON
   479  0013  01F8               	clrf	__pbssCOMMON& (0+127)
   480  0014  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   481                           
   482                           ; Clear objects allocated to BANK0
   483  0015  1383               	bcf	3,7	;select IRP bank0
   484  0016  3020               	movlw	low __pbssBANK0
   485  0017  0084               	movwf	4
   486  0018  3047               	movlw	low (__pbssBANK0+39)
   487  0019  118A  25CB  118A   	fcall	clear_ram0
   488                           
   489                           ; Clear objects allocated to BANK1
   490  001C  30A0               	movlw	low __pbssBANK1
   491  001D  0084               	movwf	4
   492  001E  30AA               	movlw	low (__pbssBANK1+10)
   493  001F  118A  25CB  118A   	fcall	clear_ram0
   494                           
   495                           ; Initialize objects allocated to BANK0
   496  0022  118A  25D3  118A   	fcall	__pidataBANK0	;fetch initializer
   497  0025  00E6               	movwf	__pdataBANK0& (0+127)
   498  0026  118A  25D4  118A   	fcall	__pidataBANK0+1	;fetch initializer
   499  0029  00E7               	movwf	(__pdataBANK0+1)& (0+127)
   500  002A  118A  25D5  118A   	fcall	__pidataBANK0+2	;fetch initializer
   501  002D  00E8               	movwf	(__pdataBANK0+2)& (0+127)
   502  002E  118A  25D6  118A   	fcall	__pidataBANK0+3	;fetch initializer
   503  0031  00E9               	movwf	(__pdataBANK0+3)& (0+127)
   504  0032  118A  25D7  118A   	fcall	__pidataBANK0+4	;fetch initializer
   505  0035  00EA               	movwf	(__pdataBANK0+4)& (0+127)
   506  0036  118A  25D8         	fcall	__pidataBANK0+5	;fetch initializer
   507  0038  00EB               	movwf	(__pdataBANK0+5)& (0+127)
   508  0039                     end_of_initialization:	
   509                           ;End of C runtime variable initialization code
   510                           
   511  0039                     __end_of__initialization:	
   512  0039  0183               	clrf	3
   513  003A  118A  29D3         	ljmp	_main	;jump to C main() function
   514                           
   515                           	psect	bssCOMMON
   516  0078                     __pbssCOMMON:	
   517  0078                     _SensorOn:	
   518  0078                     	ds	2
   519                           
   520                           	psect	bssBANK0
   521  0020                     __pbssBANK0:	
   522  0020                     _t1:	
   523  0020                     	ds	2
   524  0022                     _t2:	
   525  0022                     	ds	2
   526  0024                     _t3:	
   527  0024                     	ds	2
   528  0026                     _t4:	
   529  0026                     	ds	2
   530  0028                     _dispctrl:	
   531  0028                     	ds	1
   532  0029                     _dist1:	
   533  0029                     	ds	10
   534  0033                     _dist2:	
   535  0033                     	ds	10
   536  003D                     _dist3:	
   537  003D                     	ds	10
   538                           
   539                           	psect	dataBANK0
   540  0066                     __pdataBANK0:	
   541  0066                     _lcdcolumns:	
   542  0066                     	ds	1
   543  0067                     _lcdrows:	
   544  0067                     	ds	1
   545  0068                     _distancia1:	
   546  0068                     	ds	1
   547  0069                     _distancia2:	
   548  0069                     	ds	1
   549  006A                     _distancia3:	
   550  006A                     	ds	1
   551  006B                     _distancia4:	
   552  006B                     	ds	1
   553                           
   554                           	psect	bssBANK1
   555  00A0                     __pbssBANK1:	
   556  00A0                     _dist4:	
   557  00A0                     	ds	10
   558                           
   559                           	psect	clrtext
   560  05CB                     clear_ram0:	
   561                           ;	Called with FSR containing the base address, and
   562                           ;	W with the last address+1
   563                           
   564  05CB  0064               	clrwdt	;clear the watchdog before getting into this loop
   565  05CC                     clrloop0:	
   566  05CC  0180               	clrf	0	;clear RAM location pointed to by FSR
   567  05CD  0A84               	incf	4,f	;increment pointer
   568  05CE  0604               	xorwf	4,w	;XOR with final address
   569  05CF  1903               	btfsc	3,2	;have we reached the end yet?
   570  05D0  3400               	retlw	0	;all done for this memory range, return
   571  05D1  0604               	xorwf	4,w	;XOR again to restore value
   572  05D2  2DCC               	goto	clrloop0	;do the next byte
   573                           
   574                           	psect	cstackCOMMON
   575  0070                     __pcstackCOMMON:	
   576  0070                     ?_Inicializaciones:	
   577  0070                     ?_Trigger0:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_Trigger1:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_Trigger2:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_Trigger3:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_lcd_ioinit:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_lcd_iowrite4:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_lcd_iowrite8:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_lcd_clear:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_lcd_on:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_main:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_echo:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ??_echo:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     lcd_iowrite8@data:	
   614                           ; 1 bytes @ 0x0
   615                           
   616                           
   617                           ; 1 bytes @ 0x0
   618  0070                     	ds	4
   619  0074                     ?_lcd_ioset:	
   620  0074                     ??_Trigger0:	
   621                           ; 1 bytes @ 0x4
   622                           
   623  0074                     ??_Trigger1:	
   624                           ; 1 bytes @ 0x4
   625                           
   626  0074                     ??_Trigger2:	
   627                           ; 1 bytes @ 0x4
   628                           
   629  0074                     ??_Trigger3:	
   630                           ; 1 bytes @ 0x4
   631                           
   632  0074                     ??_lcd_iowrite8:	
   633                           ; 1 bytes @ 0x4
   634                           
   635  0074                     ?___awdiv:	
   636                           ; 1 bytes @ 0x4
   637                           
   638  0074                     ?___lwdiv:	
   639                           ; 2 bytes @ 0x4
   640                           
   641  0074                     lcd_ioset@out:	
   642                           ; 2 bytes @ 0x4
   643                           
   644  0074                     ___awdiv@divisor:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0074                     ___lwdiv@divisor:	
   648                           ; 2 bytes @ 0x4
   649                           
   650                           
   651                           ; 2 bytes @ 0x4
   652  0074                     	ds	1
   653  0075                     ??_lcd_ioset:	
   654  0075                     lcd_ioset@pin:	
   655                           ; 1 bytes @ 0x5
   656                           
   657                           
   658                           ; 1 bytes @ 0x5
   659  0075                     	ds	1
   660  0076                     ??_lcd_ioinit:	
   661  0076                     ??_lcd_iowrite4:	
   662                           ; 1 bytes @ 0x6
   663                           
   664  0076                     ___awdiv@dividend:	
   665                           ; 1 bytes @ 0x6
   666                           
   667  0076                     ___lwdiv@dividend:	
   668                           ; 2 bytes @ 0x6
   669                           
   670                           
   671                           ; 2 bytes @ 0x6
   672  0076                     	ds	2
   673  0078                     ??_lcd_puts:	
   674                           
   675                           	psect	cstackBANK0
   676  0047                     __pcstackBANK0:	
   677                           ; 1 bytes @ 0x8
   678                           
   679  0047                     ??___awdiv:	
   680  0047                     ??___lwdiv:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0047                     lcd_ioinit@iodata:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0047                     lcd_iowrite4@data:	
   687                           ; 1 bytes @ 0x0
   688                           
   689                           
   690                           ; 1 bytes @ 0x0
   691  0047                     	ds	1
   692  0048                     lcd_ioinit@i:	
   693  0048                     lcd_iowrite4@i:	
   694                           ; 1 bytes @ 0x1
   695                           
   696  0048                     ___awdiv@counter:	
   697                           ; 1 bytes @ 0x1
   698                           
   699  0048                     ___lwdiv@counter:	
   700                           ; 1 bytes @ 0x1
   701                           
   702                           
   703                           ; 1 bytes @ 0x1
   704  0048                     	ds	1
   705  0049                     ?_lcd_send:	
   706  0049                     lcd_send@rs:	
   707                           ; 1 bytes @ 0x2
   708                           
   709  0049                     ___awdiv@sign:	
   710                           ; 1 bytes @ 0x2
   711                           
   712  0049                     ___lwdiv@quotient:	
   713                           ; 1 bytes @ 0x2
   714                           
   715                           
   716                           ; 2 bytes @ 0x2
   717  0049                     	ds	1
   718  004A                     ??_lcd_send:	
   719  004A                     ___awdiv@quotient:	
   720                           ; 1 bytes @ 0x3
   721                           
   722                           
   723                           ; 2 bytes @ 0x3
   724  004A                     	ds	1
   725  004B                     ?___lwmod:	
   726  004B                     lcd_send@data:	
   727                           ; 2 bytes @ 0x4
   728                           
   729  004B                     ___lwmod@divisor:	
   730                           ; 1 bytes @ 0x4
   731                           
   732                           
   733                           ; 2 bytes @ 0x4
   734  004B                     	ds	1
   735  004C                     ?_lcd_init:	
   736  004C                     ??_lcd_clear:	
   737                           ; 1 bytes @ 0x5
   738                           
   739  004C                     ??_lcd_on:	
   740                           ; 1 bytes @ 0x5
   741                           
   742  004C                     ?_lcd_goto:	
   743                           ; 1 bytes @ 0x5
   744                           
   745  004C                     ?_lcd_puts:	
   746                           ; 1 bytes @ 0x5
   747                           
   748  004C                     lcd_init@cols:	
   749                           ; 1 bytes @ 0x5
   750                           
   751  004C                     lcd_goto@row:	
   752                           ; 1 bytes @ 0x5
   753                           
   754  004C                     lcd_puts@string:	
   755                           ; 1 bytes @ 0x5
   756                           
   757                           
   758                           ; 2 bytes @ 0x5
   759  004C                     	ds	1
   760  004D                     ??_lcd_goto:	
   761  004D                     lcd_init@rows:	
   762                           ; 1 bytes @ 0x6
   763                           
   764  004D                     ___lwmod@dividend:	
   765                           ; 1 bytes @ 0x6
   766                           
   767                           
   768                           ; 2 bytes @ 0x6
   769  004D                     	ds	1
   770  004E                     ??_lcd_init:	
   771  004E                     lcd_goto@col:	
   772                           ; 1 bytes @ 0x7
   773                           
   774                           
   775                           ; 1 bytes @ 0x7
   776  004E                     	ds	1
   777  004F                     ??___lwmod:	
   778                           
   779                           ; 1 bytes @ 0x8
   780  004F                     	ds	1
   781  0050                     ___lwmod@counter:	
   782                           
   783                           ; 1 bytes @ 0x9
   784  0050                     	ds	1
   785  0051                     ?_sprintf:	
   786  0051                     lcd_init@iodata:	
   787                           ; 2 bytes @ 0xA
   788                           
   789  0051                     sprintf@f:	
   790                           ; 1 bytes @ 0xA
   791                           
   792                           
   793                           ; 1 bytes @ 0xA
   794  0051                     	ds	1
   795  0052                     ??_Inicializaciones:	
   796                           
   797                           ; 1 bytes @ 0xB
   798  0052                     	ds	2
   799  0054                     ??_sprintf:	
   800                           
   801                           ; 1 bytes @ 0xD
   802  0054                     	ds	3
   803  0057                     sprintf@ap:	
   804                           
   805                           ; 1 bytes @ 0x10
   806  0057                     	ds	1
   807  0058                     sprintf@flag:	
   808                           
   809                           ; 1 bytes @ 0x11
   810  0058                     	ds	1
   811  0059                     sprintf@prec:	
   812                           
   813                           ; 1 bytes @ 0x12
   814  0059                     	ds	1
   815  005A                     sprintf@val:	
   816                           
   817                           ; 2 bytes @ 0x13
   818  005A                     	ds	2
   819  005C                     sprintf@sp:	
   820                           
   821                           ; 1 bytes @ 0x15
   822  005C                     	ds	1
   823  005D                     sprintf@c:	
   824                           
   825                           ; 1 bytes @ 0x16
   826  005D                     	ds	1
   827  005E                     ?_CalcularDistancia:	
   828  005E                     CalcularDistancia@dist:	
   829                           ; 1 bytes @ 0x17
   830                           
   831                           
   832                           ; 2 bytes @ 0x17
   833  005E                     	ds	2
   834  0060                     CalcularDistancia@distancia:	
   835                           
   836                           ; 1 bytes @ 0x19
   837  0060                     	ds	1
   838  0061                     CalcularDistancia@size:	
   839                           
   840                           ; 2 bytes @ 0x1A
   841  0061                     	ds	2
   842  0063                     ??_CalcularDistancia:	
   843                           
   844                           ; 1 bytes @ 0x1C
   845  0063                     	ds	1
   846  0064                     ??_main:	
   847                           
   848                           ; 1 bytes @ 0x1D
   849  0064                     	ds	2
   850                           
   851                           	psect	maintext
   852  01D3                     __pmaintext:	
   853 ;;
   854 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   855 ;;
   856 ;; *************** function _main *****************
   857 ;; Defined at:
   858 ;;		line 52 in file "main.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : B00/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   872 ;;      Params:         0       0       0       0
   873 ;;      Locals:         0       0       0       0
   874 ;;      Temps:          0       2       0       0
   875 ;;      Totals:         0       2       0       0
   876 ;;Total ram usage:        2 bytes
   877 ;; Hardware stack levels required when called:    6
   878 ;; This function calls:
   879 ;;		_CalcularDistancia
   880 ;;		_Inicializaciones
   881 ;;		_Trigger0
   882 ;;		_Trigger1
   883 ;;		_Trigger2
   884 ;;		_Trigger3
   885 ;;		_lcd_goto
   886 ;;		_lcd_puts
   887 ;; This function is called by:
   888 ;;		Startup code after reset
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _main
   894  01D3                     _main:	
   895                           
   896                           ;main.c: 54: Inicializaciones();
   897                           
   898                           ;incstack = 0
   899                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   900  01D3  118A  2390  118A   	fcall	_Inicializaciones
   901  01D6                     l2160:	
   902                           ;main.c: 56: while(1)
   903                           
   904                           
   905                           ;main.c: 57: {
   906                           ;main.c: 66: Trigger0();
   907  01D6  118A  25BF  118A   	fcall	_Trigger0
   908                           
   909                           ;main.c: 67: _delay((unsigned long)((40)*(8000000/4000.0)));
   910  01D9  3068               	movlw	104
   911  01DA  1283               	bcf	3,5	;RP0=0, select bank0
   912  01DB  1303               	bcf	3,6	;RP1=0, select bank0
   913  01DC  00E5               	movwf	??_main+1
   914  01DD  30E4               	movlw	228
   915  01DE  00E4               	movwf	??_main
   916  01DF                     u2107:	
   917  01DF  0BE4               	decfsz	??_main,f
   918  01E0  29DF               	goto	u2107
   919  01E1  0BE5               	decfsz	??_main+1,f
   920  01E2  29DF               	goto	u2107
   921  01E3  0000               	nop
   922                           
   923                           ;main.c: 69: CalcularDistancia(t1, &distancia1, sizeof(distancia1));
   924  01E4  1283               	bcf	3,5	;RP0=0, select bank0
   925  01E5  1303               	bcf	3,6	;RP1=0, select bank0
   926  01E6  0821               	movf	_t1+1,w
   927  01E7  00DF               	movwf	CalcularDistancia@dist+1
   928  01E8  0820               	movf	_t1,w
   929  01E9  00DE               	movwf	CalcularDistancia@dist
   930  01EA  3068               	movlw	(low (_distancia1| 0))& (0+255)
   931  01EB  00E4               	movwf	??_main
   932  01EC  0864               	movf	??_main,w
   933  01ED  00E0               	movwf	CalcularDistancia@distancia
   934  01EE  3001               	movlw	1
   935  01EF  00E1               	movwf	CalcularDistancia@size
   936  01F0  3000               	movlw	0
   937  01F1  00E2               	movwf	CalcularDistancia@size+1
   938  01F2  118A  24E5  118A   	fcall	_CalcularDistancia
   939                           
   940                           ;main.c: 71: Trigger1();
   941  01F5  118A  25B3  118A   	fcall	_Trigger1
   942                           
   943                           ;main.c: 72: _delay((unsigned long)((40)*(8000000/4000.0)));
   944  01F8  3068               	movlw	104
   945  01F9  1283               	bcf	3,5	;RP0=0, select bank0
   946  01FA  1303               	bcf	3,6	;RP1=0, select bank0
   947  01FB  00E5               	movwf	??_main+1
   948  01FC  30E4               	movlw	228
   949  01FD  00E4               	movwf	??_main
   950  01FE                     u2117:	
   951  01FE  0BE4               	decfsz	??_main,f
   952  01FF  29FE               	goto	u2117
   953  0200  0BE5               	decfsz	??_main+1,f
   954  0201  29FE               	goto	u2117
   955  0202  0000               	nop
   956                           
   957                           ;main.c: 73: CalcularDistancia(t2, &distancia2, sizeof(distancia2));
   958  0203  1283               	bcf	3,5	;RP0=0, select bank0
   959  0204  1303               	bcf	3,6	;RP1=0, select bank0
   960  0205  0823               	movf	_t2+1,w
   961  0206  00DF               	movwf	CalcularDistancia@dist+1
   962  0207  0822               	movf	_t2,w
   963  0208  00DE               	movwf	CalcularDistancia@dist
   964  0209  3069               	movlw	(low (_distancia2| 0))& (0+255)
   965  020A  00E4               	movwf	??_main
   966  020B  0864               	movf	??_main,w
   967  020C  00E0               	movwf	CalcularDistancia@distancia
   968  020D  3001               	movlw	1
   969  020E  00E1               	movwf	CalcularDistancia@size
   970  020F  3000               	movlw	0
   971  0210  00E2               	movwf	CalcularDistancia@size+1
   972  0211  118A  24E5  118A   	fcall	_CalcularDistancia
   973                           
   974                           ;main.c: 75: Trigger2();
   975  0214  118A  25A7  118A   	fcall	_Trigger2
   976                           
   977                           ;main.c: 76: _delay((unsigned long)((40)*(8000000/4000.0)));
   978  0217  3068               	movlw	104
   979  0218  1283               	bcf	3,5	;RP0=0, select bank0
   980  0219  1303               	bcf	3,6	;RP1=0, select bank0
   981  021A  00E5               	movwf	??_main+1
   982  021B  30E4               	movlw	228
   983  021C  00E4               	movwf	??_main
   984  021D                     u2127:	
   985  021D  0BE4               	decfsz	??_main,f
   986  021E  2A1D               	goto	u2127
   987  021F  0BE5               	decfsz	??_main+1,f
   988  0220  2A1D               	goto	u2127
   989  0221  0000               	nop
   990                           
   991                           ;main.c: 77: CalcularDistancia(t3, &distancia3, sizeof(distancia3));
   992  0222  1283               	bcf	3,5	;RP0=0, select bank0
   993  0223  1303               	bcf	3,6	;RP1=0, select bank0
   994  0224  0825               	movf	_t3+1,w
   995  0225  00DF               	movwf	CalcularDistancia@dist+1
   996  0226  0824               	movf	_t3,w
   997  0227  00DE               	movwf	CalcularDistancia@dist
   998  0228  306A               	movlw	(low (_distancia3| 0))& (0+255)
   999  0229  00E4               	movwf	??_main
  1000  022A  0864               	movf	??_main,w
  1001  022B  00E0               	movwf	CalcularDistancia@distancia
  1002  022C  3001               	movlw	1
  1003  022D  00E1               	movwf	CalcularDistancia@size
  1004  022E  3000               	movlw	0
  1005  022F  00E2               	movwf	CalcularDistancia@size+1
  1006  0230  118A  24E5  118A   	fcall	_CalcularDistancia
  1007                           
  1008                           ;main.c: 79: Trigger3();
  1009  0233  118A  259B  118A   	fcall	_Trigger3
  1010                           
  1011                           ;main.c: 80: _delay((unsigned long)((40)*(8000000/4000.0)));
  1012  0236  3068               	movlw	104
  1013  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0239  00E5               	movwf	??_main+1
  1016  023A  30E4               	movlw	228
  1017  023B  00E4               	movwf	??_main
  1018  023C                     u2137:	
  1019  023C  0BE4               	decfsz	??_main,f
  1020  023D  2A3C               	goto	u2137
  1021  023E  0BE5               	decfsz	??_main+1,f
  1022  023F  2A3C               	goto	u2137
  1023  0240  0000               	nop
  1024                           
  1025                           ;main.c: 81: CalcularDistancia(t4, &distancia4, sizeof(distancia4));
  1026  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0243  0827               	movf	_t4+1,w
  1029  0244  00DF               	movwf	CalcularDistancia@dist+1
  1030  0245  0826               	movf	_t4,w
  1031  0246  00DE               	movwf	CalcularDistancia@dist
  1032  0247  306B               	movlw	(low (_distancia4| 0))& (0+255)
  1033  0248  00E4               	movwf	??_main
  1034  0249  0864               	movf	??_main,w
  1035  024A  00E0               	movwf	CalcularDistancia@distancia
  1036  024B  3001               	movlw	1
  1037  024C  00E1               	movwf	CalcularDistancia@size
  1038  024D  3000               	movlw	0
  1039  024E  00E2               	movwf	CalcularDistancia@size+1
  1040  024F  118A  24E5  118A   	fcall	_CalcularDistancia
  1041                           
  1042                           ;main.c: 83: lcd_goto(0, 1);
  1043  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0254  01CC               	clrf	lcd_goto@row
  1046  0255  0ACC               	incf	lcd_goto@row,f
  1047  0256  3000               	movlw	0
  1048  0257  118A  2557  118A   	fcall	_lcd_goto
  1049                           
  1050                           ;main.c: 84: lcd_puts(dist1);
  1051  025A  3029               	movlw	(low (_dist1| 0))& (0+255)
  1052  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1053  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1054  025D  00CC               	movwf	lcd_puts@string
  1055  025E  3000               	movlw	0
  1056  025F  00CD               	movwf	lcd_puts@string+1
  1057  0260  118A  2536  118A   	fcall	_lcd_puts
  1058                           
  1059                           ;main.c: 85: lcd_puts(dist2);
  1060  0263  3033               	movlw	(low (_dist2| 0))& (0+255)
  1061  0264  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0265  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0266  00CC               	movwf	lcd_puts@string
  1064  0267  3000               	movlw	0
  1065  0268  00CD               	movwf	lcd_puts@string+1
  1066  0269  118A  2536  118A   	fcall	_lcd_puts
  1067                           
  1068                           ;main.c: 86: lcd_puts(dist3);
  1069  026C  303D               	movlw	(low (_dist3| 0))& (0+255)
  1070  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1071  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1072  026F  00CC               	movwf	lcd_puts@string
  1073  0270  3000               	movlw	0
  1074  0271  00CD               	movwf	lcd_puts@string+1
  1075  0272  118A  2536  118A   	fcall	_lcd_puts
  1076                           
  1077                           ;main.c: 87: lcd_puts(dist4);
  1078  0275  30A0               	movlw	(low (_dist4| 0))& (0+255)
  1079  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0277  1303               	bcf	3,6	;RP1=0, select bank0
  1081  0278  00CC               	movwf	lcd_puts@string
  1082  0279  3000               	movlw	0
  1083  027A  00CD               	movwf	lcd_puts@string+1
  1084  027B  118A  2536  118A   	fcall	_lcd_puts
  1085  027E  29D6               	goto	l2160
  1086  027F                     __end_of_main:	
  1087                           ;main.c: 88: }
  1088                           ;main.c: 89: return;
  1089                           
  1090                           
  1091                           	psect	text1
  1092  059B                     __ptext1:	
  1093 ;; *************** function _Trigger3 *****************
  1094 ;; Defined at:
  1095 ;;		line 55 in file "Funciones.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1109 ;;      Params:         0       0       0       0
  1110 ;;      Locals:         0       0       0       0
  1111 ;;      Temps:          1       0       0       0
  1112 ;;      Totals:         1       0       0       0
  1113 ;;Total ram usage:        1 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    1
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           
  1124                           ;psect for function _Trigger3
  1125  059B                     _Trigger3:	
  1126                           
  1127                           ;Funciones.c: 56: RB3 = 1;
  1128                           
  1129                           ;incstack = 0
  1130                           ; Regs used in _Trigger3: [wreg]
  1131  059B  1283               	bcf	3,5	;RP0=0, select bank0
  1132  059C  1303               	bcf	3,6	;RP1=0, select bank0
  1133  059D  1586               	bsf	6,3	;volatile
  1134                           
  1135                           ;Funciones.c: 57: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1136  059E  3006               	movlw	6
  1137  059F  00F4               	movwf	??_Trigger3
  1138  05A0                     u2147:	
  1139  05A0  0BF4               	decfsz	??_Trigger3,f
  1140  05A1  2DA0               	goto	u2147
  1141  05A2  0000               	nop
  1142                           
  1143                           ;Funciones.c: 58: RB3 = 0;
  1144  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  1145  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  1146  05A5  1186               	bcf	6,3	;volatile
  1147  05A6  0008               	return
  1148  05A7                     __end_of_Trigger3:	
  1149                           
  1150                           	psect	text2
  1151  05A7                     __ptext2:	
  1152 ;; *************** function _Trigger2 *****************
  1153 ;; Defined at:
  1154 ;;		line 49 in file "Funciones.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1168 ;;      Params:         0       0       0       0
  1169 ;;      Locals:         0       0       0       0
  1170 ;;      Temps:          1       0       0       0
  1171 ;;      Totals:         1       0       0       0
  1172 ;;Total ram usage:        1 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    1
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           
  1183                           ;psect for function _Trigger2
  1184  05A7                     _Trigger2:	
  1185                           
  1186                           ;Funciones.c: 50: RB2 = 1;
  1187                           
  1188                           ;incstack = 0
  1189                           ; Regs used in _Trigger2: [wreg]
  1190  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  1191  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  1192  05A9  1506               	bsf	6,2	;volatile
  1193                           
  1194                           ;Funciones.c: 51: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1195  05AA  3006               	movlw	6
  1196  05AB  00F4               	movwf	??_Trigger2
  1197  05AC                     u2157:	
  1198  05AC  0BF4               	decfsz	??_Trigger2,f
  1199  05AD  2DAC               	goto	u2157
  1200  05AE  0000               	nop
  1201                           
  1202                           ;Funciones.c: 52: RB2 = 0;
  1203  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1204  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1205  05B1  1106               	bcf	6,2	;volatile
  1206  05B2  0008               	return
  1207  05B3                     __end_of_Trigger2:	
  1208                           
  1209                           	psect	text3
  1210  05B3                     __ptext3:	
  1211 ;; *************** function _Trigger1 *****************
  1212 ;; Defined at:
  1213 ;;		line 43 in file "Funciones.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;		None
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1227 ;;      Params:         0       0       0       0
  1228 ;;      Locals:         0       0       0       0
  1229 ;;      Temps:          1       0       0       0
  1230 ;;      Totals:         1       0       0       0
  1231 ;;Total ram usage:        1 bytes
  1232 ;; Hardware stack levels used:    1
  1233 ;; Hardware stack levels required when called:    1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           
  1242                           ;psect for function _Trigger1
  1243  05B3                     _Trigger1:	
  1244                           
  1245                           ;Funciones.c: 44: RB1 = 1;
  1246                           
  1247                           ;incstack = 0
  1248                           ; Regs used in _Trigger1: [wreg]
  1249  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1250  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1251  05B5  1486               	bsf	6,1	;volatile
  1252                           
  1253                           ;Funciones.c: 45: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1254  05B6  3006               	movlw	6
  1255  05B7  00F4               	movwf	??_Trigger1
  1256  05B8                     u2167:	
  1257  05B8  0BF4               	decfsz	??_Trigger1,f
  1258  05B9  2DB8               	goto	u2167
  1259  05BA  0000               	nop
  1260                           
  1261                           ;Funciones.c: 46: RB1 = 0;
  1262  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  1263  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  1264  05BD  1086               	bcf	6,1	;volatile
  1265  05BE  0008               	return
  1266  05BF                     __end_of_Trigger1:	
  1267                           
  1268                           	psect	text4
  1269  05BF                     __ptext4:	
  1270 ;; *************** function _Trigger0 *****************
  1271 ;; Defined at:
  1272 ;;		line 37 in file "Funciones.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1286 ;;      Params:         0       0       0       0
  1287 ;;      Locals:         0       0       0       0
  1288 ;;      Temps:          1       0       0       0
  1289 ;;      Totals:         1       0       0       0
  1290 ;;Total ram usage:        1 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _Trigger0
  1302  05BF                     _Trigger0:	
  1303                           
  1304                           ;Funciones.c: 38: RB0 = 1;
  1305                           
  1306                           ;incstack = 0
  1307                           ; Regs used in _Trigger0: [wreg]
  1308  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1309  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1310  05C1  1406               	bsf	6,0	;volatile
  1311                           
  1312                           ;Funciones.c: 39: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1313  05C2  3006               	movlw	6
  1314  05C3  00F4               	movwf	??_Trigger0
  1315  05C4                     u2177:	
  1316  05C4  0BF4               	decfsz	??_Trigger0,f
  1317  05C5  2DC4               	goto	u2177
  1318  05C6  0000               	nop
  1319                           
  1320                           ;Funciones.c: 40: RB0 = 0;
  1321  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  1322  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  1323  05C9  1006               	bcf	6,0	;volatile
  1324  05CA  0008               	return
  1325  05CB                     __end_of_Trigger0:	
  1326                           
  1327                           	psect	text5
  1328  0390                     __ptext5:	
  1329 ;; *************** function _Inicializaciones *****************
  1330 ;; Defined at:
  1331 ;;		line 5 in file "Funciones.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;		None
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1345 ;;      Params:         0       0       0       0
  1346 ;;      Locals:         0       0       0       0
  1347 ;;      Temps:          0       2       0       0
  1348 ;;      Totals:         0       2       0       0
  1349 ;;Total ram usage:        2 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    5
  1352 ;; This function calls:
  1353 ;;		_lcd_clear
  1354 ;;		_lcd_goto
  1355 ;;		_lcd_init
  1356 ;;		_lcd_on
  1357 ;;		_lcd_puts
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function _Inicializaciones
  1365  0390                     _Inicializaciones:	
  1366                           
  1367                           ;Funciones.c: 6: OSCCON = 0b01110101;
  1368                           
  1369                           ;incstack = 0
  1370                           ; Regs used in _Inicializaciones: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1371  0390  3075               	movlw	117
  1372  0391  1683               	bsf	3,5	;RP0=1, select bank1
  1373  0392  1303               	bcf	3,6	;RP1=0, select bank1
  1374  0393  008F               	movwf	15	;volatile
  1375                           
  1376                           ;Funciones.c: 9: TRISB = 0b11110000;
  1377  0394  30F0               	movlw	240
  1378  0395  0086               	movwf	6	;volatile
  1379                           
  1380                           ;Funciones.c: 10: PORTB = 0b00000000;
  1381  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1382  0397  1303               	bcf	3,6	;RP1=0, select bank0
  1383  0398  0186               	clrf	6	;volatile
  1384                           
  1385                           ;Funciones.c: 11: ANSELH = 0b00000000;
  1386  0399  1683               	bsf	3,5	;RP0=1, select bank3
  1387  039A  1703               	bsf	3,6	;RP1=1, select bank3
  1388  039B  0189               	clrf	9	;volatile
  1389                           
  1390                           ;Funciones.c: 14: TRISC = 0b00000011;
  1391  039C  3003               	movlw	3
  1392  039D  1683               	bsf	3,5	;RP0=1, select bank1
  1393  039E  1303               	bcf	3,6	;RP1=0, select bank1
  1394  039F  0087               	movwf	7	;volatile
  1395                           
  1396                           ;Funciones.c: 15: PORTC = 0b00000000;
  1397  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  1398  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  1399  03A2  0187               	clrf	7	;volatile
  1400                           
  1401                           ;Funciones.c: 20: T1CON = 0b00010000;
  1402  03A3  3010               	movlw	16
  1403  03A4  0090               	movwf	16	;volatile
  1404                           
  1405                           ;Funciones.c: 23: INTCON = 0b00001000;
  1406  03A5  3008               	movlw	8
  1407  03A6  008B               	movwf	11	;volatile
  1408                           
  1409                           ;Funciones.c: 24: IOCB = 0b11110000;
  1410  03A7  30F0               	movlw	240
  1411  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  1412  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  1413  03AA  0096               	movwf	22	;volatile
  1414                           
  1415                           ;Funciones.c: 25: PIE1 = 0b00000001;
  1416  03AB  3001               	movlw	1
  1417  03AC  008C               	movwf	12	;volatile
  1418                           
  1419                           ;Funciones.c: 26: PIR1 = 0b00000000;
  1420  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  1421  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  1422  03AF  018C               	clrf	12	;volatile
  1423                           
  1424                           ;Funciones.c: 27: GIE = 1;
  1425  03B0  178B               	bsf	11,7	;volatile
  1426                           
  1427                           ;Funciones.c: 29: lcd_init(0, 16, 2);
  1428  03B1  3010               	movlw	16
  1429  03B2  00D2               	movwf	??_Inicializaciones
  1430  03B3  0852               	movf	??_Inicializaciones,w
  1431  03B4  00CC               	movwf	lcd_init@cols
  1432  03B5  3002               	movlw	2
  1433  03B6  00D3               	movwf	??_Inicializaciones+1
  1434  03B7  0853               	movf	??_Inicializaciones+1,w
  1435  03B8  00CD               	movwf	lcd_init@rows
  1436  03B9  3000               	movlw	0
  1437  03BA  118A  203C  118A   	fcall	_lcd_init
  1438                           
  1439                           ;Funciones.c: 30: lcd_clear();
  1440  03BD  118A  2578  118A   	fcall	_lcd_clear
  1441                           
  1442                           ;Funciones.c: 31: lcd_on();
  1443  03C0  118A  258B  118A   	fcall	_lcd_on
  1444                           
  1445                           ;Funciones.c: 32: lcd_goto(0, 0);
  1446  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  1447  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  1448  03C5  01CC               	clrf	lcd_goto@row
  1449  03C6  3000               	movlw	0
  1450  03C7  118A  2557  118A   	fcall	_lcd_goto
  1451                           
  1452                           ;Funciones.c: 33: lcd_puts("Distancias: ");
  1453  03CA  300F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1454  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1455  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1456  03CD  00CC               	movwf	lcd_puts@string
  1457  03CE  3080               	movlw	128
  1458  03CF  00CD               	movwf	lcd_puts@string+1
  1459  03D0  118A  2536         	fcall	_lcd_puts
  1460  03D2  0008               	return
  1461  03D3                     __end_of_Inicializaciones:	
  1462                           
  1463                           	psect	text6
  1464  0536                     __ptext6:	
  1465 ;; *************** function _lcd_puts *****************
  1466 ;; Defined at:
  1467 ;;		line 178 in file "LCD.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  string          2    5[BANK0 ] PTR const unsigned char 
  1470 ;;		 -> STR_1(13), dist4(10), dist3(10), dist2(10), 
  1471 ;;		 -> dist1(10), 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1483 ;;      Params:         0       2       0       0
  1484 ;;      Locals:         0       0       0       0
  1485 ;;      Temps:          0       0       0       0
  1486 ;;      Totals:         0       2       0       0
  1487 ;;Total ram usage:        2 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    4
  1490 ;; This function calls:
  1491 ;;		_lcd_send
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;;		_Inicializaciones
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _lcd_puts
  1500  0536                     _lcd_puts:	
  1501  0536                     l1962:	
  1502                           ;LCD.c: 180: while (*string != '\0')
  1503                           
  1504                           ;incstack = 0
  1505                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1506                           
  1507  0536  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0537  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0538  084D               	movf	lcd_puts@string+1,w
  1510  0539  00FF               	movwf	127
  1511  053A  084C               	movf	lcd_puts@string,w
  1512  053B  0084               	movwf	4
  1513  053C  118A  2483  118A   	fcall	stringtab
  1514  053F  3A00               	xorlw	0
  1515  0540  1903               	btfsc	3,2
  1516  0541  0008               	return
  1517                           
  1518                           ;LCD.c: 181: lcd_send( *string++, 1 );
  1519  0542  1283               	bcf	3,5	;RP0=0, select bank0
  1520  0543  1303               	bcf	3,6	;RP1=0, select bank0
  1521  0544  01C9               	clrf	lcd_send@rs
  1522  0545  0AC9               	incf	lcd_send@rs,f
  1523  0546  084D               	movf	lcd_puts@string+1,w
  1524  0547  00FF               	movwf	127
  1525  0548  084C               	movf	lcd_puts@string,w
  1526  0549  0084               	movwf	4
  1527  054A  118A  2483  118A   	fcall	stringtab
  1528  054D  118A  24B4  118A   	fcall	_lcd_send
  1529  0550  3001               	movlw	1
  1530  0551  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0552  1303               	bcf	3,6	;RP1=0, select bank0
  1532  0553  07CC               	addwf	lcd_puts@string,f
  1533  0554  1803               	skipnc
  1534  0555  0ACD               	incf	lcd_puts@string+1,f
  1535  0556  2D36               	goto	l1962
  1536  0557                     __end_of_lcd_puts:	
  1537                           
  1538                           	psect	text7
  1539  058B                     __ptext7:	
  1540 ;; *************** function _lcd_on *****************
  1541 ;; Defined at:
  1542 ;;		line 91 in file "LCD.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1556 ;;      Params:         0       0       0       0
  1557 ;;      Locals:         0       0       0       0
  1558 ;;      Temps:          0       1       0       0
  1559 ;;      Totals:         0       1       0       0
  1560 ;;Total ram usage:        1 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    4
  1563 ;; This function calls:
  1564 ;;		_lcd_send
  1565 ;; This function is called by:
  1566 ;;		_Inicializaciones
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           
  1571                           ;psect for function _lcd_on
  1572  058B                     _lcd_on:	
  1573                           
  1574                           ;LCD.c: 93: dispctrl |= (1<<2);
  1575                           
  1576                           ;incstack = 0
  1577                           ; Regs used in _lcd_on: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1578  058B  1283               	bcf	3,5	;RP0=0, select bank0
  1579  058C  1303               	bcf	3,6	;RP1=0, select bank0
  1580  058D  1528               	bsf	_dispctrl,2
  1581                           
  1582                           ;LCD.c: 94: lcd_send( E_DISPLAY_ON_OFF_CTRL | dispctrl, 0 );
  1583  058E  01C9               	clrf	lcd_send@rs
  1584  058F  0828               	movf	_dispctrl,w
  1585  0590  3808               	iorlw	8
  1586  0591  118A  24B4  118A   	fcall	_lcd_send
  1587                           
  1588                           ;LCD.c: 95: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1589  0594  3021               	movlw	33
  1590  0595  1283               	bcf	3,5	;RP0=0, select bank0
  1591  0596  1303               	bcf	3,6	;RP1=0, select bank0
  1592  0597  00CC               	movwf	??_lcd_on
  1593  0598                     u2187:	
  1594  0598  0BCC               	decfsz	??_lcd_on,f
  1595  0599  2D98               	goto	u2187
  1596  059A  0008               	return
  1597  059B                     __end_of_lcd_on:	
  1598                           
  1599                           	psect	text8
  1600  003C                     __ptext8:	
  1601 ;; *************** function _lcd_init *****************
  1602 ;; Defined at:
  1603 ;;		line 33 in file "LCD.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  iodata          1    wreg     PTR void 
  1606 ;;		 -> NULL(0), 
  1607 ;;  cols            1    5[BANK0 ] unsigned char 
  1608 ;;  rows            1    6[BANK0 ] unsigned char 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  iodata          1   10[BANK0 ] PTR void 
  1611 ;;		 -> NULL(0), 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      unsigned char 
  1614 ;; Registers used:
  1615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1621 ;;      Params:         0       2       0       0
  1622 ;;      Locals:         0       1       0       0
  1623 ;;      Temps:          0       3       0       0
  1624 ;;      Totals:         0       6       0       0
  1625 ;;Total ram usage:        6 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    4
  1628 ;; This function calls:
  1629 ;;		_lcd_ioinit
  1630 ;;		_lcd_iowrite4
  1631 ;;		_lcd_send
  1632 ;; This function is called by:
  1633 ;;		_Inicializaciones
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function _lcd_init
  1639  003C                     _lcd_init:	
  1640                           
  1641                           ;incstack = 0
  1642                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1643                           ;lcd_init@iodata stored from wreg
  1644  003C  1283               	bcf	3,5	;RP0=0, select bank0
  1645  003D  1303               	bcf	3,6	;RP1=0, select bank0
  1646  003E  00D1               	movwf	lcd_init@iodata
  1647                           
  1648                           ;LCD.c: 36: iomode = lcd_ioinit(iodata);
  1649  003F  0851               	movf	lcd_init@iodata,w
  1650  0040  118A  2513  118A   	fcall	_lcd_ioinit
  1651  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1652  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1653  0045  00CE               	movwf	??_lcd_init
  1654  0046  084E               	movf	??_lcd_init,w
  1655  0047  00EC               	movwf	_iomode
  1656                           
  1657                           ;LCD.c: 37: lcdrows = rows;
  1658  0048  084D               	movf	lcd_init@rows,w
  1659  0049  00CE               	movwf	??_lcd_init
  1660  004A  084E               	movf	??_lcd_init,w
  1661  004B  00E7               	movwf	_lcdrows
  1662                           
  1663                           ;LCD.c: 38: lcdcolumns = cols;
  1664  004C  084C               	movf	lcd_init@cols,w
  1665  004D  00CE               	movwf	??_lcd_init
  1666  004E  084E               	movf	??_lcd_init,w
  1667  004F  00E6               	movwf	_lcdcolumns
  1668                           
  1669                           ;LCD.c: 41: _delay((unsigned long)((100)*(8000000/4000.0)));
  1670  0050  3002               	movlw	2
  1671  0051  00D0               	movwf	??_lcd_init+2
  1672  0052  3004               	movlw	4
  1673  0053  00CF               	movwf	??_lcd_init+1
  1674  0054  30BA               	movlw	186
  1675  0055  00CE               	movwf	??_lcd_init
  1676  0056                     u2197:	
  1677  0056  0BCE               	decfsz	??_lcd_init,f
  1678  0057  2856               	goto	u2197
  1679  0058  0BCF               	decfsz	??_lcd_init+1,f
  1680  0059  2856               	goto	u2197
  1681  005A  0BD0               	decfsz	??_lcd_init+2,f
  1682  005B  2856               	goto	u2197
  1683  005C  0000               	nop
  1684                           
  1685                           ;LCD.c: 44: if (iomode == 4) {
  1686  005D  3004               	movlw	4
  1687  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1688  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1689  0060  066C               	xorwf	_iomode,w
  1690  0061  1D03               	btfss	3,2
  1691  0062  28A1               	goto	l1912
  1692                           
  1693                           ;LCD.c: 47: lcd_iowrite4(0x03);
  1694  0063  3003               	movlw	3
  1695  0064  118A  23D3  118A   	fcall	_lcd_iowrite4
  1696                           
  1697                           ;LCD.c: 48: _delay((unsigned long)((5)*(8000000/4000.0)));
  1698  0067  300D               	movlw	13
  1699  0068  1283               	bcf	3,5	;RP0=0, select bank0
  1700  0069  1303               	bcf	3,6	;RP1=0, select bank0
  1701  006A  00CF               	movwf	??_lcd_init+1
  1702  006B  30FB               	movlw	251
  1703  006C  00CE               	movwf	??_lcd_init
  1704  006D                     u2207:	
  1705  006D  0BCE               	decfsz	??_lcd_init,f
  1706  006E  286D               	goto	u2207
  1707  006F  0BCF               	decfsz	??_lcd_init+1,f
  1708  0070  286D               	goto	u2207
  1709  0071  2872               	nop2
  1710                           
  1711                           ;LCD.c: 49: lcd_iowrite4(0x03);
  1712  0072  3003               	movlw	3
  1713  0073  118A  23D3  118A   	fcall	_lcd_iowrite4
  1714                           
  1715                           ;LCD.c: 50: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1716  0076  304F               	movlw	79
  1717  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1719  0079  00CE               	movwf	??_lcd_init
  1720  007A                     u2217:	
  1721  007A  0BCE               	decfsz	??_lcd_init,f
  1722  007B  287A               	goto	u2217
  1723  007C  287D               	nop2	;nop
  1724                           
  1725                           ;LCD.c: 51: lcd_iowrite4(0x03);
  1726  007D  3003               	movlw	3
  1727  007E  118A  23D3  118A   	fcall	_lcd_iowrite4
  1728                           
  1729                           ;LCD.c: 52: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1730  0081  304F               	movlw	79
  1731  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0084  00CE               	movwf	??_lcd_init
  1734  0085                     u2227:	
  1735  0085  0BCE               	decfsz	??_lcd_init,f
  1736  0086  2885               	goto	u2227
  1737  0087  2888               	nop2	;nop
  1738                           
  1739                           ;LCD.c: 53: lcd_iowrite4(0x02);
  1740  0088  3002               	movlw	2
  1741  0089  118A  23D3  118A   	fcall	_lcd_iowrite4
  1742                           
  1743                           ;LCD.c: 54: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1744  008C  304F               	movlw	79
  1745  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1746  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1747  008F  00CE               	movwf	??_lcd_init
  1748  0090                     u2237:	
  1749  0090  0BCE               	decfsz	??_lcd_init,f
  1750  0091  2890               	goto	u2237
  1751  0092  2893               	nop2	;nop
  1752                           
  1753                           ;LCD.c: 55: lcd_send( E_FUNCTION_SET | 0 | (1<<3) | (1<<2), 0 );
  1754  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0095  01C9               	clrf	lcd_send@rs
  1757  0096  302C               	movlw	44
  1758  0097  118A  24B4  118A   	fcall	_lcd_send
  1759                           
  1760                           ;LCD.c: 56: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1761  009A  3021               	movlw	33
  1762  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1763  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1764  009D  00CE               	movwf	??_lcd_init
  1765  009E                     u2247:	
  1766  009E  0BCE               	decfsz	??_lcd_init,f
  1767  009F  289E               	goto	u2247
  1768                           
  1769                           ;LCD.c: 57: } else if (iomode == 8) {
  1770  00A0  28E0               	goto	l1926
  1771  00A1                     l1912:	
  1772  00A1  3008               	movlw	8
  1773  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1774  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1775  00A4  066C               	xorwf	_iomode,w
  1776  00A5  1D03               	btfss	3,2
  1777  00A6  28E0               	goto	l1926
  1778                           
  1779                           ;LCD.c: 59: lcd_send( E_FUNCTION_SET, 0 );
  1780  00A7  01C9               	clrf	lcd_send@rs
  1781  00A8  3020               	movlw	32
  1782  00A9  118A  24B4  118A   	fcall	_lcd_send
  1783                           
  1784                           ;LCD.c: 60: _delay((unsigned long)((5)*(8000000/4000.0)));
  1785  00AC  300D               	movlw	13
  1786  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1787  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1788  00AF  00CF               	movwf	??_lcd_init+1
  1789  00B0  30FB               	movlw	251
  1790  00B1  00CE               	movwf	??_lcd_init
  1791  00B2                     u2257:	
  1792  00B2  0BCE               	decfsz	??_lcd_init,f
  1793  00B3  28B2               	goto	u2257
  1794  00B4  0BCF               	decfsz	??_lcd_init+1,f
  1795  00B5  28B2               	goto	u2257
  1796  00B6  28B7               	nop2
  1797                           
  1798                           ;LCD.c: 61: lcd_send( E_FUNCTION_SET, 0 );
  1799  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1800  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1801  00B9  01C9               	clrf	lcd_send@rs
  1802  00BA  3020               	movlw	32
  1803  00BB  118A  24B4  118A   	fcall	_lcd_send
  1804                           
  1805                           ;LCD.c: 62: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1806  00BE  304F               	movlw	79
  1807  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1808  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1809  00C1  00CE               	movwf	??_lcd_init
  1810  00C2                     u2267:	
  1811  00C2  0BCE               	decfsz	??_lcd_init,f
  1812  00C3  28C2               	goto	u2267
  1813  00C4  28C5               	nop2	;nop
  1814                           
  1815                           ;LCD.c: 63: lcd_send( E_FUNCTION_SET, 0 );
  1816  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1817  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1818  00C7  01C9               	clrf	lcd_send@rs
  1819  00C8  3020               	movlw	32
  1820  00C9  118A  24B4  118A   	fcall	_lcd_send
  1821                           
  1822                           ;LCD.c: 64: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1823  00CC  304F               	movlw	79
  1824  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1825  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1826  00CF  00CE               	movwf	??_lcd_init
  1827  00D0                     u2277:	
  1828  00D0  0BCE               	decfsz	??_lcd_init,f
  1829  00D1  28D0               	goto	u2277
  1830  00D2  28D3               	nop2	;nop
  1831                           
  1832                           ;LCD.c: 65: lcd_send( E_FUNCTION_SET | (1<<4) | (1<<3) | (1<<2), 0 );
  1833  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1834  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1835  00D5  01C9               	clrf	lcd_send@rs
  1836  00D6  303C               	movlw	60
  1837  00D7  118A  24B4  118A   	fcall	_lcd_send
  1838                           
  1839                           ;LCD.c: 66: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1840  00DA  3021               	movlw	33
  1841  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1842  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1843  00DD  00CE               	movwf	??_lcd_init
  1844  00DE                     u2287:	
  1845  00DE  0BCE               	decfsz	??_lcd_init,f
  1846  00DF  28DE               	goto	u2287
  1847  00E0                     l1926:	
  1848                           
  1849                           ;LCD.c: 67: }
  1850                           ;LCD.c: 69: lcd_send( E_DISPLAY_ON_OFF_CTRL | 0, 0 );
  1851  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1852  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1853  00E2  01C9               	clrf	lcd_send@rs
  1854  00E3  3008               	movlw	8
  1855  00E4  118A  24B4  118A   	fcall	_lcd_send
  1856                           
  1857                           ;LCD.c: 70: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1858  00E7  3021               	movlw	33
  1859  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1860  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1861  00EA  00CE               	movwf	??_lcd_init
  1862  00EB                     u2297:	
  1863  00EB  0BCE               	decfsz	??_lcd_init,f
  1864  00EC  28EB               	goto	u2297
  1865                           
  1866                           ;LCD.c: 71: lcd_send( E_CLEAR_DISPLAY, 0 );
  1867  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1868  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1869  00EF  01C9               	clrf	lcd_send@rs
  1870  00F0  3001               	movlw	1
  1871  00F1  118A  24B4  118A   	fcall	_lcd_send
  1872                           
  1873                           ;LCD.c: 72: _delay((unsigned long)((2)*(8000000/4000.0)));
  1874  00F4  3006               	movlw	6
  1875  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1876  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1877  00F7  00CF               	movwf	??_lcd_init+1
  1878  00F8  3030               	movlw	48
  1879  00F9  00CE               	movwf	??_lcd_init
  1880  00FA                     u2307:	
  1881  00FA  0BCE               	decfsz	??_lcd_init,f
  1882  00FB  28FA               	goto	u2307
  1883  00FC  0BCF               	decfsz	??_lcd_init+1,f
  1884  00FD  28FA               	goto	u2307
  1885  00FE  0000               	nop
  1886                           
  1887                           ;LCD.c: 73: lcd_send( E_ENTRY_MODE_SET | 0 | (1<<1), 0 );
  1888  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1889  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0101  01C9               	clrf	lcd_send@rs
  1891  0102  3006               	movlw	6
  1892  0103  118A  24B4  118A   	fcall	_lcd_send
  1893                           
  1894                           ;LCD.c: 74: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1895  0106  3021               	movlw	33
  1896  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1897  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1898  0109  00CE               	movwf	??_lcd_init
  1899  010A                     u2317:	
  1900  010A  0BCE               	decfsz	??_lcd_init,f
  1901  010B  290A               	goto	u2317
  1902  010C  0008               	return
  1903  010D                     __end_of_lcd_init:	
  1904                           ;LCD.c: 76: return 1;
  1905                           ;	Return value of _lcd_init is never used
  1906                           
  1907                           
  1908                           	psect	text9
  1909  0513                     __ptext9:	
  1910 ;; *************** function _lcd_ioinit *****************
  1911 ;; Defined at:
  1912 ;;		line 48 in file "LCD-PIC16.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;  iodata          1    wreg     PTR void 
  1915 ;;		 -> NULL(0), 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  iodata          1    0[BANK0 ] PTR void 
  1918 ;;		 -> NULL(0), 
  1919 ;;  i               1    1[BANK0 ] unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      unsigned char 
  1922 ;; Registers used:
  1923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1929 ;;      Params:         0       0       0       0
  1930 ;;      Locals:         0       2       0       0
  1931 ;;      Temps:          1       0       0       0
  1932 ;;      Totals:         1       2       0       0
  1933 ;;Total ram usage:        3 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    2
  1936 ;; This function calls:
  1937 ;;		_lcd_ioset
  1938 ;; This function is called by:
  1939 ;;		_lcd_init
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           
  1944                           ;psect for function _lcd_ioinit
  1945  0513                     _lcd_ioinit:	
  1946                           
  1947                           ;LCD-PIC16.c: 50: uint8_t i = 0;
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _lcd_ioinit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1951  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1952  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1953  0515  01C8               	clrf	lcd_ioinit@i
  1954                           
  1955                           ;LCD-PIC16.c: 53: TRISC2 = 0;
  1956  0516  1683               	bsf	3,5	;RP0=1, select bank1
  1957  0517  1303               	bcf	3,6	;RP1=0, select bank1
  1958  0518  1107               	bcf	7,2	;volatile
  1959                           
  1960                           ;LCD-PIC16.c: 54: TRISC3 = 0;
  1961  0519  1187               	bcf	7,3	;volatile
  1962                           
  1963                           ;LCD-PIC16.c: 60: TRISC4 = 0;
  1964  051A  1207               	bcf	7,4	;volatile
  1965                           
  1966                           ;LCD-PIC16.c: 61: TRISC5 = 0;
  1967  051B  1287               	bcf	7,5	;volatile
  1968                           
  1969                           ;LCD-PIC16.c: 62: TRISC6 = 0;
  1970  051C  1307               	bcf	7,6	;volatile
  1971                           
  1972                           ;LCD-PIC16.c: 63: TRISC7 = 0;
  1973  051D  1387               	bcf	7,7	;volatile
  1974                           
  1975                           ;LCD-PIC16.c: 75: for (i = 0; i < 11; i++)
  1976  051E  1283               	bcf	3,5	;RP0=0, select bank0
  1977  051F  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0520  01C8               	clrf	lcd_ioinit@i
  1979  0521  300B               	movlw	11
  1980  0522  0248               	subwf	lcd_ioinit@i,w
  1981  0523  1803               	btfsc	3,0
  1982  0524  2D34               	goto	l1824
  1983  0525                     l1818:	
  1984                           
  1985                           ;LCD-PIC16.c: 76: lcd_ioset(i, 0);
  1986  0525  01F4               	clrf	lcd_ioset@out
  1987  0526  0848               	movf	lcd_ioinit@i,w
  1988  0527  118A  233A  118A   	fcall	_lcd_ioset
  1989  052A  3001               	movlw	1
  1990  052B  00F6               	movwf	??_lcd_ioinit
  1991  052C  0876               	movf	??_lcd_ioinit,w
  1992  052D  1283               	bcf	3,5	;RP0=0, select bank0
  1993  052E  1303               	bcf	3,6	;RP1=0, select bank0
  1994  052F  07C8               	addwf	lcd_ioinit@i,f
  1995  0530  300B               	movlw	11
  1996  0531  0248               	subwf	lcd_ioinit@i,w
  1997  0532  1C03               	skipc
  1998  0533  2D25               	goto	l1818
  1999  0534                     l1824:	
  2000                           
  2001                           ;LCD-PIC16.c: 80: return 4;
  2002  0534  3004               	movlw	4
  2003  0535  0008               	return
  2004  0536                     __end_of_lcd_ioinit:	
  2005                           
  2006                           	psect	text10
  2007  0557                     __ptext10:	
  2008 ;; *************** function _lcd_goto *****************
  2009 ;; Defined at:
  2010 ;;		line 149 in file "LCD.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  col             1    wreg     unsigned char 
  2013 ;;  row             1    5[BANK0 ] unsigned char 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  col             1    7[BANK0 ] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2025 ;;      Params:         0       1       0       0
  2026 ;;      Locals:         0       1       0       0
  2027 ;;      Temps:          0       1       0       0
  2028 ;;      Totals:         0       3       0       0
  2029 ;;Total ram usage:        3 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    4
  2032 ;; This function calls:
  2033 ;;		_lcd_send
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;;		_Inicializaciones
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _lcd_goto
  2042  0557                     _lcd_goto:	
  2043                           
  2044                           ;incstack = 0
  2045                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2046                           ;lcd_goto@col stored from wreg
  2047  0557  1283               	bcf	3,5	;RP0=0, select bank0
  2048  0558  1303               	bcf	3,6	;RP1=0, select bank0
  2049  0559  00CE               	movwf	lcd_goto@col
  2050                           
  2051                           ;LCD.c: 152: if (row >= lcdrows)
  2052  055A  0867               	movf	_lcdrows,w
  2053  055B  024C               	subwf	lcd_goto@row,w
  2054  055C  1C03               	skipc
  2055  055D  2D63               	goto	l1950
  2056                           
  2057                           ;LCD.c: 153: row = lcdrows - 1;
  2058  055E  0867               	movf	_lcdrows,w
  2059  055F  3EFF               	addlw	255
  2060  0560  00CD               	movwf	??_lcd_goto
  2061  0561  084D               	movf	??_lcd_goto,w
  2062  0562  00CC               	movwf	lcd_goto@row
  2063  0563                     l1950:	
  2064                           
  2065                           ;LCD.c: 154: if (col >= lcdcolumns)
  2066  0563  0866               	movf	_lcdcolumns,w
  2067  0564  024E               	subwf	lcd_goto@col,w
  2068  0565  1C03               	skipc
  2069  0566  2D6C               	goto	l1954
  2070                           
  2071                           ;LCD.c: 155: col = lcdcolumns - 1;
  2072  0567  0866               	movf	_lcdcolumns,w
  2073  0568  3EFF               	addlw	255
  2074  0569  00CD               	movwf	??_lcd_goto
  2075  056A  084D               	movf	??_lcd_goto,w
  2076  056B  00CE               	movwf	lcd_goto@col
  2077  056C                     l1954:	
  2078                           
  2079                           ;LCD.c: 157: lcd_send( E_SET_DDRAM_ADDR | (col + rowaddr[ row ]), 0 );
  2080  056C  01C9               	clrf	lcd_send@rs
  2081  056D  084C               	movf	lcd_goto@row,w
  2082  056E  3E0B               	addlw	low ((_rowaddr-__stringbase)| (0+32768))
  2083  056F  0084               	movwf	4
  2084  0570  118A  248D  118A   	fcall	stringdir
  2085  0573  074E               	addwf	lcd_goto@col,w
  2086  0574  3880               	iorlw	128
  2087  0575  118A  24B4         	fcall	_lcd_send
  2088  0577  0008               	return
  2089  0578                     __end_of_lcd_goto:	
  2090                           
  2091                           	psect	text11
  2092  0578                     __ptext11:	
  2093 ;; *************** function _lcd_clear *****************
  2094 ;; Defined at:
  2095 ;;		line 79 in file "LCD.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;		None
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;		None
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2109 ;;      Params:         0       0       0       0
  2110 ;;      Locals:         0       0       0       0
  2111 ;;      Temps:          0       2       0       0
  2112 ;;      Totals:         0       2       0       0
  2113 ;;Total ram usage:        2 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    4
  2116 ;; This function calls:
  2117 ;;		_lcd_send
  2118 ;; This function is called by:
  2119 ;;		_Inicializaciones
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           
  2124                           ;psect for function _lcd_clear
  2125  0578                     _lcd_clear:	
  2126                           
  2127                           ;LCD.c: 81: lcd_send( E_CLEAR_DISPLAY, 0 );
  2128                           
  2129                           ;incstack = 0
  2130                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2131  0578  1283               	bcf	3,5	;RP0=0, select bank0
  2132  0579  1303               	bcf	3,6	;RP1=0, select bank0
  2133  057A  01C9               	clrf	lcd_send@rs
  2134  057B  3001               	movlw	1
  2135  057C  118A  24B4  118A   	fcall	_lcd_send
  2136                           
  2137                           ;LCD.c: 82: _delay((unsigned long)((2)*(8000000/4000.0)));
  2138  057F  3006               	movlw	6
  2139  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2140  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2141  0582  00CD               	movwf	??_lcd_clear+1
  2142  0583  3030               	movlw	48
  2143  0584  00CC               	movwf	??_lcd_clear
  2144  0585                     u2327:	
  2145  0585  0BCC               	decfsz	??_lcd_clear,f
  2146  0586  2D85               	goto	u2327
  2147  0587  0BCD               	decfsz	??_lcd_clear+1,f
  2148  0588  2D85               	goto	u2327
  2149  0589  0000               	nop
  2150  058A  0008               	return
  2151  058B                     __end_of_lcd_clear:	
  2152                           
  2153                           	psect	text12
  2154  04B4                     __ptext12:	
  2155 ;; *************** function _lcd_send *****************
  2156 ;; Defined at:
  2157 ;;		line 160 in file "LCD.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  data            1    wreg     unsigned char 
  2160 ;;  rs              1    2[BANK0 ] unsigned char 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  data            1    4[BANK0 ] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2172 ;;      Params:         0       1       0       0
  2173 ;;      Locals:         0       1       0       0
  2174 ;;      Temps:          0       1       0       0
  2175 ;;      Totals:         0       3       0       0
  2176 ;;Total ram usage:        3 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    3
  2179 ;; This function calls:
  2180 ;;		_lcd_ioset
  2181 ;;		_lcd_iowrite4
  2182 ;;		_lcd_iowrite8
  2183 ;; This function is called by:
  2184 ;;		_lcd_init
  2185 ;;		_lcd_clear
  2186 ;;		_lcd_on
  2187 ;;		_lcd_goto
  2188 ;;		_lcd_puts
  2189 ;;		_lcd_home
  2190 ;;		_lcd_off
  2191 ;;		_lcd_cursor
  2192 ;;		_lcd_cursor_left
  2193 ;;		_lcd_cursor_right
  2194 ;;		_lcd_scroll_left
  2195 ;;		_lcd_scroll_right
  2196 ;;		_lcd_autoscroll_on
  2197 ;;		_lcd_autoscroll_off
  2198 ;;		_lcd_create_char
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           
  2203                           ;psect for function _lcd_send
  2204  04B4                     _lcd_send:	
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in _lcd_send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2208                           ;lcd_send@data stored from wreg
  2209  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2210  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2211  04B6  00CB               	movwf	lcd_send@data
  2212                           
  2213                           ;LCD.c: 163: if (rs)
  2214  04B7  0849               	movf	lcd_send@rs,w
  2215  04B8  1903               	btfsc	3,2
  2216  04B9  2CBD               	goto	l1832
  2217                           
  2218                           ;LCD.c: 164: lcd_ioset(E_RS_PIN,1);
  2219  04BA  01F4               	clrf	lcd_ioset@out
  2220  04BB  0AF4               	incf	lcd_ioset@out,f
  2221  04BC  2CBE               	goto	L1
  2222  04BD                     l1832:	
  2223                           
  2224                           ;LCD.c: 165: else
  2225                           ;LCD.c: 166: lcd_ioset(E_RS_PIN,0);
  2226  04BD  01F4               	clrf	lcd_ioset@out
  2227  04BE                     L1:	
  2228  04BE  3009               	movlw	9
  2229  04BF  118A  233A  118A   	fcall	_lcd_ioset
  2230                           
  2231                           ;LCD.c: 168: lcd_ioset(E_RW_PIN,0);
  2232  04C2  01F4               	clrf	lcd_ioset@out
  2233  04C3  300A               	movlw	10
  2234  04C4  118A  233A  118A   	fcall	_lcd_ioset
  2235                           
  2236                           ;LCD.c: 170: if (iomode == 4) {
  2237  04C7  3004               	movlw	4
  2238  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2239  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2240  04CA  066C               	xorwf	_iomode,w
  2241  04CB  1D03               	btfss	3,2
  2242  04CC  2CDF               	goto	l1838
  2243                           
  2244                           ;LCD.c: 171: lcd_iowrite4(data >> 4);
  2245  04CD  084B               	movf	lcd_send@data,w
  2246  04CE  00CA               	movwf	??_lcd_send
  2247  04CF  3004               	movlw	4
  2248  04D0                     u1705:	
  2249  04D0  1003               	clrc
  2250  04D1  0CCA               	rrf	??_lcd_send,f
  2251  04D2  3EFF               	addlw	-1
  2252  04D3  1D03               	skipz
  2253  04D4  2CD0               	goto	u1705
  2254  04D5  084A               	movf	??_lcd_send,w
  2255  04D6  118A  23D3  118A   	fcall	_lcd_iowrite4
  2256                           
  2257                           ;LCD.c: 172: lcd_iowrite4(data);
  2258  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2259  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2260  04DB  084B               	movf	lcd_send@data,w
  2261  04DC  118A  23D3         	fcall	_lcd_iowrite4
  2262                           
  2263                           ;LCD.c: 173: } else {
  2264  04DE  0008               	return
  2265  04DF                     l1838:	
  2266                           
  2267                           ;LCD.c: 174: lcd_iowrite8(data);
  2268  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2269  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2270  04E1  084B               	movf	lcd_send@data,w
  2271  04E2  118A  25D9         	fcall	_lcd_iowrite8
  2272  04E4  0008               	return
  2273  04E5                     __end_of_lcd_send:	
  2274                           
  2275                           	psect	text13
  2276  05D9                     __ptext13:	
  2277 ;; *************** function _lcd_iowrite8 *****************
  2278 ;; Defined at:
  2279 ;;		line 143 in file "LCD-PIC16.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  data            1    wreg     unsigned char 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  data            1    0[COMMON] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		wreg
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2293 ;;      Params:         0       0       0       0
  2294 ;;      Locals:         0       0       0       0
  2295 ;;      Temps:          0       0       0       0
  2296 ;;      Totals:         0       0       0       0
  2297 ;;Total ram usage:        0 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    1
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_lcd_send
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           
  2308                           ;psect for function _lcd_iowrite8
  2309  05D9                     _lcd_iowrite8:	
  2310                           
  2311                           ;incstack = 0
  2312                           ; Regs used in _lcd_iowrite8: [wreg]
  2313  05D9  0008               	return
  2314  05DA                     __end_of_lcd_iowrite8:	
  2315                           
  2316                           	psect	text14
  2317  03D3                     __ptext14:	
  2318 ;; *************** function _lcd_iowrite4 *****************
  2319 ;; Defined at:
  2320 ;;		line 129 in file "LCD-PIC16.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  data            1    wreg     unsigned char 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  data            1    0[BANK0 ] unsigned char 
  2325 ;;  i               1    1[BANK0 ] unsigned char 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2335 ;;      Params:         0       0       0       0
  2336 ;;      Locals:         0       2       0       0
  2337 ;;      Temps:          2       0       0       0
  2338 ;;      Totals:         2       2       0       0
  2339 ;;Total ram usage:        4 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    2
  2342 ;; This function calls:
  2343 ;;		_lcd_ioset
  2344 ;; This function is called by:
  2345 ;;		_lcd_init
  2346 ;;		_lcd_send
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           
  2351                           ;psect for function _lcd_iowrite4
  2352  03D3                     _lcd_iowrite4:	
  2353                           
  2354                           ;incstack = 0
  2355                           ; Regs used in _lcd_iowrite4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2356                           ;lcd_iowrite4@data stored from wreg
  2357  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2358  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2359  03D5  00C7               	movwf	lcd_iowrite4@data
  2360                           
  2361                           ;LCD-PIC16.c: 132: uint8_t i;
  2362                           ;LCD-PIC16.c: 134: for (i = 4; i < 8; i++)
  2363  03D6  3004               	movlw	4
  2364  03D7  00F6               	movwf	??_lcd_iowrite4
  2365  03D8  0876               	movf	??_lcd_iowrite4,w
  2366  03D9  00C8               	movwf	lcd_iowrite4@i
  2367  03DA  3008               	movlw	8
  2368  03DB  0248               	subwf	lcd_iowrite4@i,w
  2369  03DC  1803               	btfsc	3,0
  2370  03DD  2C01               	goto	l1794
  2371  03DE                     l1788:	
  2372                           
  2373                           ;LCD-PIC16.c: 135: lcd_ioset(i, (data & (1 << i - 4)) ? 1 : 0);
  2374  03DE  3001               	movlw	1
  2375  03DF  00F6               	movwf	??_lcd_iowrite4
  2376  03E0  0848               	movf	lcd_iowrite4@i,w
  2377  03E1  3EFC               	addlw	-4
  2378  03E2  3E01               	addlw	1
  2379  03E3  2BE6               	goto	u1624
  2380  03E4                     u1625:	
  2381  03E4  1003               	clrc
  2382  03E5  0DF6               	rlf	??_lcd_iowrite4,f
  2383  03E6                     u1624:	
  2384  03E6  3EFF               	addlw	-1
  2385  03E7  1D03               	skipz
  2386  03E8  2BE4               	goto	u1625
  2387  03E9  0876               	movf	??_lcd_iowrite4,w
  2388  03EA  0547               	andwf	lcd_iowrite4@data,w
  2389  03EB  1903               	btfsc	3,2
  2390  03EC  2BEF               	goto	u1630
  2391  03ED  3001               	movlw	1
  2392  03EE  2BF0               	goto	u1640
  2393  03EF                     u1630:	
  2394  03EF  3000               	movlw	0
  2395  03F0                     u1640:	
  2396  03F0  00F7               	movwf	??_lcd_iowrite4+1
  2397  03F1  0877               	movf	??_lcd_iowrite4+1,w
  2398  03F2  00F4               	movwf	lcd_ioset@out
  2399  03F3  0848               	movf	lcd_iowrite4@i,w
  2400  03F4  118A  233A  118A   	fcall	_lcd_ioset
  2401  03F7  3001               	movlw	1
  2402  03F8  00F6               	movwf	??_lcd_iowrite4
  2403  03F9  0876               	movf	??_lcd_iowrite4,w
  2404  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2405  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2406  03FC  07C8               	addwf	lcd_iowrite4@i,f
  2407  03FD  3008               	movlw	8
  2408  03FE  0248               	subwf	lcd_iowrite4@i,w
  2409  03FF  1C03               	skipc
  2410  0400  2BDE               	goto	l1788
  2411  0401                     l1794:	
  2412                           
  2413                           ;LCD-PIC16.c: 137: lcd_ioset(E_EN_PIN,1);
  2414  0401  01F4               	clrf	lcd_ioset@out
  2415  0402  0AF4               	incf	lcd_ioset@out,f
  2416  0403  3008               	movlw	8
  2417  0404  118A  233A  118A   	fcall	_lcd_ioset
  2418                           
  2419                           ;LCD-PIC16.c: 138: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2420  0407  3006               	movlw	6
  2421  0408  00F6               	movwf	??_lcd_iowrite4
  2422  0409                     u2337:	
  2423  0409  0BF6               	decfsz	??_lcd_iowrite4,f
  2424  040A  2C09               	goto	u2337
  2425  040B  0000               	nop
  2426                           
  2427                           ;LCD-PIC16.c: 139: lcd_ioset(E_EN_PIN,0);
  2428  040C  01F4               	clrf	lcd_ioset@out
  2429  040D  3008               	movlw	8
  2430  040E  118A  233A         	fcall	_lcd_ioset
  2431  0410  0008               	return
  2432  0411                     __end_of_lcd_iowrite4:	
  2433                           
  2434                           	psect	text15
  2435  033A                     __ptext15:	
  2436 ;; *************** function _lcd_ioset *****************
  2437 ;; Defined at:
  2438 ;;		line 86 in file "LCD-PIC16.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  pin             1    wreg     enum E42
  2441 ;;  out             1    4[COMMON] unsigned char 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  pin             1    5[COMMON] enum E42
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2453 ;;      Params:         1       0       0       0
  2454 ;;      Locals:         1       0       0       0
  2455 ;;      Temps:          0       0       0       0
  2456 ;;      Totals:         2       0       0       0
  2457 ;;Total ram usage:        2 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_lcd_ioinit
  2464 ;;		_lcd_iowrite4
  2465 ;;		_lcd_send
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function _lcd_ioset
  2471  033A                     _lcd_ioset:	
  2472                           
  2473                           ;incstack = 0
  2474                           ; Regs used in _lcd_ioset: [wreg-fsr0h+status,2+status,0]
  2475                           ;lcd_ioset@pin stored from wreg
  2476  033A  00F5               	movwf	lcd_ioset@pin
  2477                           
  2478                           ;LCD-PIC16.c: 88: switch (pin) {
  2479  033B  2B78               	goto	l1782
  2480  033C                     l37:	
  2481                           ;LCD-PIC16.c: 103: case E_D4_PIN:
  2482                           
  2483                           
  2484                           ;LCD-PIC16.c: 104: RC4 = out;
  2485  033C  1C74               	btfss	lcd_ioset@out,0
  2486  033D  2B42               	goto	u1490
  2487  033E  1283               	bcf	3,5	;RP0=0, select bank0
  2488  033F  1303               	bcf	3,6	;RP1=0, select bank0
  2489  0340  1607               	bsf	7,4	;volatile
  2490  0341  0008               	return
  2491  0342                     u1490:	
  2492  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0344  1207               	bcf	7,4	;volatile
  2495                           
  2496                           ;LCD-PIC16.c: 105: break;
  2497  0345  0008               	return
  2498  0346                     l39:	
  2499                           ;LCD-PIC16.c: 106: case E_D5_PIN:
  2500                           
  2501                           
  2502                           ;LCD-PIC16.c: 107: RC5 = out;
  2503  0346  1C74               	btfss	lcd_ioset@out,0
  2504  0347  2B4C               	goto	u1510
  2505  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2506  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2507  034A  1687               	bsf	7,5	;volatile
  2508  034B  0008               	return
  2509  034C                     u1510:	
  2510  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2511  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2512  034E  1287               	bcf	7,5	;volatile
  2513                           
  2514                           ;LCD-PIC16.c: 108: break;
  2515  034F  0008               	return
  2516  0350                     l40:	
  2517                           ;LCD-PIC16.c: 109: case E_D6_PIN:
  2518                           
  2519                           
  2520                           ;LCD-PIC16.c: 110: RC6 = out;
  2521  0350  1C74               	btfss	lcd_ioset@out,0
  2522  0351  2B56               	goto	u1530
  2523  0352  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0353  1303               	bcf	3,6	;RP1=0, select bank0
  2525  0354  1707               	bsf	7,6	;volatile
  2526  0355  0008               	return
  2527  0356                     u1530:	
  2528  0356  1283               	bcf	3,5	;RP0=0, select bank0
  2529  0357  1303               	bcf	3,6	;RP1=0, select bank0
  2530  0358  1307               	bcf	7,6	;volatile
  2531                           
  2532                           ;LCD-PIC16.c: 111: break;
  2533  0359  0008               	return
  2534  035A                     l41:	
  2535                           ;LCD-PIC16.c: 112: case E_D7_PIN:
  2536                           
  2537                           
  2538                           ;LCD-PIC16.c: 113: RC7 = out;
  2539  035A  1C74               	btfss	lcd_ioset@out,0
  2540  035B  2B60               	goto	u1550
  2541  035C  1283               	bcf	3,5	;RP0=0, select bank0
  2542  035D  1303               	bcf	3,6	;RP1=0, select bank0
  2543  035E  1787               	bsf	7,7	;volatile
  2544  035F  0008               	return
  2545  0360                     u1550:	
  2546  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0361  1303               	bcf	3,6	;RP1=0, select bank0
  2548  0362  1387               	bcf	7,7	;volatile
  2549                           
  2550                           ;LCD-PIC16.c: 114: break;
  2551  0363  0008               	return
  2552  0364                     l42:	
  2553                           ;LCD-PIC16.c: 115: case E_RS_PIN:
  2554                           
  2555                           
  2556                           ;LCD-PIC16.c: 116: RC3 = out;
  2557  0364  1C74               	btfss	lcd_ioset@out,0
  2558  0365  2B6A               	goto	u1570
  2559  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2561  0368  1587               	bsf	7,3	;volatile
  2562  0369  0008               	return
  2563  036A                     u1570:	
  2564  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2565  036B  1303               	bcf	3,6	;RP1=0, select bank0
  2566  036C  1187               	bcf	7,3	;volatile
  2567                           
  2568                           ;LCD-PIC16.c: 117: break;
  2569  036D  0008               	return
  2570  036E                     l43:	
  2571                           ;LCD-PIC16.c: 118: case E_EN_PIN:
  2572                           
  2573                           
  2574                           ;LCD-PIC16.c: 119: RC2 = out;
  2575  036E  1C74               	btfss	lcd_ioset@out,0
  2576  036F  2B74               	goto	u1590
  2577  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2578  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2579  0372  1507               	bsf	7,2	;volatile
  2580  0373  0008               	return
  2581  0374                     u1590:	
  2582  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0376  1107               	bcf	7,2	;volatile
  2585                           
  2586                           ;LCD-PIC16.c: 126: }
  2587                           
  2588                           ;LCD-PIC16.c: 125: break;
  2589                           
  2590                           ;LCD-PIC16.c: 121: case E_RW_PIN:
  2591                           
  2592                           ;LCD-PIC16.c: 120: break;
  2593  0377  0008               	return
  2594  0378                     l1782:	
  2595  0378  0875               	movf	lcd_ioset@pin,w
  2596                           
  2597                           ; Switch size 1, requested type "space"
  2598                           ; Number of cases is 7, Range of values is 4 to 10
  2599                           ; switch strategies available:
  2600                           ; Name         Instructions Cycles
  2601                           ; simple_byte           22    12 (average)
  2602                           ; direct_byte           24    10 (fixed)
  2603                           ; jumptable            263     9 (fixed)
  2604                           ;	Chosen strategy is simple_byte
  2605  0379  3A04               	xorlw	4	; case 4
  2606  037A  1903               	skipnz
  2607  037B  2B3C               	goto	l37
  2608  037C  3A01               	xorlw	1	; case 5
  2609  037D  1903               	skipnz
  2610  037E  2B46               	goto	l39
  2611  037F  3A03               	xorlw	3	; case 6
  2612  0380  1903               	skipnz
  2613  0381  2B50               	goto	l40
  2614  0382  3A01               	xorlw	1	; case 7
  2615  0383  1903               	skipnz
  2616  0384  2B5A               	goto	l41
  2617  0385  3A0F               	xorlw	15	; case 8
  2618  0386  1903               	skipnz
  2619  0387  2B6E               	goto	l43
  2620  0388  3A01               	xorlw	1	; case 9
  2621  0389  1903               	skipnz
  2622  038A  2B64               	goto	l42
  2623  038B  3A03               	xorlw	3	; case 10
  2624  038C  1903               	skipnz
  2625  038D  2B8F               	goto	l45
  2626  038E  2B8F               	goto	l45
  2627  038F                     l45:	
  2628  038F  0008               	return
  2629  0390                     __end_of_lcd_ioset:	
  2630                           
  2631                           	psect	text16
  2632  04E5                     __ptext16:	
  2633 ;; *************** function _CalcularDistancia *****************
  2634 ;; Defined at:
  2635 ;;		line 61 in file "Funciones.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  dist            2   23[BANK0 ] int 
  2638 ;;  distancia       1   25[BANK0 ] PTR PTR unsigned char 
  2639 ;;		 -> distancia4(1), distancia3(1), distancia2(1), distancia1(1), 
  2640 ;;  size            2   26[BANK0 ] int 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2652 ;;      Params:         0       5       0       0
  2653 ;;      Locals:         0       0       0       0
  2654 ;;      Temps:          0       1       0       0
  2655 ;;      Totals:         0       6       0       0
  2656 ;;Total ram usage:        6 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    3
  2659 ;; This function calls:
  2660 ;;		___awdiv
  2661 ;;		_sprintf
  2662 ;; This function is called by:
  2663 ;;		_main
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           
  2668                           ;psect for function _CalcularDistancia
  2669  04E5                     _CalcularDistancia:	
  2670                           
  2671                           ;Funciones.c: 62: dist = dist / 58;
  2672                           
  2673                           ;incstack = 0
  2674                           ; Regs used in _CalcularDistancia: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2675  04E5  303A               	movlw	58
  2676  04E6  00F4               	movwf	___awdiv@divisor
  2677  04E7  3000               	movlw	0
  2678  04E8  00F5               	movwf	___awdiv@divisor+1
  2679  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2680  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  2681  04EB  085F               	movf	CalcularDistancia@dist+1,w
  2682  04EC  00F7               	movwf	___awdiv@dividend+1
  2683  04ED  085E               	movf	CalcularDistancia@dist,w
  2684  04EE  00F6               	movwf	___awdiv@dividend
  2685  04EF  118A  22DF  118A   	fcall	___awdiv
  2686  04F2  0875               	movf	?___awdiv+1,w
  2687  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2688  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  2689  04F5  00DF               	movwf	CalcularDistancia@dist+1
  2690  04F6  0874               	movf	?___awdiv,w
  2691  04F7  00DE               	movwf	CalcularDistancia@dist
  2692                           
  2693                           ;Funciones.c: 63: sprintf(*distancia,"%d cm", dist);
  2694  04F8  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2695  04F9  00E3               	movwf	??_CalcularDistancia
  2696  04FA  0863               	movf	??_CalcularDistancia,w
  2697  04FB  00D1               	movwf	sprintf@f
  2698  04FC  085F               	movf	CalcularDistancia@dist+1,w
  2699  04FD  00D3               	movwf	?_sprintf+2
  2700  04FE  085E               	movf	CalcularDistancia@dist,w
  2701  04FF  00D2               	movwf	?_sprintf+1
  2702  0500  0860               	movf	CalcularDistancia@distancia,w
  2703  0501  0084               	movwf	4
  2704  0502  1383               	bcf	3,7	;select IRP bank0
  2705  0503  0800               	movf	0,w
  2706  0504  118A  210D         	fcall	_sprintf
  2707                           
  2708                           ;Funciones.c: 64: *distancia[size-1] = '\0';
  2709  0506  1283               	bcf	3,5	;RP0=0, select bank0
  2710  0507  1303               	bcf	3,6	;RP1=0, select bank0
  2711  0508  0861               	movf	CalcularDistancia@size,w
  2712  0509  3EFF               	addlw	-1
  2713  050A  0760               	addwf	CalcularDistancia@distancia,w
  2714  050B  00E3               	movwf	??_CalcularDistancia
  2715  050C  0863               	movf	??_CalcularDistancia,w
  2716  050D  0084               	movwf	4
  2717  050E  1383               	bcf	3,7	;select IRP bank0
  2718  050F  0800               	movf	0,w
  2719  0510  0084               	movwf	4
  2720  0511  0180               	clrf	0
  2721  0512  0008               	return
  2722  0513                     __end_of_CalcularDistancia:	
  2723                           
  2724                           	psect	text17
  2725  010D                     __ptext17:	
  2726 ;; *************** function _sprintf *****************
  2727 ;; Defined at:
  2728 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  sp              1    wreg     PTR unsigned char 
  2731 ;;		 -> dist4(10), dist3(10), dist2(10), dist1(10), 
  2732 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  2733 ;;		 -> STR_2(6), 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  2736 ;;		 -> dist4(10), dist3(10), dist2(10), dist1(10), 
  2737 ;;  tmpval          4    0        struct .
  2738 ;;  val             2   19[BANK0 ] unsigned int 
  2739 ;;  cp              2    0        PTR const unsigned char 
  2740 ;;  len             2    0        unsigned int 
  2741 ;;  c               1   22[BANK0 ] char 
  2742 ;;  prec            1   18[BANK0 ] char 
  2743 ;;  flag            1   17[BANK0 ] unsigned char 
  2744 ;;  ap              1   16[BANK0 ] PTR void [1]
  2745 ;;		 -> ?_sprintf(2), 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  2   10[BANK0 ] int 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2755 ;;      Params:         0       3       0       0
  2756 ;;      Locals:         0       7       0       0
  2757 ;;      Temps:          0       3       0       0
  2758 ;;      Totals:         0      13       0       0
  2759 ;;Total ram usage:       13 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    2
  2762 ;; This function calls:
  2763 ;;		___lwdiv
  2764 ;;		___lwmod
  2765 ;; This function is called by:
  2766 ;;		_CalcularDistancia
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           
  2771                           ;psect for function _sprintf
  2772  010D                     _sprintf:	
  2773                           
  2774                           ;incstack = 0
  2775                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2776                           ;sprintf@sp stored from wreg
  2777  010D  1283               	bcf	3,5	;RP0=0, select bank0
  2778  010E  1303               	bcf	3,6	;RP1=0, select bank0
  2779  010F  00DC               	movwf	sprintf@sp
  2780                           
  2781                           ;doprnt.c: 494: va_list ap;
  2782                           ;doprnt.c: 499: signed char c;
  2783                           ;doprnt.c: 506: signed char prec;
  2784                           ;doprnt.c: 508: unsigned char flag;
  2785                           ;doprnt.c: 523: union {
  2786                           ;doprnt.c: 524: unsigned long vd;
  2787                           ;doprnt.c: 525: double integ;
  2788                           ;doprnt.c: 526: } tmpval;
  2789                           ;doprnt.c: 528: unsigned int val;
  2790                           ;doprnt.c: 529: unsigned len;
  2791                           ;doprnt.c: 530: const char * cp;
  2792                           ;doprnt.c: 533: *ap = __va_start();
  2793  0110  3052               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2794  0111  00D4               	movwf	??_sprintf
  2795  0112  0854               	movf	??_sprintf,w
  2796  0113  00D7               	movwf	sprintf@ap
  2797  0114                     l2016:	
  2798                           ;doprnt.c: 536: while(c = *f++) {
  2799                           
  2800  0114  3001               	movlw	1
  2801  0115  07D1               	addwf	sprintf@f,f
  2802  0116  30FF               	movlw	-1
  2803  0117  0751               	addwf	sprintf@f,w
  2804  0118  0084               	movwf	4
  2805  0119  118A  248D  118A   	fcall	stringdir
  2806  011C  00D4               	movwf	??_sprintf
  2807  011D  0854               	movf	??_sprintf,w
  2808  011E  00DD               	movwf	sprintf@c
  2809  011F  085D               	movf	sprintf@c,w
  2810  0120  1903               	btfsc	3,2
  2811  0121  29CE               	goto	l2018
  2812                           
  2813                           ;doprnt.c: 538: if(c != '%')
  2814  0122  3025               	movlw	37
  2815  0123  065D               	xorwf	sprintf@c,w
  2816  0124  1903               	btfsc	3,2
  2817  0125  2932               	goto	l1972
  2818                           
  2819                           ;doprnt.c: 540: {
  2820                           ;doprnt.c: 541: ((*sp++ = (c)));
  2821  0126  085D               	movf	sprintf@c,w
  2822  0127  00D4               	movwf	??_sprintf
  2823  0128  085C               	movf	sprintf@sp,w
  2824  0129  0084               	movwf	4
  2825  012A  0854               	movf	??_sprintf,w
  2826  012B  1383               	bcf	3,7	;select IRP bank0
  2827  012C  0080               	movwf	0
  2828  012D  3001               	movlw	1
  2829  012E  00D4               	movwf	??_sprintf
  2830  012F  0854               	movf	??_sprintf,w
  2831  0130  07DC               	addwf	sprintf@sp,f
  2832                           
  2833                           ;doprnt.c: 542: continue;
  2834  0131  2914               	goto	l2016
  2835  0132                     l1972:	
  2836                           
  2837                           ;doprnt.c: 543: }
  2838                           ;doprnt.c: 548: flag = 0;
  2839  0132  01D8               	clrf	sprintf@flag
  2840                           
  2841                           ;doprnt.c: 822: }
  2842                           
  2843                           ;doprnt.c: 813: continue;
  2844                           
  2845                           ;doprnt.c: 802: default:
  2846                           
  2847                           ;doprnt.c: 698: case 'i':
  2848                           ;doprnt.c: 699: break;
  2849                           
  2850                           ;doprnt.c: 697: case 'd':
  2851                           
  2852                           ;doprnt.c: 638: goto alldone;
  2853                           
  2854                           ;doprnt.c: 637: case 0:
  2855                           
  2856                           ;doprnt.c: 635: switch(c = *f++) {
  2857  0133  3001               	movlw	1
  2858  0134  07D1               	addwf	sprintf@f,f
  2859  0135  30FF               	movlw	-1
  2860  0136  0751               	addwf	sprintf@f,w
  2861  0137  0084               	movwf	4
  2862  0138  118A  248D  118A   	fcall	stringdir
  2863  013B  00DD               	movwf	sprintf@c
  2864                           
  2865                           ; Switch size 1, requested type "space"
  2866                           ; Number of cases is 3, Range of values is 0 to 105
  2867                           ; switch strategies available:
  2868                           ; Name         Instructions Cycles
  2869                           ; simple_byte           10     6 (average)
  2870                           ; direct_byte          219     7 (fixed)
  2871                           ; jumptable            260     6 (fixed)
  2872                           ;	Chosen strategy is simple_byte
  2873  013C  3A00               	xorlw	0	; case 0
  2874  013D  1903               	skipnz
  2875  013E  29CE               	goto	l2018
  2876  013F  3A64               	xorlw	100	; case 100
  2877  0140  1903               	skipnz
  2878  0141  2946               	goto	l1978
  2879  0142  3A0D               	xorlw	13	; case 105
  2880  0143  1903               	skipnz
  2881  0144  2946               	goto	l1978
  2882  0145  2914               	goto	l2016
  2883  0146                     l1978:	
  2884                           
  2885                           ;doprnt.c: 1253: {
  2886                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2887  0146  0857               	movf	sprintf@ap,w
  2888  0147  0084               	movwf	4
  2889  0148  1383               	bcf	3,7	;select IRP bank0
  2890  0149  0800               	movf	0,w
  2891  014A  00DA               	movwf	sprintf@val
  2892  014B  0A84               	incf	4,f
  2893  014C  0800               	movf	0,w
  2894  014D  00DB               	movwf	sprintf@val+1
  2895  014E  3002               	movlw	2
  2896  014F  00D4               	movwf	??_sprintf
  2897  0150  0854               	movf	??_sprintf,w
  2898  0151  07D7               	addwf	sprintf@ap,f
  2899                           
  2900                           ;doprnt.c: 1261: if((int)val < 0) {
  2901  0152  1FDB               	btfss	sprintf@val+1,7
  2902  0153  295D               	goto	l1988
  2903                           
  2904                           ;doprnt.c: 1262: flag |= 0x03;
  2905  0154  3003               	movlw	3
  2906  0155  00D4               	movwf	??_sprintf
  2907  0156  0854               	movf	??_sprintf,w
  2908  0157  04D8               	iorwf	sprintf@flag,f
  2909                           
  2910                           ;doprnt.c: 1263: val = -val;
  2911  0158  09DA               	comf	sprintf@val,f
  2912  0159  09DB               	comf	sprintf@val+1,f
  2913  015A  0ADA               	incf	sprintf@val,f
  2914  015B  1903               	skipnz
  2915  015C  0ADB               	incf	sprintf@val+1,f
  2916  015D                     l1988:	
  2917                           
  2918                           ;doprnt.c: 1264: }
  2919                           ;doprnt.c: 1266: }
  2920                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2921  015D  01DD               	clrf	sprintf@c
  2922  015E  0ADD               	incf	sprintf@c,f
  2923  015F  3005               	movlw	5
  2924  0160  065D               	xorwf	sprintf@c,w
  2925  0161  1903               	btfsc	3,2
  2926  0162  2980               	goto	l2000
  2927  0163                     l1994:	
  2928                           
  2929                           ;doprnt.c: 1306: if(val < dpowers[c])
  2930  0163  085D               	movf	sprintf@c,w
  2931  0164  00D4               	movwf	??_sprintf
  2932  0165  0754               	addwf	??_sprintf,w
  2933  0166  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2934  0167  0084               	movwf	4
  2935  0168  118A  248D  118A   	fcall	stringdir
  2936  016B  00D5               	movwf	??_sprintf+1
  2937  016C  118A  248D  118A   	fcall	stringdir
  2938  016F  00D6               	movwf	??_sprintf+2
  2939  0170  0856               	movf	??_sprintf+2,w
  2940  0171  025B               	subwf	sprintf@val+1,w
  2941  0172  1D03               	skipz
  2942  0173  2976               	goto	u1925
  2943  0174  0855               	movf	??_sprintf+1,w
  2944  0175  025A               	subwf	sprintf@val,w
  2945  0176                     u1925:	
  2946  0176  1C03               	btfss	3,0
  2947  0177  2980               	goto	l2000
  2948                           
  2949                           ;doprnt.c: 1307: break;
  2950  0178  3001               	movlw	1
  2951  0179  00D4               	movwf	??_sprintf
  2952  017A  0854               	movf	??_sprintf,w
  2953  017B  07DD               	addwf	sprintf@c,f
  2954  017C  3005               	movlw	5
  2955  017D  065D               	xorwf	sprintf@c,w
  2956  017E  1D03               	btfss	3,2
  2957  017F  2963               	goto	l1994
  2958  0180                     l2000:	
  2959                           
  2960                           ;doprnt.c: 1422: {
  2961                           ;doprnt.c: 1438: if(flag & 0x03)
  2962  0180  0858               	movf	sprintf@flag,w
  2963  0181  3903               	andlw	3
  2964  0182  1903               	btfsc	3,2
  2965  0183  298F               	goto	l2006
  2966                           
  2967                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2968  0184  302D               	movlw	45
  2969  0185  00D4               	movwf	??_sprintf
  2970  0186  085C               	movf	sprintf@sp,w
  2971  0187  0084               	movwf	4
  2972  0188  0854               	movf	??_sprintf,w
  2973  0189  1383               	bcf	3,7	;select IRP bank0
  2974  018A  0080               	movwf	0
  2975  018B  3001               	movlw	1
  2976  018C  00D4               	movwf	??_sprintf
  2977  018D  0854               	movf	??_sprintf,w
  2978  018E  07DC               	addwf	sprintf@sp,f
  2979  018F                     l2006:	
  2980                           
  2981                           ;doprnt.c: 1469: }
  2982                           ;doprnt.c: 1472: prec = c;
  2983  018F  085D               	movf	sprintf@c,w
  2984  0190  00D4               	movwf	??_sprintf
  2985  0191  0854               	movf	??_sprintf,w
  2986  0192  00D9               	movwf	sprintf@prec
  2987  0193                     l2014:	
  2988                           ;doprnt.c: 1474: while(prec--) {
  2989                           
  2990  0193  30FF               	movlw	255
  2991  0194  00D4               	movwf	??_sprintf
  2992  0195  0854               	movf	??_sprintf,w
  2993  0196  07D9               	addwf	sprintf@prec,f
  2994  0197  0A59               	incf	sprintf@prec,w
  2995  0198  1903               	btfsc	3,2
  2996  0199  2914               	goto	l2016
  2997                           
  2998                           ;doprnt.c: 1478: {
  2999                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3000  019A  300A               	movlw	10
  3001  019B  00CB               	movwf	___lwmod@divisor
  3002  019C  3000               	movlw	0
  3003  019D  00CC               	movwf	___lwmod@divisor+1
  3004  019E  0859               	movf	sprintf@prec,w
  3005  019F  00D4               	movwf	??_sprintf
  3006  01A0  0754               	addwf	??_sprintf,w
  3007  01A1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3008  01A2  0084               	movwf	4
  3009  01A3  118A  248D  118A   	fcall	stringdir
  3010  01A6  00F4               	movwf	___lwdiv@divisor
  3011  01A7  118A  248D  118A   	fcall	stringdir
  3012  01AA  00F5               	movwf	___lwdiv@divisor+1
  3013  01AB  085B               	movf	sprintf@val+1,w
  3014  01AC  00F7               	movwf	___lwdiv@dividend+1
  3015  01AD  085A               	movf	sprintf@val,w
  3016  01AE  00F6               	movwf	___lwdiv@dividend
  3017  01AF  118A  2411  118A   	fcall	___lwdiv
  3018  01B2  0875               	movf	?___lwdiv+1,w
  3019  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  3020  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  3021  01B5  00CE               	movwf	___lwmod@dividend+1
  3022  01B6  0874               	movf	?___lwdiv,w
  3023  01B7  00CD               	movwf	___lwmod@dividend
  3024  01B8  118A  244F  118A   	fcall	___lwmod
  3025  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  3026  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  3027  01BD  084B               	movf	?___lwmod,w
  3028  01BE  3E30               	addlw	48
  3029  01BF  00D5               	movwf	??_sprintf+1
  3030  01C0  0855               	movf	??_sprintf+1,w
  3031  01C1  00DD               	movwf	sprintf@c
  3032                           
  3033                           ;doprnt.c: 1523: }
  3034                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3035  01C2  085D               	movf	sprintf@c,w
  3036  01C3  00D4               	movwf	??_sprintf
  3037  01C4  085C               	movf	sprintf@sp,w
  3038  01C5  0084               	movwf	4
  3039  01C6  0854               	movf	??_sprintf,w
  3040  01C7  1383               	bcf	3,7	;select IRP bank0
  3041  01C8  0080               	movwf	0
  3042  01C9  3001               	movlw	1
  3043  01CA  00D4               	movwf	??_sprintf
  3044  01CB  0854               	movf	??_sprintf,w
  3045  01CC  07DC               	addwf	sprintf@sp,f
  3046  01CD  2993               	goto	l2014
  3047  01CE                     l2018:	
  3048                           ;doprnt.c: 1525: }
  3049                           ;doprnt.c: 1533: }
  3050                           ;doprnt.c: 1535: alldone:
  3051                           
  3052                           
  3053                           ;doprnt.c: 1538: *sp = 0;
  3054  01CE  085C               	movf	sprintf@sp,w
  3055  01CF  0084               	movwf	4
  3056  01D0  1383               	bcf	3,7	;select IRP bank0
  3057  01D1  0180               	clrf	0
  3058  01D2  0008               	return
  3059  01D3                     __end_of_sprintf:	
  3060                           ;doprnt.c: 1540: return 0;
  3061                           ;	Return value of _sprintf is never used
  3062                           
  3063                           
  3064                           	psect	text18
  3065  044F                     __ptext18:	
  3066 ;; *************** function ___lwmod *****************
  3067 ;; Defined at:
  3068 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  divisor         2    4[BANK0 ] unsigned int 
  3071 ;;  dividend        2    6[BANK0 ] unsigned int 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  counter         1    9[BANK0 ] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  2    4[BANK0 ] unsigned int 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3083 ;;      Params:         0       4       0       0
  3084 ;;      Locals:         0       1       0       0
  3085 ;;      Temps:          0       1       0       0
  3086 ;;      Totals:         0       6       0       0
  3087 ;;Total ram usage:        6 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    1
  3090 ;; This function calls:
  3091 ;;		Nothing
  3092 ;; This function is called by:
  3093 ;;		_sprintf
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function ___lwmod
  3099  044F                     ___lwmod:	
  3100                           
  3101                           ;incstack = 0
  3102                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3103  044F  1283               	bcf	3,5	;RP0=0, select bank0
  3104  0450  1303               	bcf	3,6	;RP1=0, select bank0
  3105  0451  084B               	movf	___lwmod@divisor,w
  3106  0452  044C               	iorwf	___lwmod@divisor+1,w
  3107  0453  1903               	btfsc	3,2
  3108  0454  2C7E               	goto	l1884
  3109  0455  01D0               	clrf	___lwmod@counter
  3110  0456  0AD0               	incf	___lwmod@counter,f
  3111  0457                     l1874:	
  3112  0457  1BCC               	btfsc	___lwmod@divisor+1,7
  3113  0458  2C65               	goto	l1876
  3114  0459  3001               	movlw	1
  3115  045A                     u1795:	
  3116  045A  1003               	clrc
  3117  045B  0DCB               	rlf	___lwmod@divisor,f
  3118  045C  0DCC               	rlf	___lwmod@divisor+1,f
  3119  045D  3EFF               	addlw	-1
  3120  045E  1D03               	skipz
  3121  045F  2C5A               	goto	u1795
  3122  0460  3001               	movlw	1
  3123  0461  00CF               	movwf	??___lwmod
  3124  0462  084F               	movf	??___lwmod,w
  3125  0463  07D0               	addwf	___lwmod@counter,f
  3126  0464  2C57               	goto	l1874
  3127  0465                     l1876:	
  3128  0465  084C               	movf	___lwmod@divisor+1,w
  3129  0466  024E               	subwf	___lwmod@dividend+1,w
  3130  0467  1D03               	skipz
  3131  0468  2C6B               	goto	u1815
  3132  0469  084B               	movf	___lwmod@divisor,w
  3133  046A  024D               	subwf	___lwmod@dividend,w
  3134  046B                     u1815:	
  3135  046B  1C03               	skipc
  3136  046C  2C73               	goto	l1880
  3137  046D  084B               	movf	___lwmod@divisor,w
  3138  046E  02CD               	subwf	___lwmod@dividend,f
  3139  046F  084C               	movf	___lwmod@divisor+1,w
  3140  0470  1C03               	skipc
  3141  0471  03CE               	decf	___lwmod@dividend+1,f
  3142  0472  02CE               	subwf	___lwmod@dividend+1,f
  3143  0473                     l1880:	
  3144  0473  3001               	movlw	1
  3145  0474                     u1825:	
  3146  0474  1003               	clrc
  3147  0475  0CCC               	rrf	___lwmod@divisor+1,f
  3148  0476  0CCB               	rrf	___lwmod@divisor,f
  3149  0477  3EFF               	addlw	-1
  3150  0478  1D03               	skipz
  3151  0479  2C74               	goto	u1825
  3152  047A  3001               	movlw	1
  3153  047B  02D0               	subwf	___lwmod@counter,f
  3154  047C  1D03               	btfss	3,2
  3155  047D  2C65               	goto	l1876
  3156  047E                     l1884:	
  3157  047E  084E               	movf	___lwmod@dividend+1,w
  3158  047F  00CC               	movwf	?___lwmod+1
  3159  0480  084D               	movf	___lwmod@dividend,w
  3160  0481  00CB               	movwf	?___lwmod
  3161  0482  0008               	return
  3162  0483                     __end_of___lwmod:	
  3163                           
  3164                           	psect	text19
  3165  0411                     __ptext19:	
  3166 ;; *************** function ___lwdiv *****************
  3167 ;; Defined at:
  3168 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  divisor         2    4[COMMON] unsigned int 
  3171 ;;  dividend        2    6[COMMON] unsigned int 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  quotient        2    2[BANK0 ] unsigned int 
  3174 ;;  counter         1    1[BANK0 ] unsigned char 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  2    4[COMMON] unsigned int 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3184 ;;      Params:         4       0       0       0
  3185 ;;      Locals:         0       3       0       0
  3186 ;;      Temps:          0       1       0       0
  3187 ;;      Totals:         4       4       0       0
  3188 ;;Total ram usage:        8 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:    1
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_sprintf
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           
  3199                           ;psect for function ___lwdiv
  3200  0411                     ___lwdiv:	
  3201                           
  3202                           ;incstack = 0
  3203                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3204  0411  1283               	bcf	3,5	;RP0=0, select bank0
  3205  0412  1303               	bcf	3,6	;RP1=0, select bank0
  3206  0413  01C9               	clrf	___lwdiv@quotient
  3207  0414  01CA               	clrf	___lwdiv@quotient+1
  3208  0415  0874               	movf	___lwdiv@divisor,w
  3209  0416  0475               	iorwf	___lwdiv@divisor+1,w
  3210  0417  1903               	btfsc	3,2
  3211  0418  2C4A               	goto	l1862
  3212  0419  01C8               	clrf	___lwdiv@counter
  3213  041A  0AC8               	incf	___lwdiv@counter,f
  3214  041B                     l1850:	
  3215  041B  1BF5               	btfsc	___lwdiv@divisor+1,7
  3216  041C  2C29               	goto	l1852
  3217  041D  3001               	movlw	1
  3218  041E                     u1725:	
  3219  041E  1003               	clrc
  3220  041F  0DF4               	rlf	___lwdiv@divisor,f
  3221  0420  0DF5               	rlf	___lwdiv@divisor+1,f
  3222  0421  3EFF               	addlw	-1
  3223  0422  1D03               	skipz
  3224  0423  2C1E               	goto	u1725
  3225  0424  3001               	movlw	1
  3226  0425  00C7               	movwf	??___lwdiv
  3227  0426  0847               	movf	??___lwdiv,w
  3228  0427  07C8               	addwf	___lwdiv@counter,f
  3229  0428  2C1B               	goto	l1850
  3230  0429                     l1852:	
  3231  0429  3001               	movlw	1
  3232  042A                     u1745:	
  3233  042A  1003               	clrc
  3234  042B  0DC9               	rlf	___lwdiv@quotient,f
  3235  042C  0DCA               	rlf	___lwdiv@quotient+1,f
  3236  042D  3EFF               	addlw	-1
  3237  042E  1D03               	skipz
  3238  042F  2C2A               	goto	u1745
  3239  0430  0875               	movf	___lwdiv@divisor+1,w
  3240  0431  0277               	subwf	___lwdiv@dividend+1,w
  3241  0432  1D03               	skipz
  3242  0433  2C36               	goto	u1755
  3243  0434  0874               	movf	___lwdiv@divisor,w
  3244  0435  0276               	subwf	___lwdiv@dividend,w
  3245  0436                     u1755:	
  3246  0436  1C03               	skipc
  3247  0437  2C3F               	goto	l1858
  3248  0438  0874               	movf	___lwdiv@divisor,w
  3249  0439  02F6               	subwf	___lwdiv@dividend,f
  3250  043A  0875               	movf	___lwdiv@divisor+1,w
  3251  043B  1C03               	skipc
  3252  043C  03F7               	decf	___lwdiv@dividend+1,f
  3253  043D  02F7               	subwf	___lwdiv@dividend+1,f
  3254  043E  1449               	bsf	___lwdiv@quotient,0
  3255  043F                     l1858:	
  3256  043F  3001               	movlw	1
  3257  0440                     u1765:	
  3258  0440  1003               	clrc
  3259  0441  0CF5               	rrf	___lwdiv@divisor+1,f
  3260  0442  0CF4               	rrf	___lwdiv@divisor,f
  3261  0443  3EFF               	addlw	-1
  3262  0444  1D03               	skipz
  3263  0445  2C40               	goto	u1765
  3264  0446  3001               	movlw	1
  3265  0447  02C8               	subwf	___lwdiv@counter,f
  3266  0448  1D03               	btfss	3,2
  3267  0449  2C29               	goto	l1852
  3268  044A                     l1862:	
  3269  044A  084A               	movf	___lwdiv@quotient+1,w
  3270  044B  00F5               	movwf	?___lwdiv+1
  3271  044C  0849               	movf	___lwdiv@quotient,w
  3272  044D  00F4               	movwf	?___lwdiv
  3273  044E  0008               	return
  3274  044F                     __end_of___lwdiv:	
  3275                           
  3276                           	psect	text20
  3277  02DF                     __ptext20:	
  3278 ;; *************** function ___awdiv *****************
  3279 ;; Defined at:
  3280 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  divisor         2    4[COMMON] int 
  3283 ;;  dividend        2    6[COMMON] int 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  quotient        2    3[BANK0 ] int 
  3286 ;;  sign            1    2[BANK0 ] unsigned char 
  3287 ;;  counter         1    1[BANK0 ] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  2    4[COMMON] int 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3297 ;;      Params:         4       0       0       0
  3298 ;;      Locals:         0       4       0       0
  3299 ;;      Temps:          0       1       0       0
  3300 ;;      Totals:         4       5       0       0
  3301 ;;Total ram usage:        9 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    1
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_CalcularDistancia
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           
  3312                           ;psect for function ___awdiv
  3313  02DF                     ___awdiv:	
  3314                           
  3315                           ;incstack = 0
  3316                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3317  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  3318  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  3319  02E1  01C9               	clrf	___awdiv@sign
  3320  02E2  1FF5               	btfss	___awdiv@divisor+1,7
  3321  02E3  2AEB               	goto	l2030
  3322  02E4  09F4               	comf	___awdiv@divisor,f
  3323  02E5  09F5               	comf	___awdiv@divisor+1,f
  3324  02E6  0AF4               	incf	___awdiv@divisor,f
  3325  02E7  1903               	skipnz
  3326  02E8  0AF5               	incf	___awdiv@divisor+1,f
  3327  02E9  01C9               	clrf	___awdiv@sign
  3328  02EA  0AC9               	incf	___awdiv@sign,f
  3329  02EB                     l2030:	
  3330  02EB  1FF7               	btfss	___awdiv@dividend+1,7
  3331  02EC  2AF6               	goto	l2036
  3332  02ED  09F6               	comf	___awdiv@dividend,f
  3333  02EE  09F7               	comf	___awdiv@dividend+1,f
  3334  02EF  0AF6               	incf	___awdiv@dividend,f
  3335  02F0  1903               	skipnz
  3336  02F1  0AF7               	incf	___awdiv@dividend+1,f
  3337  02F2  3001               	movlw	1
  3338  02F3  00C7               	movwf	??___awdiv
  3339  02F4  0847               	movf	??___awdiv,w
  3340  02F5  06C9               	xorwf	___awdiv@sign,f
  3341  02F6                     l2036:	
  3342  02F6  01CA               	clrf	___awdiv@quotient
  3343  02F7  01CB               	clrf	___awdiv@quotient+1
  3344  02F8  0874               	movf	___awdiv@divisor,w
  3345  02F9  0475               	iorwf	___awdiv@divisor+1,w
  3346  02FA  1903               	btfsc	3,2
  3347  02FB  2B2D               	goto	l2058
  3348  02FC  01C8               	clrf	___awdiv@counter
  3349  02FD  0AC8               	incf	___awdiv@counter,f
  3350  02FE                     l2046:	
  3351  02FE  1BF5               	btfsc	___awdiv@divisor+1,7
  3352  02FF  2B0C               	goto	l2048
  3353  0300  3001               	movlw	1
  3354  0301                     u2005:	
  3355  0301  1003               	clrc
  3356  0302  0DF4               	rlf	___awdiv@divisor,f
  3357  0303  0DF5               	rlf	___awdiv@divisor+1,f
  3358  0304  3EFF               	addlw	-1
  3359  0305  1D03               	skipz
  3360  0306  2B01               	goto	u2005
  3361  0307  3001               	movlw	1
  3362  0308  00C7               	movwf	??___awdiv
  3363  0309  0847               	movf	??___awdiv,w
  3364  030A  07C8               	addwf	___awdiv@counter,f
  3365  030B  2AFE               	goto	l2046
  3366  030C                     l2048:	
  3367  030C  3001               	movlw	1
  3368  030D                     u2025:	
  3369  030D  1003               	clrc
  3370  030E  0DCA               	rlf	___awdiv@quotient,f
  3371  030F  0DCB               	rlf	___awdiv@quotient+1,f
  3372  0310  3EFF               	addlw	-1
  3373  0311  1D03               	skipz
  3374  0312  2B0D               	goto	u2025
  3375  0313  0875               	movf	___awdiv@divisor+1,w
  3376  0314  0277               	subwf	___awdiv@dividend+1,w
  3377  0315  1D03               	skipz
  3378  0316  2B19               	goto	u2035
  3379  0317  0874               	movf	___awdiv@divisor,w
  3380  0318  0276               	subwf	___awdiv@dividend,w
  3381  0319                     u2035:	
  3382  0319  1C03               	skipc
  3383  031A  2B22               	goto	l2054
  3384  031B  0874               	movf	___awdiv@divisor,w
  3385  031C  02F6               	subwf	___awdiv@dividend,f
  3386  031D  0875               	movf	___awdiv@divisor+1,w
  3387  031E  1C03               	skipc
  3388  031F  03F7               	decf	___awdiv@dividend+1,f
  3389  0320  02F7               	subwf	___awdiv@dividend+1,f
  3390  0321  144A               	bsf	___awdiv@quotient,0
  3391  0322                     l2054:	
  3392  0322  3001               	movlw	1
  3393  0323                     u2045:	
  3394  0323  1003               	clrc
  3395  0324  0CF5               	rrf	___awdiv@divisor+1,f
  3396  0325  0CF4               	rrf	___awdiv@divisor,f
  3397  0326  3EFF               	addlw	-1
  3398  0327  1D03               	skipz
  3399  0328  2B23               	goto	u2045
  3400  0329  3001               	movlw	1
  3401  032A  02C8               	subwf	___awdiv@counter,f
  3402  032B  1D03               	btfss	3,2
  3403  032C  2B0C               	goto	l2048
  3404  032D                     l2058:	
  3405  032D  0849               	movf	___awdiv@sign,w
  3406  032E  1903               	btfsc	3,2
  3407  032F  2B35               	goto	l2062
  3408  0330  09CA               	comf	___awdiv@quotient,f
  3409  0331  09CB               	comf	___awdiv@quotient+1,f
  3410  0332  0ACA               	incf	___awdiv@quotient,f
  3411  0333  1903               	skipnz
  3412  0334  0ACB               	incf	___awdiv@quotient+1,f
  3413  0335                     l2062:	
  3414  0335  084B               	movf	___awdiv@quotient+1,w
  3415  0336  00F5               	movwf	?___awdiv+1
  3416  0337  084A               	movf	___awdiv@quotient,w
  3417  0338  00F4               	movwf	?___awdiv
  3418  0339  0008               	return
  3419  033A                     __end_of___awdiv:	
  3420                           
  3421                           	psect	text21
  3422  027F                     __ptext21:	
  3423 ;; *************** function _echo *****************
  3424 ;; Defined at:
  3425 ;;		line 93 in file "main.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3439 ;;      Params:         0       0       0       0
  3440 ;;      Locals:         0       0       0       0
  3441 ;;      Temps:          4       0       0       0
  3442 ;;      Totals:         4       0       0       0
  3443 ;;Total ram usage:        4 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		Interrupt level 1
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           
  3453                           ;psect for function _echo
  3454  027F                     _echo:	
  3455                           
  3456                           ;main.c: 95: if(RBIF == 1)
  3457  027F  1C0B               	btfss	11,0	;volatile
  3458  0280  2AD4               	goto	i1l222
  3459                           
  3460                           ;main.c: 96: {
  3461                           ;main.c: 97: RBIE = 0;
  3462  0281  118B               	bcf	11,3	;volatile
  3463                           
  3464                           ;main.c: 100: if( RB4 == 1 )
  3465  0282  1E06               	btfss	6,4	;volatile
  3466  0283  2A86               	goto	i1l207
  3467                           
  3468                           ;main.c: 101: {
  3469                           ;main.c: 102: SensorOn = 1;
  3470  0284  3001               	movlw	1
  3471  0285  2ABD               	goto	L2
  3472  0286                     i1l207:	
  3473                           ;main.c: 105: }
  3474                           
  3475                           ;main.c: 104: TMR1ON = 1;
  3476                           
  3477                           ;main.c: 103: TMR1 = 0;
  3478                           
  3479                           
  3480                           ;main.c: 107: else if ( RB4 == 0 && SensorOn == 1)
  3481  0286  1A06               	btfsc	6,4	;volatile
  3482  0287  2A94               	goto	i1l209
  3483  0288  0378               	decf	_SensorOn,w
  3484  0289  0479               	iorwf	_SensorOn+1,w
  3485  028A  1D03               	btfss	3,2
  3486  028B  2A94               	goto	i1l209
  3487                           
  3488                           ;main.c: 108: {
  3489                           ;main.c: 109: SensorOn = 0;
  3490  028C  01F8               	clrf	_SensorOn
  3491  028D  01F9               	clrf	_SensorOn+1
  3492                           
  3493                           ;main.c: 110: TMR1ON = 0;
  3494  028E  1010               	bcf	16,0	;volatile
  3495                           
  3496                           ;main.c: 111: t1 = TMR1;
  3497  028F  080F               	movf	15,w	;volatile
  3498  0290  00A1               	movwf	_t1+1
  3499  0291  080E               	movf	14,w	;volatile
  3500  0292  00A0               	movwf	_t1
  3501                           
  3502                           ;main.c: 112: }
  3503  0293  2AD2               	goto	i1l1774
  3504  0294                     i1l209:	
  3505                           
  3506                           ;main.c: 114: else if( RB5 == 1 )
  3507  0294  1E86               	btfss	6,5	;volatile
  3508  0295  2A98               	goto	i1l211
  3509                           
  3510                           ;main.c: 115: {
  3511                           ;main.c: 116: SensorOn = 2;
  3512  0296  3002               	movlw	2
  3513  0297  2ABD               	goto	L2
  3514  0298                     i1l211:	
  3515                           ;main.c: 119: }
  3516                           
  3517                           ;main.c: 118: TMR1ON = 1;
  3518                           
  3519                           ;main.c: 117: TMR1 = 0;
  3520                           
  3521                           
  3522                           ;main.c: 121: else if( RB5 == 0 && SensorOn == 2 )
  3523  0298  1A86               	btfsc	6,5	;volatile
  3524  0299  2AA7               	goto	i1l213
  3525  029A  3002               	movlw	2
  3526  029B  0678               	xorwf	_SensorOn,w
  3527  029C  0479               	iorwf	_SensorOn+1,w
  3528  029D  1D03               	btfss	3,2
  3529  029E  2AA7               	goto	i1l213
  3530                           
  3531                           ;main.c: 122: {
  3532                           ;main.c: 123: SensorOn = 0;
  3533  029F  01F8               	clrf	_SensorOn
  3534  02A0  01F9               	clrf	_SensorOn+1
  3535                           
  3536                           ;main.c: 124: TMR1ON = 0;
  3537  02A1  1010               	bcf	16,0	;volatile
  3538                           
  3539                           ;main.c: 125: t2 = TMR1;
  3540  02A2  080F               	movf	15,w	;volatile
  3541  02A3  00A3               	movwf	_t2+1
  3542  02A4  080E               	movf	14,w	;volatile
  3543  02A5  00A2               	movwf	_t2
  3544                           
  3545                           ;main.c: 126: }
  3546  02A6  2AD2               	goto	i1l1774
  3547  02A7                     i1l213:	
  3548                           
  3549                           ;main.c: 128: else if( RB6 == 1 )
  3550  02A7  1F06               	btfss	6,6	;volatile
  3551  02A8  2AAB               	goto	i1l215
  3552                           
  3553                           ;main.c: 129: {
  3554                           ;main.c: 130: SensorOn = 3;
  3555  02A9  3003               	movlw	3
  3556  02AA  2ABD               	goto	L2
  3557  02AB                     i1l215:	
  3558                           ;main.c: 133: }
  3559                           
  3560                           ;main.c: 132: TMR1ON = 1;
  3561                           
  3562                           ;main.c: 131: TMR1 = 0;
  3563                           
  3564                           
  3565                           ;main.c: 135: else if( RB6 == 0 && SensorOn == 3 )
  3566  02AB  1B06               	btfsc	6,6	;volatile
  3567  02AC  2ABA               	goto	i1l217
  3568  02AD  3003               	movlw	3
  3569  02AE  0678               	xorwf	_SensorOn,w
  3570  02AF  0479               	iorwf	_SensorOn+1,w
  3571  02B0  1D03               	btfss	3,2
  3572  02B1  2ABA               	goto	i1l217
  3573                           
  3574                           ;main.c: 136: {
  3575                           ;main.c: 137: SensorOn = 0;
  3576  02B2  01F8               	clrf	_SensorOn
  3577  02B3  01F9               	clrf	_SensorOn+1
  3578                           
  3579                           ;main.c: 138: TMR1ON = 0;
  3580  02B4  1010               	bcf	16,0	;volatile
  3581                           
  3582                           ;main.c: 139: t3 = TMR1;
  3583  02B5  080F               	movf	15,w	;volatile
  3584  02B6  00A5               	movwf	_t3+1
  3585  02B7  080E               	movf	14,w	;volatile
  3586  02B8  00A4               	movwf	_t3
  3587                           
  3588                           ;main.c: 140: }
  3589  02B9  2AD2               	goto	i1l1774
  3590  02BA                     i1l217:	
  3591                           
  3592                           ;main.c: 142: else if( RB7 == 1 )
  3593  02BA  1F86               	btfss	6,7	;volatile
  3594  02BB  2AC4               	goto	i1l219
  3595                           
  3596                           ;main.c: 143: {
  3597                           ;main.c: 144: SensorOn = 4;
  3598  02BC  3004               	movlw	4
  3599  02BD                     L2:	
  3600  02BD  00F8               	movwf	_SensorOn
  3601  02BE  3000               	movlw	0
  3602  02BF  00F9               	movwf	_SensorOn+1
  3603                           
  3604                           ;main.c: 145: TMR1 = 0;
  3605  02C0  018E               	clrf	14	;volatile
  3606  02C1  018F               	clrf	15	;volatile
  3607                           
  3608                           ;main.c: 146: TMR1ON = 1;
  3609  02C2  1410               	bsf	16,0	;volatile
  3610                           
  3611                           ;main.c: 147: }
  3612  02C3  2AD2               	goto	i1l1774
  3613  02C4                     i1l219:	
  3614                           
  3615                           ;main.c: 149: else if( RB7 == 0 && SensorOn == 4 )
  3616  02C4  1B86               	btfsc	6,7	;volatile
  3617  02C5  2AD2               	goto	i1l1774
  3618  02C6  3004               	movlw	4
  3619  02C7  0678               	xorwf	_SensorOn,w
  3620  02C8  0479               	iorwf	_SensorOn+1,w
  3621  02C9  1D03               	btfss	3,2
  3622  02CA  2AD2               	goto	i1l1774
  3623                           
  3624                           ;main.c: 150: {
  3625                           ;main.c: 151: SensorOn = 0;
  3626  02CB  01F8               	clrf	_SensorOn
  3627  02CC  01F9               	clrf	_SensorOn+1
  3628                           
  3629                           ;main.c: 152: TMR1ON = 0;
  3630  02CD  1010               	bcf	16,0	;volatile
  3631                           
  3632                           ;main.c: 153: t4 = TMR1;
  3633  02CE  080F               	movf	15,w	;volatile
  3634  02CF  00A7               	movwf	_t4+1
  3635  02D0  080E               	movf	14,w	;volatile
  3636  02D1  00A6               	movwf	_t4
  3637  02D2                     i1l1774:	
  3638                           
  3639                           ;main.c: 154: }
  3640                           ;main.c: 156: RBIF = 0;
  3641  02D2  100B               	bcf	11,0	;volatile
  3642                           
  3643                           ;main.c: 157: RBIE = 1;
  3644  02D3  158B               	bsf	11,3	;volatile
  3645  02D4                     i1l222:	
  3646  02D4  0873               	movf	??_echo+3,w
  3647  02D5  00FF               	movwf	127
  3648  02D6  0872               	movf	??_echo+2,w
  3649  02D7  008A               	movwf	10
  3650  02D8  0871               	movf	??_echo+1,w
  3651  02D9  0084               	movwf	4
  3652  02DA  0E70               	swapf	??_echo^(0+-128),w
  3653  02DB  0083               	movwf	3
  3654  02DC  0EFE               	swapf	126,f
  3655  02DD  0E7E               	swapf	126,w
  3656  02DE  0009               	retfie
  3657  02DF                     __end_of_echo:	
  3658  007E                     btemp	set	126	;btemp
  3659  007E                     wtemp	set	126
  3660  007E                     wtemp0	set	126
  3661  0080                     wtemp1	set	128
  3662  0082                     wtemp2	set	130
  3663  0084                     wtemp3	set	132
  3664  0086                     wtemp4	set	134
  3665  0088                     wtemp5	set	136
  3666  007F                     wtemp6	set	127
  3667  007E                     ttemp	set	126
  3668  007E                     ttemp0	set	126
  3669  0081                     ttemp1	set	129
  3670  0084                     ttemp2	set	132
  3671  0087                     ttemp3	set	135
  3672  007F                     ttemp4	set	127
  3673  007E                     ltemp	set	126
  3674  007E                     ltemp0	set	126
  3675  0082                     ltemp1	set	130
  3676  0086                     ltemp2	set	134
  3677  0080                     ltemp3	set	128
  3678                           
  3679                           	psect	intentry
  3680  0004                     __pintentry:	
  3681                           ;incstack = 0
  3682                           ; Regs used in _echo: [wreg+status,2+status,0]
  3683                           
  3684  0004                     interrupt_function:	
  3685  007E                     saved_w	set	btemp
  3686  0004  00FE               	movwf	btemp
  3687  0005  0E03               	swapf	3,w
  3688  0006  00F0               	movwf	??_echo
  3689  0007  0804               	movf	4,w
  3690  0008  00F1               	movwf	??_echo+1
  3691  0009  080A               	movf	10,w
  3692  000A  00F2               	movwf	??_echo+2
  3693  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3694  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3695  000D  087F               	movf	btemp+1,w
  3696  000E  00F3               	movwf	??_echo+3
  3697  000F  118A  2A7F         	ljmp	_echo


Data Sizes:
    Strings     19
    Constant    14
    Data        6
    BSS         51
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     31      77
    BANK1            80      0      10
    BANK2            80      0       0

Pointer List with Targets:

    lcd_ioinit@iodata	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> dist4(BANK1[10]), dist3(BANK0[10]), dist2(BANK0[10]), dist1(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    CalcularDistancia@distancia	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia4(BANK0[1]), distancia3(BANK0[1]), distancia2(BANK0[1]), distancia1(BANK0[1]), 

    distancia4	PTR unsigned char  size(1) Largest target is 10
		 -> dist4(BANK1[10]), dist3(BANK0[10]), dist2(BANK0[10]), dist1(BANK0[10]), 

    distancia3	PTR unsigned char  size(1) Largest target is 10
		 -> dist4(BANK1[10]), dist3(BANK0[10]), dist2(BANK0[10]), dist1(BANK0[10]), 

    distancia2	PTR unsigned char  size(1) Largest target is 10
		 -> dist4(BANK1[10]), dist3(BANK0[10]), dist2(BANK0[10]), dist1(BANK0[10]), 

    distancia1	PTR unsigned char  size(1) Largest target is 10
		 -> dist4(BANK1[10]), dist3(BANK0[10]), dist2(BANK0[10]), dist1(BANK0[10]), 

    lcd_puts@string	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), dist4(BANK1[10]), dist3(BANK0[10]), dist2(BANK0[10]), 
		 -> dist1(BANK0[10]), 

    lcd_init@iodata	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _lcd_init->_lcd_iowrite4
    _lcd_ioinit->_lcd_ioset
    _lcd_send->_lcd_iowrite4
    _lcd_iowrite4->_lcd_ioset
    _CalcularDistancia->___awdiv
    _sprintf->___lwdiv
    ___lwmod->___lwdiv

Critical Paths under _echo in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_CalcularDistancia
    _Inicializaciones->_lcd_init
    _lcd_puts->_lcd_send
    _lcd_on->_lcd_send
    _lcd_init->_lcd_send
    _lcd_goto->_lcd_send
    _lcd_clear->_lcd_send
    _lcd_send->_lcd_iowrite4
    _CalcularDistancia->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _echo in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _echo in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _echo in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   31818
                                             29 BANK0      2     2      0
                  _CalcularDistancia
                   _Inicializaciones
                           _Trigger0
                           _Trigger1
                           _Trigger2
                           _Trigger3
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _Trigger3                                             1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Trigger2                                             1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Trigger1                                             1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Trigger0                                             1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Inicializaciones                                     2     2      0   20680
                                             11 BANK0      2     2      0
                          _lcd_clear
                           _lcd_goto
                           _lcd_init
                             _lcd_on
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2    4018
                                              5 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_on                                               1     1      0    3568
                                              5 BANK0      1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             6     4      2    5674
                                              5 BANK0      6     4      2
                         _lcd_ioinit
                       _lcd_iowrite4
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_ioinit                                           3     3      0     900
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                          _lcd_ioset
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             3     2      1    3852
                                              5 BANK0      3     2      1
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            2     2      0    3568
                                              5 BANK0      2     2      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             3     2      1    3568
                                              2 BANK0      3     2      1
                          _lcd_ioset
                       _lcd_iowrite4
                       _lcd_iowrite8
 ---------------------------------------------------------------------------------
 (3) _lcd_iowrite8                                         1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_iowrite4                                         4     4      0     917
                                              6 COMMON     2     2      0
                                              0 BANK0      2     2      0
                          _lcd_ioset
 ---------------------------------------------------------------------------------
 (4) _lcd_ioset                                            2     1      1     756
                                              4 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _CalcularDistancia                                    6     1      5    3268
                                             23 BANK0      6     1      5
                            ___awdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1587
                                             10 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     386
                                              4 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     395
                                              4 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     599
                                              4 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _echo                                                 4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcularDistancia
     ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _Inicializaciones
     _lcd_clear
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
     _lcd_goto
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
     _lcd_init
       _lcd_ioinit
         _lcd_ioset
       _lcd_iowrite4
         _lcd_ioset
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
     _lcd_on
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
     _lcd_puts
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
   _Trigger0
   _Trigger1
   _Trigger2
   _Trigger3
   _lcd_goto
     _lcd_send
       _lcd_ioset
       _lcd_iowrite4
         _lcd_ioset
       _lcd_iowrite8
   _lcd_puts
     _lcd_send
       _lcd_ioset
       _lcd_iowrite4
         _lcd_ioset
       _lcd_iowrite8

 _echo (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       A       5       12.5%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1F      4D       3       96.3%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      61      10        0.0%
ABS                  0      0      61       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Mar 02 20:42:51 2016

 __size_of_Inicializaciones 0043               ?_lcd_iowrite4 0070               ?_lcd_iowrite8 0070  
                         pc 0002                 __CFG_CP$OFF 0000                          l40 0350  
                        l41 035A                          l42 0364                          l43 036E  
                        l45 038F                          l37 033C                          l39 0346  
              ___awdiv@sign 0049                          _t1 0020                          _t2 0022  
                        _t3 0024                          _t4 0026                          fsr 0004  
                       _GIE 005F                         _RB0 0030                         _RB1 0031  
                       _RB2 0032                         _RB3 0033                         _RC2 003A  
                       _RB4 0034                         _RC3 003B                         _RB5 0035  
                       _RC4 003C                         _RB6 0036                         _RC5 003D  
                       _RB7 0037                         _RC6 003E                         _RC7 003F  
              __CFG_CPD$OFF 0000            lcd_ioinit@iodata 0047                         fsr0 0004  
                       indf 0000                 lcd_goto@col 004E                 lcd_goto@row 004C  
              __CFG_IESO$ON 0000                 lcd_ioinit@i 0048                __CFG_LVP$OFF 0000  
                      l2000 0180                        l2030 02EB                        l2014 0193  
                      l2006 018F                        l2016 0114                        l2018 01CE  
                      l2036 02F6                        l2062 0335                        l2054 0322  
                      l2046 02FE                        l2048 030C                        l2160 01D6  
                      l2058 032D                        l1832 04BD                        l1824 0534  
                      l1912 00A1                        l1850 041B                        l1818 0525  
                      l1852 0429                        l1862 044A                        l1782 0378  
                      l1838 04DF                        l1950 0563                        l1926 00E0  
                      l1880 0473                        l1858 043F                        l1874 0457  
                      l1794 0401                        l1954 056C                        l1962 0536  
                      l1876 0465                        l1884 047E                        l1972 0132  
                      l1788 03DE                        l1994 0163                        l1978 0146  
                      l1988 015D                        STR_1 04A1                        STR_2 04AE  
                      u2005 0301                        u2025 030D                        u2035 0319  
                      u2107 01DF                        _IOCB 0096                        u2045 0323  
                      u2117 01FE                        u1510 034C                        u2207 006D  
                      u2127 021D                        u2217 007A                        u2137 023C  
                      u1530 0356                        u2307 00FA                        u2227 0085  
                      u2147 05A0                        u2317 010A                        u2237 0090  
                      u2157 05AC                        u1550 0360                        u1630 03EF  
                      u2327 0585                        u2247 009E                        u2167 05B8  
                      u1640 03F0                        u1624 03E6                        u2337 0409  
                      u1625 03E4                        u1705 04D0                        u2257 00B2  
                      u2177 05C4                        u1570 036A                        u1490 0342  
                      u2267 00C2                        u2187 0598                        u1725 041E  
                      u2277 00D0                        u2197 0056                        u1590 0374  
                      u1815 046B                        u2287 00DE                        _PIE1 008C  
                      u1745 042A                        u1825 0474                        u2297 00EB  
                      u1755 0436                        u1765 0440                        u1925 0176  
                      u1795 045A                        _RBIE 005B                        _RBIF 0058  
                      _PIR1 000C                        _TMR1 000E                __CFG_WRT$OFF 0000  
             __CFG_FCMEN$ON 0000                        _echo 027F                        _main 01D3  
                      btemp 007E                lcd_init@cols 004C               __CFG_BOREN$ON 0000  
              lcd_init@rows 004D                        ltemp 007E  CalcularDistancia@distancia 0060  
                      start 0011                        ttemp 007E                        wtemp 007E  
             __CFG_MCLRE$ON 0000              ??_lcd_iowrite4 0076              ??_lcd_iowrite8 0074  
              lcd_ioset@pin 0075                lcd_ioset@out 0074                lcd_send@data 004B  
                     ?_echo 0070                       ?_main 0070             __end_of___awdiv 033A  
             __CFG_WDTE$OFF 0000             ___awdiv@divisor 0074                       _T1CON 0010  
           __end_of___lwdiv 044F                       i1l211 0298                       i1l213 02A7  
                     i1l222 02D4                       i1l215 02AB                       i1l207 0286  
                     i1l217 02BA                       i1l209 0294                       i1l219 02C4  
           __end_of___lwmod 0483             ___awdiv@counter 0048                       _PORTB 0006  
                     _PORTC 0007                       _TRISB 0086                       _TRISC 0087  
                     _dist1 0029                       _dist2 0033                       _dist3 003D  
                     _dist4 00A0             __end_of_dpowers 049D                       pclath 000A  
                     ltemp0 007E                       ltemp1 0082                       ltemp2 0086  
                     ltemp3 0080             __end_of_rowaddr 04A1                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
           __end_of_sprintf 01D3             __initialization 0013                __end_of_echo 02DF  
              __end_of_main 027F                      ??_echo 0070                      ??_main 0064  
             lcd_iowrite4@i 0048            __end_of_Trigger0 05CB            __end_of_Trigger1 05BF  
          __end_of_Trigger2 05B3            __end_of_Trigger3 05A7            ___awdiv@dividend 0076  
                    _ANSELH 0189                      i1l1774 02D2                      _INTCON 000B  
                    _OSCCON 008F                      _TMR1ON 0080                      _TRISC2 043A  
                    _TRISC3 043B                      _TRISC4 043C                      _TRISC5 043D  
                    _TRISC6 043E                      _TRISC7 043F              __CFG_PWRTE$OFF 0000  
          __end_of_lcd_init 010D            __end_of_lcd_goto 0578            __end_of_lcd_send 04E5  
          _Inicializaciones 0390            __end_of_lcd_puts 0557                   ??___awdiv 0047  
                 ??___lwdiv 0047                   ??___lwmod 004F                      _lcd_on 058B  
                    _iomode 006C            ___awdiv@quotient 004A              lcd_init@iodata 0051  
                    saved_w 007E        __end_of_lcd_iowrite4 0411        __end_of_lcd_iowrite8 05DA  
                 ??_sprintf 0054     __end_of__initialization 0039              __pcstackCOMMON 0070  
              __pidataBANK0 05D3            lcd_iowrite4@data 0047            lcd_iowrite8@data 0070  
        __size_of_lcd_clear 0013          __size_of_lcd_ioset 0056                  __pbssBANK0 0020  
                __pbssBANK1 00A0                  __pmaintext 01D3                  __pintentry 0004  
                 ?_Trigger0 0070                   ?_Trigger1 0070                   ?_Trigger2 0070  
                 ?_Trigger3 0070                     ?_lcd_on 0070                  _lcd_ioinit 0513  
                _distancia1 0068                  _distancia2 0069                  _distancia3 006A  
                _distancia4 006B                  _lcdcolumns 0066                   ?_lcd_init 004C  
                 ?_lcd_goto 004C                   ?_lcd_send 0049                   ?_lcd_puts 004C  
                __stringtab 0483           __end_of_lcd_clear 058B           __end_of_lcd_ioset 0390  
                   ___awdiv 02DF                  ??_Trigger0 0074                  ??_Trigger1 0074  
                ??_Trigger2 0074                  ??_Trigger3 0074                     ___lwdiv 0411  
                   ___lwmod 044F             __size_of_lcd_on 0010                     __ptext1 059B  
                   __ptext2 05A7                     __ptext3 05B3                     __ptext4 05BF  
                   __ptext5 0390                     __ptext6 0536                     __ptext7 058B  
                   __ptext8 003C                     __ptext9 0513       __size_of_lcd_iowrite4 003E  
     __size_of_lcd_iowrite8 0001                     _lcdrows 0067                     _dpowers 0493  
  __end_of_Inicializaciones 03D3                     _rowaddr 049D                     _sprintf 010D  
                   clrloop0 05CC                  ??_lcd_init 004E                  ??_lcd_goto 004D  
                ??_lcd_send 004A                  ??_lcd_puts 0078        end_of_initialization 0039  
            lcd_puts@string 004C                _lcd_iowrite4 03D3                _lcd_iowrite8 05D9  
               ?_lcd_ioinit 0070                  lcd_send@rs 0049              __end_of_lcd_on 059B  
         _CalcularDistancia 04E5         start_initialization 0013          ?_CalcularDistancia 005E  
       ??_CalcularDistancia 0063         __size_of_lcd_ioinit 0023                    ??_lcd_on 004C  
               __pdataBANK0 0066   __end_of_CalcularDistancia 0513           __size_of_Trigger0 000C  
         __size_of_Trigger1 000C           __size_of_Trigger2 000C           __size_of_Trigger3 000C  
               __pbssCOMMON 0078                   ___latbits 0001               __pcstackBANK0 0047  
    __CFG_FOSC$INTRC_CLKOUT 0000           __size_of_lcd_init 00D1           __size_of_lcd_goto 0021  
         __size_of_lcd_send 0031                 sprintf@flag 0058           __size_of_lcd_puts 0021  
               sprintf@prec 0059                   __pnvBANK0 006C            ___lwdiv@dividend 0076  
                  ?___awdiv 0074                    ?___lwdiv 0074                    ?___lwmod 004B  
                 _lcd_clear 0578                   _lcd_ioset 033A                   __pstrings 0483  
          ___lwdiv@quotient 0049           ?_Inicializaciones 0070                    ?_sprintf 0051  
        ??_Inicializaciones 0052           interrupt_function 0004                   clear_ram0 05CB  
                ?_lcd_clear 0070  __size_of_CalcularDistancia 002E                  ?_lcd_ioset 0074  
               __stringbase 0492                ??_lcd_ioinit 0076                    _SensorOn 0078  
        __end_of_lcd_ioinit 0536                    _Trigger0 05BF                    _Trigger1 05B3  
                  _Trigger2 05A7                    _Trigger3 059B            __size_of___awdiv 005B  
          __size_of___lwdiv 003E            __size_of___lwmod 0034          __end_of__stringtab 0493  
                sprintf@val 005A             ___lwdiv@divisor 0074             ___lwdiv@counter 0048  
                  __ptext10 0557                    __ptext11 0578                    __ptext20 02DF  
                  __ptext12 04B4                    __ptext21 027F                    __ptext13 05D9  
                  __ptext14 03D3                    __ptext15 033A                    __ptext16 04E5  
                  __ptext17 010D                    __ptext18 044F                    __ptext19 0411  
         __CFG_BOR4V$BOR21V 0000                    _lcd_init 003C                    _lcd_goto 0557  
                  _lcd_send 04B4                    _dispctrl 0028                    _lcd_puts 0536  
          __size_of_sprintf 00C6               __size_of_echo 0060               __size_of_main 00AC  
               ??_lcd_clear 004C                 ??_lcd_ioset 0075                    intlevel1 0000  
                 sprintf@ap 0057                   sprintf@sp 005C            ___lwmod@dividend 004D  
                 stringcode 048D                    sprintf@c 005D                    sprintf@f 0051  
           ___lwmod@divisor 004B             ___lwmod@counter 0050                    stringdir 048D  
     CalcularDistancia@dist 005E                    stringtab 0483       CalcularDistancia@size 0061  
