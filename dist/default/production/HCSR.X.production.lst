

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Fri Mar 11 17:45:51 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F883
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     	;# 
    40  0001                     	;# 
    41  0002                     	;# 
    42  0003                     	;# 
    43  0004                     	;# 
    44  0005                     	;# 
    45  0006                     	;# 
    46  0007                     	;# 
    47  0009                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  000E                     	;# 
    53  000E                     	;# 
    54  000F                     	;# 
    55  0010                     	;# 
    56  0011                     	;# 
    57  0012                     	;# 
    58  0013                     	;# 
    59  0014                     	;# 
    60  0015                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0017                     	;# 
    64  0018                     	;# 
    65  0019                     	;# 
    66  001A                     	;# 
    67  001B                     	;# 
    68  001B                     	;# 
    69  001C                     	;# 
    70  001D                     	;# 
    71  001E                     	;# 
    72  001F                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0086                     	;# 
    76  0087                     	;# 
    77  0089                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  008F                     	;# 
    82  0090                     	;# 
    83  0091                     	;# 
    84  0092                     	;# 
    85  0093                     	;# 
    86  0093                     	;# 
    87  0093                     	;# 
    88  0094                     	;# 
    89  0095                     	;# 
    90  0096                     	;# 
    91  0097                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  0105                     	;# 
   101  0107                     	;# 
   102  0108                     	;# 
   103  0109                     	;# 
   104  010C                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  0185                     	;# 
   110  0187                     	;# 
   111  0188                     	;# 
   112  0189                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0093                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  0105                     	;# 
   177  0107                     	;# 
   178  0108                     	;# 
   179  0109                     	;# 
   180  010C                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  0185                     	;# 
   186  0187                     	;# 
   187  0188                     	;# 
   188  0189                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001B                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  0081                     	;# 
   226  0085                     	;# 
   227  0086                     	;# 
   228  0087                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  008F                     	;# 
   234  0090                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0093                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  009F                     	;# 
   252  0105                     	;# 
   253  0107                     	;# 
   254  0108                     	;# 
   255  0109                     	;# 
   256  010C                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  0185                     	;# 
   262  0187                     	;# 
   263  0188                     	;# 
   264  0189                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0089                     	;# 
   306  008C                     	;# 
   307  008D                     	;# 
   308  008E                     	;# 
   309  008F                     	;# 
   310  0090                     	;# 
   311  0091                     	;# 
   312  0092                     	;# 
   313  0093                     	;# 
   314  0093                     	;# 
   315  0093                     	;# 
   316  0094                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009A                     	;# 
   323  009B                     	;# 
   324  009C                     	;# 
   325  009D                     	;# 
   326  009E                     	;# 
   327  009F                     	;# 
   328  0105                     	;# 
   329  0107                     	;# 
   330  0108                     	;# 
   331  0109                     	;# 
   332  010C                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010E                     	;# 
   336  010F                     	;# 
   337  0185                     	;# 
   338  0187                     	;# 
   339  0188                     	;# 
   340  0189                     	;# 
   341  018C                     	;# 
   342  018D                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000D                     	;# 
   356  000E                     	;# 
   357  000E                     	;# 
   358  000F                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001D                     	;# 
   375  001E                     	;# 
   376  001F                     	;# 
   377  0081                     	;# 
   378  0085                     	;# 
   379  0086                     	;# 
   380  0087                     	;# 
   381  0089                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  008F                     	;# 
   386  0090                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0093                     	;# 
   391  0093                     	;# 
   392  0094                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  0105                     	;# 
   405  0107                     	;# 
   406  0108                     	;# 
   407  0109                     	;# 
   408  010C                     	;# 
   409  010C                     	;# 
   410  010D                     	;# 
   411  010E                     	;# 
   412  010F                     	;# 
   413  0185                     	;# 
   414  0187                     	;# 
   415  0188                     	;# 
   416  0189                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419                           
   420                           	psect	idataBANK0
   421  07CE                     __pidataBANK0:	
   422                           
   423                           ;initializer for _lcdcolumns
   424  07CE  3410               	retlw	16
   425                           
   426                           ;initializer for _lcdrows
   427  07CF  3402               	retlw	2
   428                           
   429                           ;initializer for _distancia1
   430  07D0  3459               	retlw	low (_dist1| 0)
   431                           
   432                           ;initializer for _distancia2
   433  07D1  3461               	retlw	low (_dist2| 0)
   434                           
   435                           ;initializer for _distancia3
   436  07D2  34A0               	retlw	low (_dist3| 0)
   437                           
   438                           ;initializer for _distancia4
   439  07D3  34A8               	retlw	low (_dist4| 0)
   440                           
   441                           	psect	strings
   442  0653                     __pstrings:	
   443  0653                     stringtab:	
   444  0653                     __stringtab:	
   445                           
   446                           ;	String table - string pointers are 1 byte each
   447  0653  1BFF               	btfsc	btemp+1,7
   448  0654  2E5D               	ljmp	stringcode
   449  0655  1383               	bcf	3,7
   450  0656  187F               	btfsc	btemp+1,0
   451  0657  1783               	bsf	3,7
   452  0658  0800               	movf	0,w
   453  0659  0A84               	incf	4,f
   454  065A  1903               	skipnz
   455  065B  0AFF               	incf	btemp+1,f
   456  065C  0008               	return
   457  065D                     stringcode:	
   458  065D                     stringdir:	
   459  065D  3006               	movlw	high stringdir
   460  065E  008A               	movwf	10
   461  065F  0804               	movf	4,w
   462  0660  0A84               	incf	4,f
   463  0661  0782               	addwf	2,f
   464  0662                     __stringbase:	
   465  0662  3400               	retlw	0
   466  0663                     __end_of__stringtab:	
   467  0663                     _dpowers:	
   468  0663  3401               	retlw	1
   469  0664  3400               	retlw	0
   470  0665  340A               	retlw	10
   471  0666  3400               	retlw	0
   472  0667  3464               	retlw	100
   473  0668  3400               	retlw	0
   474  0669  34E8               	retlw	232
   475  066A  3403               	retlw	3
   476  066B  3410               	retlw	16
   477  066C  3427               	retlw	39
   478  066D                     __end_of_dpowers:	
   479  066D                     _rowaddr:	
   480  066D  3400               	retlw	0
   481  066E  3440               	retlw	64
   482  066F  3414               	retlw	20
   483  0670  3454               	retlw	84
   484  0671                     __end_of_rowaddr:	
   485  0671                     STR_13:	
   486  0671  3444               	retlw	68	;'D'
   487  0672  3469               	retlw	105	;'i'
   488  0673  3473               	retlw	115	;'s'
   489  0674  3474               	retlw	116	;'t'
   490  0675  3461               	retlw	97	;'a'
   491  0676  346E               	retlw	110	;'n'
   492  0677  3463               	retlw	99	;'c'
   493  0678  3469               	retlw	105	;'i'
   494  0679  3461               	retlw	97	;'a'
   495  067A  3473               	retlw	115	;'s'
   496  067B  343A               	retlw	58	;':'
   497  067C  3400               	retlw	0
   498  067D                     STR_3:	
   499  067D  3425               	retlw	37	;'%'
   500  067E  3475               	retlw	117	;'u'
   501  067F  3420               	retlw	32	;' '
   502  0680  3420               	retlw	32	;' '
   503  0681  3420               	retlw	32	;' '
   504  0682  3400               	retlw	0
   505  0683  3400               	retlw	0
   506  0684                     STR_1:	
   507  0684  344E               	retlw	78	;'N'
   508  0685  344F               	retlw	79	;'O'
   509  0686  3450               	retlw	80	;'P'
   510  0687  3445               	retlw	69	;'E'
   511  0688  3400               	retlw	0
   512  0689  3400               	retlw	0
   513  068A                     STR_2:	
   514  068A  344F               	retlw	79	;'O'
   515  068B  3455               	retlw	85	;'U'
   516  068C  3454               	retlw	84	;'T'
   517  068D  3400               	retlw	0
   518  068E  3400               	retlw	0
   519  067D                     
   520                           ; #config settings
   521  0000                     
   522                           	psect	nvBANK0
   523  006F                     __pnvBANK0:	
   524  006F                     _iomode:	
   525  006F                     	ds	1
   526  000E                     _TMR1	set	14
   527  000B                     _INTCON	set	11
   528  0006                     _PORTB	set	6
   529  001A                     _RCREG	set	26
   530  0010                     _T1CON	set	16
   531  0019                     _TXREG	set	25
   532  00C4                     _CREN	set	196
   533  005F                     _GIE	set	95
   534  0030                     _RB0	set	48
   535  0031                     _RB1	set	49
   536  0032                     _RB2	set	50
   537  0033                     _RB3	set	51
   538  0034                     _RB4	set	52
   539  0035                     _RB5	set	53
   540  0036                     _RB6	set	54
   541  0037                     _RB7	set	55
   542  005B                     _RBIE	set	91
   543  0058                     _RBIF	set	88
   544  0038                     _RC0	set	56
   545  0039                     _RC1	set	57
   546  003A                     _RC2	set	58
   547  003B                     _RC3	set	59
   548  003C                     _RC4	set	60
   549  003D                     _RC5	set	61
   550  0065                     _RCIF	set	101
   551  00C7                     _SPEN	set	199
   552  0080                     _TMR1ON	set	128
   553  0096                     _IOCB	set	150
   554  008F                     _OSCCON	set	143
   555  0099                     _SPBRG	set	153
   556  0086                     _TRISB	set	134
   557  04C2                     _BRGH	set	1218
   558  04C4                     _SYNC	set	1220
   559  0438                     _TRISC0	set	1080
   560  0439                     _TRISC1	set	1081
   561  043A                     _TRISC2	set	1082
   562  043B                     _TRISC3	set	1083
   563  043C                     _TRISC4	set	1084
   564  043D                     _TRISC5	set	1085
   565  043E                     _TRISC6	set	1086
   566  043F                     _TRISC7	set	1087
   567  04C1                     _TRMT	set	1217
   568  04C5                     _TXEN	set	1221
   569  0189                     _ANSELH	set	393
   570                           
   571                           	psect	cinit
   572  0013                     start_initialization:	
   573  0013                     __initialization:	
   574                           
   575                           ; Clear objects allocated to COMMON
   576  0013  01F8               	clrf	__pbssCOMMON& (0+127)
   577  0014  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   578                           
   579                           ; Clear objects allocated to BANK0
   580  0015  1383               	bcf	3,7	;select IRP bank0
   581  0016  3050               	movlw	low __pbssBANK0
   582  0017  0084               	movwf	4
   583  0018  3069               	movlw	low (__pbssBANK0+25)
   584  0019  118A  27C6  118A   	fcall	clear_ram0
   585                           
   586                           ; Clear objects allocated to BANK1
   587  001C  30A0               	movlw	low __pbssBANK1
   588  001D  0084               	movwf	4
   589  001E  30B0               	movlw	low (__pbssBANK1+16)
   590  001F  118A  27C6  118A   	fcall	clear_ram0
   591                           
   592                           ; Initialize objects allocated to BANK0
   593  0022  118A  27CE  118A   	fcall	__pidataBANK0	;fetch initializer
   594  0025  00E9               	movwf	__pdataBANK0& (0+127)
   595  0026  118A  27CF  118A   	fcall	__pidataBANK0+1	;fetch initializer
   596  0029  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   597  002A  118A  27D0  118A   	fcall	__pidataBANK0+2	;fetch initializer
   598  002D  00EB               	movwf	(__pdataBANK0+2)& (0+127)
   599  002E  118A  27D1  118A   	fcall	__pidataBANK0+3	;fetch initializer
   600  0031  00EC               	movwf	(__pdataBANK0+3)& (0+127)
   601  0032  118A  27D2  118A   	fcall	__pidataBANK0+4	;fetch initializer
   602  0035  00ED               	movwf	(__pdataBANK0+4)& (0+127)
   603  0036  118A  27D3         	fcall	__pidataBANK0+5	;fetch initializer
   604  0038  00EE               	movwf	(__pdataBANK0+5)& (0+127)
   605  0039                     end_of_initialization:	
   606                           ;End of C runtime variable initialization code
   607                           
   608  0039                     __end_of__initialization:	
   609  0039  0183               	clrf	3
   610  003A  118A  2D89         	ljmp	_main	;jump to C main() function
   611                           
   612                           	psect	bssCOMMON
   613  0078                     __pbssCOMMON:	
   614  0078                     _rbon:	
   615  0078                     	ds	2
   616                           
   617                           	psect	bssBANK0
   618  0050                     __pbssBANK0:	
   619  0050                     _t4:	
   620  0050                     	ds	2
   621  0052                     _t5:	
   622  0052                     	ds	2
   623  0054                     _t6:	
   624  0054                     	ds	2
   625  0056                     _t7:	
   626  0056                     	ds	2
   627  0058                     _dispctrl:	
   628  0058                     	ds	1
   629  0059                     _dist1:	
   630  0059                     	ds	8
   631  0061                     _dist2:	
   632  0061                     	ds	8
   633                           
   634                           	psect	dataBANK0
   635  0069                     __pdataBANK0:	
   636  0069                     _lcdcolumns:	
   637  0069                     	ds	1
   638  006A                     _lcdrows:	
   639  006A                     	ds	1
   640  006B                     _distancia1:	
   641  006B                     	ds	1
   642  006C                     _distancia2:	
   643  006C                     	ds	1
   644  006D                     _distancia3:	
   645  006D                     	ds	1
   646  006E                     _distancia4:	
   647  006E                     	ds	1
   648                           
   649                           	psect	bssBANK1
   650  00A0                     __pbssBANK1:	
   651  00A0                     _dist3:	
   652  00A0                     	ds	8
   653  00A8                     _dist4:	
   654  00A8                     	ds	8
   655                           
   656                           	psect	clrtext
   657  07C6                     clear_ram0:	
   658                           ;	Called with FSR containing the base address, and
   659                           ;	W with the last address+1
   660                           
   661  07C6  0064               	clrwdt	;clear the watchdog before getting into this loop
   662  07C7                     clrloop0:	
   663  07C7  0180               	clrf	0	;clear RAM location pointed to by FSR
   664  07C8  0A84               	incf	4,f	;increment pointer
   665  07C9  0604               	xorwf	4,w	;XOR with final address
   666  07CA  1903               	btfsc	3,2	;have we reached the end yet?
   667  07CB  3400               	retlw	0	;all done for this memory range, return
   668  07CC  0604               	xorwf	4,w	;XOR again to restore value
   669  07CD  2FC7               	goto	clrloop0	;do the next byte
   670                           
   671                           	psect	cstackCOMMON
   672  0070                     __pcstackCOMMON:	
   673  0070                     ?_lcd_clear:	
   674  0070                     ?_lcd_on:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_Inicializaciones:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_Trigger:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_ResetEcho:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_main:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_echo:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ??_echo:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_lcd_ioinit:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_lcd_iowrite4:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_lcd_iowrite8:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     lcd_iowrite8@data:	
   705                           ; 1 bytes @ 0x0
   706                           
   707                           
   708                           ; 1 bytes @ 0x0
   709  0070                     	ds	4
   710  0074                     ?_lcd_ioset:	
   711  0074                     ??_Trigger:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  0074                     ??_ResetEcho:	
   715                           ; 1 bytes @ 0x4
   716                           
   717  0074                     ??_lcd_iowrite8:	
   718                           ; 1 bytes @ 0x4
   719                           
   720  0074                     ??___aldiv:	
   721                           ; 1 bytes @ 0x4
   722                           
   723  0074                     ?___lwdiv:	
   724                           ; 1 bytes @ 0x4
   725                           
   726  0074                     lcd_ioset@out:	
   727                           ; 2 bytes @ 0x4
   728                           
   729  0074                     ___lwdiv@divisor:	
   730                           ; 1 bytes @ 0x4
   731                           
   732                           
   733                           ; 2 bytes @ 0x4
   734  0074                     	ds	1
   735  0075                     ??_lcd_ioset:	
   736  0075                     lcd_ioset@pin:	
   737                           ; 1 bytes @ 0x5
   738                           
   739  0075                     UART_Init@x:	
   740                           ; 1 bytes @ 0x5
   741                           
   742                           
   743                           ; 2 bytes @ 0x5
   744  0075                     	ds	1
   745  0076                     ??_lcd_ioinit:	
   746  0076                     ??_lcd_iowrite4:	
   747                           ; 1 bytes @ 0x6
   748                           
   749  0076                     ___lwdiv@dividend:	
   750                           ; 1 bytes @ 0x6
   751                           
   752                           
   753                           ; 2 bytes @ 0x6
   754  0076                     	ds	2
   755  0078                     ??_lcd_puts:	
   756  0078                     ??_PrintDistancias:	
   757                           ; 1 bytes @ 0x8
   758                           
   759                           
   760                           	psect	cstackBANK0
   761  0020                     __pcstackBANK0:	
   762                           ; 1 bytes @ 0x8
   763                           
   764  0020                     ??___lwdiv:	
   765  0020                     ?___aldiv:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0020                     lcd_ioinit@iodata:	
   769                           ; 4 bytes @ 0x0
   770                           
   771  0020                     lcd_iowrite4@data:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0020                     ___aldiv@divisor:	
   775                           ; 1 bytes @ 0x0
   776                           
   777                           
   778                           ; 4 bytes @ 0x0
   779  0020                     	ds	1
   780  0021                     lcd_ioinit@i:	
   781  0021                     lcd_iowrite4@i:	
   782                           ; 1 bytes @ 0x1
   783                           
   784  0021                     ___lwdiv@counter:	
   785                           ; 1 bytes @ 0x1
   786                           
   787                           
   788                           ; 1 bytes @ 0x1
   789  0021                     	ds	1
   790  0022                     ?_lcd_send:	
   791  0022                     lcd_send@rs:	
   792                           ; 1 bytes @ 0x2
   793                           
   794  0022                     ___lwdiv@quotient:	
   795                           ; 1 bytes @ 0x2
   796                           
   797                           
   798                           ; 2 bytes @ 0x2
   799  0022                     	ds	1
   800  0023                     ??_lcd_send:	
   801                           
   802                           ; 1 bytes @ 0x3
   803  0023                     	ds	1
   804  0024                     ?___lwmod:	
   805  0024                     lcd_send@data:	
   806                           ; 2 bytes @ 0x4
   807                           
   808  0024                     ___lwmod@divisor:	
   809                           ; 1 bytes @ 0x4
   810                           
   811  0024                     ___aldiv@dividend:	
   812                           ; 2 bytes @ 0x4
   813                           
   814                           
   815                           ; 4 bytes @ 0x4
   816  0024                     	ds	1
   817  0025                     ?_lcd_init:	
   818  0025                     ??_lcd_clear:	
   819                           ; 1 bytes @ 0x5
   820                           
   821  0025                     ??_lcd_on:	
   822                           ; 1 bytes @ 0x5
   823                           
   824  0025                     ?_lcd_goto:	
   825                           ; 1 bytes @ 0x5
   826                           
   827  0025                     ?_lcd_puts:	
   828                           ; 1 bytes @ 0x5
   829                           
   830  0025                     lcd_init@cols:	
   831                           ; 1 bytes @ 0x5
   832                           
   833  0025                     lcd_goto@row:	
   834                           ; 1 bytes @ 0x5
   835                           
   836  0025                     lcd_puts@string:	
   837                           ; 1 bytes @ 0x5
   838                           
   839                           
   840                           ; 2 bytes @ 0x5
   841  0025                     	ds	1
   842  0026                     ??_lcd_goto:	
   843  0026                     lcd_init@rows:	
   844                           ; 1 bytes @ 0x6
   845                           
   846  0026                     ___lwmod@dividend:	
   847                           ; 1 bytes @ 0x6
   848                           
   849                           
   850                           ; 2 bytes @ 0x6
   851  0026                     	ds	1
   852  0027                     ??_lcd_init:	
   853  0027                     lcd_goto@col:	
   854                           ; 1 bytes @ 0x7
   855                           
   856                           
   857                           ; 1 bytes @ 0x7
   858  0027                     	ds	1
   859  0028                     ?_PrintDistancias:	
   860  0028                     ??___lwmod:	
   861                           ; 1 bytes @ 0x8
   862                           
   863  0028                     PrintDistancias@dist2:	
   864                           ; 1 bytes @ 0x8
   865                           
   866  0028                     ___aldiv@counter:	
   867                           ; 1 bytes @ 0x8
   868                           
   869                           
   870                           ; 1 bytes @ 0x8
   871  0028                     	ds	1
   872  0029                     PrintDistancias@dist3:	
   873  0029                     ___aldiv@sign:	
   874                           ; 1 bytes @ 0x9
   875                           
   876  0029                     ___lwmod@counter:	
   877                           ; 1 bytes @ 0x9
   878                           
   879                           
   880                           ; 1 bytes @ 0x9
   881  0029                     	ds	1
   882  002A                     ?_sprintf:	
   883  002A                     PrintDistancias@dist4:	
   884                           ; 2 bytes @ 0xA
   885                           
   886  002A                     lcd_init@iodata:	
   887                           ; 1 bytes @ 0xA
   888                           
   889  002A                     sprintf@f:	
   890                           ; 1 bytes @ 0xA
   891                           
   892  002A                     ___aldiv@quotient:	
   893                           ; 1 bytes @ 0xA
   894                           
   895                           
   896                           ; 4 bytes @ 0xA
   897  002A                     	ds	1
   898  002B                     ??_Inicializaciones:	
   899  002B                     PrintDistancias@dist1:	
   900                           ; 1 bytes @ 0xB
   901                           
   902                           
   903                           ; 1 bytes @ 0xB
   904  002B                     	ds	2
   905  002D                     ??_sprintf:	
   906                           
   907                           ; 1 bytes @ 0xD
   908  002D                     	ds	1
   909  002E                     ?_UART_Init:	
   910  002E                     UART_Init@baudrate:	
   911                           ; 1 bytes @ 0xE
   912                           
   913                           
   914                           ; 4 bytes @ 0xE
   915  002E                     	ds	2
   916  0030                     sprintf@flag:	
   917                           
   918                           ; 1 bytes @ 0x10
   919  0030                     	ds	1
   920  0031                     sprintf@ap:	
   921                           
   922                           ; 1 bytes @ 0x11
   923  0031                     	ds	1
   924  0032                     ??_UART_Init:	
   925  0032                     sprintf@val:	
   926                           ; 1 bytes @ 0x12
   927                           
   928                           
   929                           ; 2 bytes @ 0x12
   930  0032                     	ds	2
   931  0034                     sprintf@prec:	
   932                           
   933                           ; 1 bytes @ 0x14
   934  0034                     	ds	1
   935  0035                     sprintf@sp:	
   936                           
   937                           ; 1 bytes @ 0x15
   938  0035                     	ds	1
   939  0036                     sprintf@c:	
   940                           
   941                           ; 1 bytes @ 0x16
   942  0036                     	ds	1
   943  0037                     ?_CalcularDistancia:	
   944  0037                     CalcularDistancia@t0:	
   945                           ; 1 bytes @ 0x17
   946                           
   947                           
   948                           ; 2 bytes @ 0x17
   949  0037                     	ds	2
   950  0039                     CalcularDistancia@t1:	
   951                           
   952                           ; 2 bytes @ 0x19
   953  0039                     	ds	2
   954  003B                     CalcularDistancia@t2:	
   955                           
   956                           ; 2 bytes @ 0x1B
   957  003B                     	ds	2
   958  003D                     CalcularDistancia@t3:	
   959                           
   960                           ; 2 bytes @ 0x1D
   961  003D                     	ds	2
   962  003F                     CalcularDistancia@distancia1:	
   963                           
   964                           ; 1 bytes @ 0x1F
   965  003F                     	ds	1
   966  0040                     CalcularDistancia@distancia2:	
   967                           
   968                           ; 1 bytes @ 0x20
   969  0040                     	ds	1
   970  0041                     CalcularDistancia@distancia3:	
   971                           
   972                           ; 1 bytes @ 0x21
   973  0041                     	ds	1
   974  0042                     CalcularDistancia@distancia4:	
   975                           
   976                           ; 1 bytes @ 0x22
   977  0042                     	ds	1
   978  0043                     ??_CalcularDistancia:	
   979                           
   980                           ; 1 bytes @ 0x23
   981  0043                     	ds	1
   982  0044                     CalcularDistancia@d0:	
   983                           
   984                           ; 2 bytes @ 0x24
   985  0044                     	ds	2
   986  0046                     CalcularDistancia@d1:	
   987                           
   988                           ; 2 bytes @ 0x26
   989  0046                     	ds	2
   990  0048                     CalcularDistancia@d2:	
   991                           
   992                           ; 2 bytes @ 0x28
   993  0048                     	ds	2
   994  004A                     CalcularDistancia@d3:	
   995                           
   996                           ; 2 bytes @ 0x2A
   997  004A                     	ds	2
   998  004C                     ??_main:	
   999                           
  1000                           ; 1 bytes @ 0x2C
  1001  004C                     	ds	4
  1002                           
  1003                           	psect	maintext
  1004  0589                     __pmaintext:	
  1005 ;;
  1006 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1007 ;;
  1008 ;; *************** function _main *****************
  1009 ;; Defined at:
  1010 ;;		line 49 in file "main.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;		None
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : B00/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1024 ;;      Params:         0       0       0       0
  1025 ;;      Locals:         0       0       0       0
  1026 ;;      Temps:          0       4       0       0
  1027 ;;      Totals:         0       4       0       0
  1028 ;;Total ram usage:        4 bytes
  1029 ;; Hardware stack levels required when called:    6
  1030 ;; This function calls:
  1031 ;;		_CalcularDistancia
  1032 ;;		_Inicializaciones
  1033 ;;		_PrintDistancias
  1034 ;;		_ResetEcho
  1035 ;;		_Trigger
  1036 ;;		_UART_Init
  1037 ;; This function is called by:
  1038 ;;		Startup code after reset
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           
  1043                           ;psect for function _main
  1044  0589                     _main:	
  1045                           
  1046                           ;main.c: 51: Inicializaciones();
  1047                           
  1048                           ;incstack = 0
  1049                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1050  0589  118A  26F4  118A   	fcall	_Inicializaciones
  1051                           
  1052                           ;main.c: 52: UART_Init(9600);
  1053  058C  3000               	movlw	0
  1054  058D  1283               	bcf	3,5	;RP0=0, select bank0
  1055  058E  1303               	bcf	3,6	;RP1=0, select bank0
  1056  058F  00B1               	movwf	UART_Init@baudrate+3
  1057  0590  3000               	movlw	0
  1058  0591  00B0               	movwf	UART_Init@baudrate+2
  1059  0592  3025               	movlw	37
  1060  0593  00AF               	movwf	UART_Init@baudrate+1
  1061  0594  3080               	movlw	128
  1062  0595  00AE               	movwf	UART_Init@baudrate
  1063  0596  118A  212B  118A   	fcall	_UART_Init
  1064  0599                     l2247:	
  1065                           ;main.c: 54: while(1)
  1066                           
  1067                           
  1068                           ;main.c: 55: {
  1069                           ;main.c: 62: Trigger();
  1070  0599  118A  2538  118A   	fcall	_Trigger
  1071                           
  1072                           ;main.c: 63: CalcularDistancia(t4, t5, t6, t7, &distancia1, &distancia2, &distancia3, &d
      +                          istancia4);
  1073  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1074  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1075  059E  0851               	movf	_t4+1,w
  1076  059F  00B8               	movwf	CalcularDistancia@t0+1
  1077  05A0  0850               	movf	_t4,w
  1078  05A1  00B7               	movwf	CalcularDistancia@t0
  1079  05A2  0853               	movf	_t5+1,w
  1080  05A3  00BA               	movwf	CalcularDistancia@t1+1
  1081  05A4  0852               	movf	_t5,w
  1082  05A5  00B9               	movwf	CalcularDistancia@t1
  1083  05A6  0855               	movf	_t6+1,w
  1084  05A7  00BC               	movwf	CalcularDistancia@t2+1
  1085  05A8  0854               	movf	_t6,w
  1086  05A9  00BB               	movwf	CalcularDistancia@t2
  1087  05AA  0857               	movf	_t7+1,w
  1088  05AB  00BE               	movwf	CalcularDistancia@t3+1
  1089  05AC  0856               	movf	_t7,w
  1090  05AD  00BD               	movwf	CalcularDistancia@t3
  1091  05AE  306B               	movlw	(low (_distancia1| 0))& (0+255)
  1092  05AF  00CC               	movwf	??_main
  1093  05B0  084C               	movf	??_main,w
  1094  05B1  00BF               	movwf	CalcularDistancia@distancia1
  1095  05B2  306C               	movlw	(low (_distancia2| 0))& (0+255)
  1096  05B3  00CD               	movwf	??_main+1
  1097  05B4  084D               	movf	??_main+1,w
  1098  05B5  00C0               	movwf	CalcularDistancia@distancia2
  1099  05B6  306D               	movlw	(low (_distancia3| 0))& (0+255)
  1100  05B7  00CE               	movwf	??_main+2
  1101  05B8  084E               	movf	??_main+2,w
  1102  05B9  00C1               	movwf	CalcularDistancia@distancia3
  1103  05BA  306E               	movlw	(low (_distancia4| 0))& (0+255)
  1104  05BB  00CF               	movwf	??_main+3
  1105  05BC  084F               	movf	??_main+3,w
  1106  05BD  00C2               	movwf	CalcularDistancia@distancia4
  1107  05BE  118A  203C  118A   	fcall	_CalcularDistancia
  1108                           
  1109                           ;main.c: 64: PrintDistancias(dist1, dist2, dist3, dist4);
  1110  05C1  3061               	movlw	(low (_dist2| 0))& (0+255)
  1111  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  1112  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  1113  05C4  00CC               	movwf	??_main
  1114  05C5  084C               	movf	??_main,w
  1115  05C6  00A8               	movwf	PrintDistancias@dist2
  1116  05C7  30A0               	movlw	(low (_dist3| 0))& (0+255)
  1117  05C8  00CD               	movwf	??_main+1
  1118  05C9  084D               	movf	??_main+1,w
  1119  05CA  00A9               	movwf	PrintDistancias@dist3
  1120  05CB  30A8               	movlw	(low (_dist4| 0))& (0+255)
  1121  05CC  00CE               	movwf	??_main+2
  1122  05CD  084E               	movf	??_main+2,w
  1123  05CE  00AA               	movwf	PrintDistancias@dist4
  1124  05CF  3059               	movlw	(low (_dist1| 0))& (0+255)
  1125  05D0  118A  24E4  118A   	fcall	_PrintDistancias
  1126                           
  1127                           ;main.c: 65: ResetEcho();
  1128  05D3  118A  2786  118A   	fcall	_ResetEcho
  1129  05D6  2D99               	goto	l2247
  1130  05D7                     __end_of_main:	
  1131                           ;main.c: 66: }
  1132                           ;main.c: 67: return;
  1133                           
  1134                           
  1135                           	psect	text1
  1136  012B                     __ptext1:	
  1137 ;; *************** function _UART_Init *****************
  1138 ;; Defined at:
  1139 ;;		line 3 in file "Uart.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  baudrate        4   14[BANK0 ] const long 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  x               2    5[COMMON] unsigned int 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      unsigned char 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0, pclath, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1153 ;;      Params:         0       4       0       0
  1154 ;;      Locals:         2       0       0       0
  1155 ;;      Temps:          0      12       0       0
  1156 ;;      Totals:         2      16       0       0
  1157 ;;Total ram usage:       18 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    2
  1160 ;; This function calls:
  1161 ;;		___aldiv
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           
  1168                           ;psect for function _UART_Init
  1169  012B                     _UART_Init:	
  1170                           
  1171                           ;Uart.c: 5: unsigned int x;
  1172                           ;Uart.c: 6: x = (8000000 - baudrate*64)/(baudrate*64);
  1173                           
  1174                           ;incstack = 0
  1175                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1176  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1177  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1178  012D  082E               	movf	UART_Init@baudrate,w
  1179  012E  00B2               	movwf	??_UART_Init
  1180  012F  082F               	movf	UART_Init@baudrate+1,w
  1181  0130  00B3               	movwf	??_UART_Init+1
  1182  0131  0830               	movf	UART_Init@baudrate+2,w
  1183  0132  00B4               	movwf	??_UART_Init+2
  1184  0133  0831               	movf	UART_Init@baudrate+3,w
  1185  0134  00B5               	movwf	??_UART_Init+3
  1186  0135  3006               	movlw	6
  1187  0136                     u1605:	
  1188  0136  1003               	clrc
  1189  0137  0DB2               	rlf	??_UART_Init,f
  1190  0138  0DB3               	rlf	??_UART_Init+1,f
  1191  0139  0DB4               	rlf	??_UART_Init+2,f
  1192  013A  0DB5               	rlf	??_UART_Init+3,f
  1193  013B  3EFF               	addlw	-1
  1194  013C  1D03               	skipz
  1195  013D  2936               	goto	u1605
  1196  013E  0835               	movf	??_UART_Init+3,w
  1197  013F  00A3               	movwf	___aldiv@divisor+3
  1198  0140  0834               	movf	??_UART_Init+2,w
  1199  0141  00A2               	movwf	___aldiv@divisor+2
  1200  0142  0833               	movf	??_UART_Init+1,w
  1201  0143  00A1               	movwf	___aldiv@divisor+1
  1202  0144  0832               	movf	??_UART_Init,w
  1203  0145  00A0               	movwf	___aldiv@divisor
  1204  0146  3000               	movlw	0
  1205  0147  00B6               	movwf	??_UART_Init+4
  1206  0148  3012               	movlw	18
  1207  0149  00B7               	movwf	??_UART_Init+5
  1208  014A  307A               	movlw	122
  1209  014B  00B8               	movwf	??_UART_Init+6
  1210  014C  3000               	movlw	0
  1211  014D  00B9               	movwf	??_UART_Init+7
  1212  014E  082E               	movf	UART_Init@baudrate,w
  1213  014F  00BA               	movwf	??_UART_Init+8
  1214  0150  082F               	movf	UART_Init@baudrate+1,w
  1215  0151  00BB               	movwf	??_UART_Init+9
  1216  0152  0830               	movf	UART_Init@baudrate+2,w
  1217  0153  00BC               	movwf	??_UART_Init+10
  1218  0154  0831               	movf	UART_Init@baudrate+3,w
  1219  0155  00BD               	movwf	??_UART_Init+11
  1220  0156  3006               	movlw	6
  1221  0157                     u1615:	
  1222  0157  1003               	clrc
  1223  0158  0DBA               	rlf	??_UART_Init+8,f
  1224  0159  0DBB               	rlf	??_UART_Init+9,f
  1225  015A  0DBC               	rlf	??_UART_Init+10,f
  1226  015B  0DBD               	rlf	??_UART_Init+11,f
  1227  015C  3EFF               	addlw	-1
  1228  015D  1D03               	skipz
  1229  015E  2957               	goto	u1615
  1230  015F  09BA               	comf	??_UART_Init+8,f
  1231  0160  09BB               	comf	??_UART_Init+9,f
  1232  0161  09BC               	comf	??_UART_Init+10,f
  1233  0162  09BD               	comf	??_UART_Init+11,f
  1234  0163  0ABA               	incf	??_UART_Init+8,f
  1235  0164  1903               	skipnz
  1236  0165  0ABB               	incf	??_UART_Init+9,f
  1237  0166  1903               	skipnz
  1238  0167  0ABC               	incf	??_UART_Init+10,f
  1239  0168  1903               	skipnz
  1240  0169  0ABD               	incf	??_UART_Init+11,f
  1241  016A  083A               	movf	??_UART_Init+8,w
  1242  016B  07B6               	addwf	??_UART_Init+4,f
  1243  016C  083B               	movf	??_UART_Init+9,w
  1244  016D  1803               	skipnc
  1245  016E  0F3B               	incfsz	??_UART_Init+9,w
  1246  016F  2971               	goto	u1620
  1247  0170  2972               	goto	u1621
  1248  0171                     u1620:	
  1249  0171  07B7               	addwf	??_UART_Init+5,f
  1250  0172                     u1621:	
  1251  0172  083C               	movf	??_UART_Init+10,w
  1252  0173  1803               	skipnc
  1253  0174  0F3C               	incfsz	??_UART_Init+10,w
  1254  0175  2977               	goto	u1622
  1255  0176  2978               	goto	u1623
  1256  0177                     u1622:	
  1257  0177  07B8               	addwf	??_UART_Init+6,f
  1258  0178                     u1623:	
  1259  0178  083D               	movf	??_UART_Init+11,w
  1260  0179  1803               	skipnc
  1261  017A  0A3D               	incf	??_UART_Init+11,w
  1262  017B  07B9               	addwf	??_UART_Init+7,f
  1263  017C  0839               	movf	??_UART_Init+7,w
  1264  017D  00A7               	movwf	___aldiv@dividend+3
  1265  017E  0838               	movf	??_UART_Init+6,w
  1266  017F  00A6               	movwf	___aldiv@dividend+2
  1267  0180  0837               	movf	??_UART_Init+5,w
  1268  0181  00A5               	movwf	___aldiv@dividend+1
  1269  0182  0836               	movf	??_UART_Init+4,w
  1270  0183  00A4               	movwf	___aldiv@dividend
  1271  0184  118A  2391  118A   	fcall	___aldiv
  1272  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0189  0821               	movf	?___aldiv+1,w
  1275  018A  00F6               	movwf	UART_Init@x+1
  1276  018B  0820               	movf	?___aldiv,w
  1277  018C  00F5               	movwf	UART_Init@x
  1278                           
  1279                           ;Uart.c: 7: if(x>255)
  1280  018D  3001               	movlw	1
  1281  018E  0276               	subwf	UART_Init@x+1,w
  1282  018F  3000               	movlw	0
  1283  0190  1903               	skipnz
  1284  0191  0275               	subwf	UART_Init@x,w
  1285  0192  1C03               	skipc
  1286  0193  29F7               	goto	l1773
  1287                           
  1288                           ;Uart.c: 8: {
  1289                           ;Uart.c: 9: x = (8000000 - baudrate*16)/(baudrate*16);
  1290  0194  082E               	movf	UART_Init@baudrate,w
  1291  0195  00B2               	movwf	??_UART_Init
  1292  0196  082F               	movf	UART_Init@baudrate+1,w
  1293  0197  00B3               	movwf	??_UART_Init+1
  1294  0198  0830               	movf	UART_Init@baudrate+2,w
  1295  0199  00B4               	movwf	??_UART_Init+2
  1296  019A  0831               	movf	UART_Init@baudrate+3,w
  1297  019B  00B5               	movwf	??_UART_Init+3
  1298  019C  3004               	movlw	4
  1299  019D                     u1645:	
  1300  019D  1003               	clrc
  1301  019E  0DB2               	rlf	??_UART_Init,f
  1302  019F  0DB3               	rlf	??_UART_Init+1,f
  1303  01A0  0DB4               	rlf	??_UART_Init+2,f
  1304  01A1  0DB5               	rlf	??_UART_Init+3,f
  1305  01A2  3EFF               	addlw	-1
  1306  01A3  1D03               	skipz
  1307  01A4  299D               	goto	u1645
  1308  01A5  0835               	movf	??_UART_Init+3,w
  1309  01A6  00A3               	movwf	___aldiv@divisor+3
  1310  01A7  0834               	movf	??_UART_Init+2,w
  1311  01A8  00A2               	movwf	___aldiv@divisor+2
  1312  01A9  0833               	movf	??_UART_Init+1,w
  1313  01AA  00A1               	movwf	___aldiv@divisor+1
  1314  01AB  0832               	movf	??_UART_Init,w
  1315  01AC  00A0               	movwf	___aldiv@divisor
  1316  01AD  3000               	movlw	0
  1317  01AE  00B6               	movwf	??_UART_Init+4
  1318  01AF  3012               	movlw	18
  1319  01B0  00B7               	movwf	??_UART_Init+5
  1320  01B1  307A               	movlw	122
  1321  01B2  00B8               	movwf	??_UART_Init+6
  1322  01B3  3000               	movlw	0
  1323  01B4  00B9               	movwf	??_UART_Init+7
  1324  01B5  082E               	movf	UART_Init@baudrate,w
  1325  01B6  00BA               	movwf	??_UART_Init+8
  1326  01B7  082F               	movf	UART_Init@baudrate+1,w
  1327  01B8  00BB               	movwf	??_UART_Init+9
  1328  01B9  0830               	movf	UART_Init@baudrate+2,w
  1329  01BA  00BC               	movwf	??_UART_Init+10
  1330  01BB  0831               	movf	UART_Init@baudrate+3,w
  1331  01BC  00BD               	movwf	??_UART_Init+11
  1332  01BD  3004               	movlw	4
  1333  01BE                     u1655:	
  1334  01BE  1003               	clrc
  1335  01BF  0DBA               	rlf	??_UART_Init+8,f
  1336  01C0  0DBB               	rlf	??_UART_Init+9,f
  1337  01C1  0DBC               	rlf	??_UART_Init+10,f
  1338  01C2  0DBD               	rlf	??_UART_Init+11,f
  1339  01C3  3EFF               	addlw	-1
  1340  01C4  1D03               	skipz
  1341  01C5  29BE               	goto	u1655
  1342  01C6  09BA               	comf	??_UART_Init+8,f
  1343  01C7  09BB               	comf	??_UART_Init+9,f
  1344  01C8  09BC               	comf	??_UART_Init+10,f
  1345  01C9  09BD               	comf	??_UART_Init+11,f
  1346  01CA  0ABA               	incf	??_UART_Init+8,f
  1347  01CB  1903               	skipnz
  1348  01CC  0ABB               	incf	??_UART_Init+9,f
  1349  01CD  1903               	skipnz
  1350  01CE  0ABC               	incf	??_UART_Init+10,f
  1351  01CF  1903               	skipnz
  1352  01D0  0ABD               	incf	??_UART_Init+11,f
  1353  01D1  083A               	movf	??_UART_Init+8,w
  1354  01D2  07B6               	addwf	??_UART_Init+4,f
  1355  01D3  083B               	movf	??_UART_Init+9,w
  1356  01D4  1803               	skipnc
  1357  01D5  0F3B               	incfsz	??_UART_Init+9,w
  1358  01D6  29D8               	goto	u1660
  1359  01D7  29D9               	goto	u1661
  1360  01D8                     u1660:	
  1361  01D8  07B7               	addwf	??_UART_Init+5,f
  1362  01D9                     u1661:	
  1363  01D9  083C               	movf	??_UART_Init+10,w
  1364  01DA  1803               	skipnc
  1365  01DB  0F3C               	incfsz	??_UART_Init+10,w
  1366  01DC  29DE               	goto	u1662
  1367  01DD  29DF               	goto	u1663
  1368  01DE                     u1662:	
  1369  01DE  07B8               	addwf	??_UART_Init+6,f
  1370  01DF                     u1663:	
  1371  01DF  083D               	movf	??_UART_Init+11,w
  1372  01E0  1803               	skipnc
  1373  01E1  0A3D               	incf	??_UART_Init+11,w
  1374  01E2  07B9               	addwf	??_UART_Init+7,f
  1375  01E3  0839               	movf	??_UART_Init+7,w
  1376  01E4  00A7               	movwf	___aldiv@dividend+3
  1377  01E5  0838               	movf	??_UART_Init+6,w
  1378  01E6  00A6               	movwf	___aldiv@dividend+2
  1379  01E7  0837               	movf	??_UART_Init+5,w
  1380  01E8  00A5               	movwf	___aldiv@dividend+1
  1381  01E9  0836               	movf	??_UART_Init+4,w
  1382  01EA  00A4               	movwf	___aldiv@dividend
  1383  01EB  118A  2391  118A   	fcall	___aldiv
  1384  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1385  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1386  01F0  0821               	movf	?___aldiv+1,w
  1387  01F1  00F6               	movwf	UART_Init@x+1
  1388  01F2  0820               	movf	?___aldiv,w
  1389  01F3  00F5               	movwf	UART_Init@x
  1390                           
  1391                           ;Uart.c: 10: BRGH = 1;
  1392  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  1393  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  1394  01F6  1518               	bsf	24,2	;volatile
  1395  01F7                     l1773:	
  1396                           
  1397                           ;Uart.c: 11: }
  1398                           ;Uart.c: 12: if(x<256)
  1399  01F7  3001               	movlw	1
  1400  01F8  0276               	subwf	UART_Init@x+1,w
  1401  01F9  3000               	movlw	0
  1402  01FA  1903               	skipnz
  1403  01FB  0275               	subwf	UART_Init@x,w
  1404  01FC  1803               	skipnc
  1405  01FD  0008               	return
  1406                           
  1407                           ;Uart.c: 13: {
  1408                           ;Uart.c: 14: SPBRG = x;
  1409  01FE  0875               	movf	UART_Init@x,w
  1410  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  1411  0200  1303               	bcf	3,6	;RP1=0, select bank1
  1412  0201  0099               	movwf	25	;volatile
  1413                           
  1414                           ;Uart.c: 15: SYNC = 0;
  1415  0202  1218               	bcf	24,4	;volatile
  1416                           
  1417                           ;Uart.c: 16: SPEN = 1;
  1418  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1419  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1420  0205  1798               	bsf	24,7	;volatile
  1421                           
  1422                           ;Uart.c: 17: TRISC7 = 1;
  1423  0206  1683               	bsf	3,5	;RP0=1, select bank1
  1424  0207  1303               	bcf	3,6	;RP1=0, select bank1
  1425  0208  1787               	bsf	7,7	;volatile
  1426                           
  1427                           ;Uart.c: 18: TRISC6 = 1;
  1428  0209  1707               	bsf	7,6	;volatile
  1429                           
  1430                           ;Uart.c: 19: CREN = 1;
  1431  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1432  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1433  020C  1618               	bsf	24,4	;volatile
  1434                           
  1435                           ;Uart.c: 20: TXEN = 1;
  1436  020D  1683               	bsf	3,5	;RP0=1, select bank1
  1437  020E  1303               	bcf	3,6	;RP1=0, select bank1
  1438  020F  1698               	bsf	24,5	;volatile
  1439                           
  1440                           ;Uart.c: 21: return 1;
  1441                           ;	Return value of _UART_Init is never used
  1442  0210  0008               	return
  1443  0211                     __end_of_UART_Init:	
  1444                           ;Uart.c: 22: }
  1445                           ;Uart.c: 23: return 0;
  1446                           ;	Return value of _UART_Init is never used
  1447                           
  1448                           
  1449                           	psect	text2
  1450  0391                     __ptext2:	
  1451 ;; *************** function ___aldiv *****************
  1452 ;; Defined at:
  1453 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\aldiv.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  divisor         4    0[BANK0 ] long 
  1456 ;;  dividend        4    4[BANK0 ] long 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  quotient        4   10[BANK0 ] long 
  1459 ;;  sign            1    9[BANK0 ] unsigned char 
  1460 ;;  counter         1    8[BANK0 ] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  4    0[BANK0 ] long 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1470 ;;      Params:         0       8       0       0
  1471 ;;      Locals:         0       6       0       0
  1472 ;;      Temps:          1       0       0       0
  1473 ;;      Totals:         1      14       0       0
  1474 ;;Total ram usage:       15 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    1
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_UART_Init
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           
  1485                           ;psect for function ___aldiv
  1486  0391                     ___aldiv:	
  1487                           
  1488                           ;incstack = 0
  1489                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1490  0391  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0392  1303               	bcf	3,6	;RP1=0, select bank0
  1492  0393  01A9               	clrf	___aldiv@sign
  1493  0394  1FA3               	btfss	___aldiv@divisor+3,7
  1494  0395  2BA3               	goto	l504
  1495  0396  09A0               	comf	___aldiv@divisor,f
  1496  0397  09A1               	comf	___aldiv@divisor+1,f
  1497  0398  09A2               	comf	___aldiv@divisor+2,f
  1498  0399  09A3               	comf	___aldiv@divisor+3,f
  1499  039A  0AA0               	incf	___aldiv@divisor,f
  1500  039B  1903               	skipnz
  1501  039C  0AA1               	incf	___aldiv@divisor+1,f
  1502  039D  1903               	skipnz
  1503  039E  0AA2               	incf	___aldiv@divisor+2,f
  1504  039F  1903               	skipnz
  1505  03A0  0AA3               	incf	___aldiv@divisor+3,f
  1506  03A1  01A9               	clrf	___aldiv@sign
  1507  03A2  0AA9               	incf	___aldiv@sign,f
  1508  03A3                     l504:	
  1509  03A3  1FA7               	btfss	___aldiv@dividend+3,7
  1510  03A4  2BB4               	goto	l1633
  1511  03A5  09A4               	comf	___aldiv@dividend,f
  1512  03A6  09A5               	comf	___aldiv@dividend+1,f
  1513  03A7  09A6               	comf	___aldiv@dividend+2,f
  1514  03A8  09A7               	comf	___aldiv@dividend+3,f
  1515  03A9  0AA4               	incf	___aldiv@dividend,f
  1516  03AA  1903               	skipnz
  1517  03AB  0AA5               	incf	___aldiv@dividend+1,f
  1518  03AC  1903               	skipnz
  1519  03AD  0AA6               	incf	___aldiv@dividend+2,f
  1520  03AE  1903               	skipnz
  1521  03AF  0AA7               	incf	___aldiv@dividend+3,f
  1522  03B0  3001               	movlw	1
  1523  03B1  00F4               	movwf	??___aldiv
  1524  03B2  0874               	movf	??___aldiv,w
  1525  03B3  06A9               	xorwf	___aldiv@sign,f
  1526  03B4                     l1633:	
  1527  03B4  3000               	movlw	0
  1528  03B5  00AD               	movwf	___aldiv@quotient+3
  1529  03B6  3000               	movlw	0
  1530  03B7  00AC               	movwf	___aldiv@quotient+2
  1531  03B8  3000               	movlw	0
  1532  03B9  00AB               	movwf	___aldiv@quotient+1
  1533  03BA  3000               	movlw	0
  1534  03BB  00AA               	movwf	___aldiv@quotient
  1535  03BC  0823               	movf	___aldiv@divisor+3,w
  1536  03BD  0422               	iorwf	___aldiv@divisor+2,w
  1537  03BE  0421               	iorwf	___aldiv@divisor+1,w
  1538  03BF  0420               	iorwf	___aldiv@divisor,w
  1539  03C0  1903               	skipnz
  1540  03C1  2C09               	goto	l1655
  1541  03C2  01A8               	clrf	___aldiv@counter
  1542  03C3  0AA8               	incf	___aldiv@counter,f
  1543  03C4                     l1641:	
  1544  03C4  1BA3               	btfsc	___aldiv@divisor+3,7
  1545  03C5  2BD4               	goto	l1643
  1546  03C6  3001               	movlw	1
  1547  03C7  00F4               	movwf	??___aldiv
  1548  03C8                     u1455:	
  1549  03C8  1003               	clrc
  1550  03C9  0DA0               	rlf	___aldiv@divisor,f
  1551  03CA  0DA1               	rlf	___aldiv@divisor+1,f
  1552  03CB  0DA2               	rlf	___aldiv@divisor+2,f
  1553  03CC  0DA3               	rlf	___aldiv@divisor+3,f
  1554  03CD  0BF4               	decfsz	??___aldiv,f
  1555  03CE  2BC8               	goto	u1455
  1556  03CF  3001               	movlw	1
  1557  03D0  00F4               	movwf	??___aldiv
  1558  03D1  0874               	movf	??___aldiv,w
  1559  03D2  07A8               	addwf	___aldiv@counter,f
  1560  03D3  2BC4               	goto	l1641
  1561  03D4                     l1643:	
  1562  03D4  3001               	movlw	1
  1563  03D5  00F4               	movwf	??___aldiv
  1564  03D6                     u1475:	
  1565  03D6  1003               	clrc
  1566  03D7  0DAA               	rlf	___aldiv@quotient,f
  1567  03D8  0DAB               	rlf	___aldiv@quotient+1,f
  1568  03D9  0DAC               	rlf	___aldiv@quotient+2,f
  1569  03DA  0DAD               	rlf	___aldiv@quotient+3,f
  1570  03DB  0BF4               	decfsz	??___aldiv,f
  1571  03DC  2BD6               	goto	u1475
  1572  03DD  0823               	movf	___aldiv@divisor+3,w
  1573  03DE  0227               	subwf	___aldiv@dividend+3,w
  1574  03DF  1D03               	skipz
  1575  03E0  2BEB               	goto	u1485
  1576  03E1  0822               	movf	___aldiv@divisor+2,w
  1577  03E2  0226               	subwf	___aldiv@dividend+2,w
  1578  03E3  1D03               	skipz
  1579  03E4  2BEB               	goto	u1485
  1580  03E5  0821               	movf	___aldiv@divisor+1,w
  1581  03E6  0225               	subwf	___aldiv@dividend+1,w
  1582  03E7  1D03               	skipz
  1583  03E8  2BEB               	goto	u1485
  1584  03E9  0820               	movf	___aldiv@divisor,w
  1585  03EA  0224               	subwf	___aldiv@dividend,w
  1586  03EB                     u1485:	
  1587  03EB  1C03               	skipc
  1588  03EC  2BFC               	goto	l1651
  1589  03ED  0820               	movf	___aldiv@divisor,w
  1590  03EE  02A4               	subwf	___aldiv@dividend,f
  1591  03EF  0821               	movf	___aldiv@divisor+1,w
  1592  03F0  1C03               	skipc
  1593  03F1  0F21               	incfsz	___aldiv@divisor+1,w
  1594  03F2  02A5               	subwf	___aldiv@dividend+1,f
  1595  03F3  0822               	movf	___aldiv@divisor+2,w
  1596  03F4  1C03               	skipc
  1597  03F5  0F22               	incfsz	___aldiv@divisor+2,w
  1598  03F6  02A6               	subwf	___aldiv@dividend+2,f
  1599  03F7  0823               	movf	___aldiv@divisor+3,w
  1600  03F8  1C03               	skipc
  1601  03F9  0F23               	incfsz	___aldiv@divisor+3,w
  1602  03FA  02A7               	subwf	___aldiv@dividend+3,f
  1603  03FB  142A               	bsf	___aldiv@quotient,0
  1604  03FC                     l1651:	
  1605  03FC  3001               	movlw	1
  1606  03FD                     u1495:	
  1607  03FD  1003               	clrc
  1608  03FE  0CA3               	rrf	___aldiv@divisor+3,f
  1609  03FF  0CA2               	rrf	___aldiv@divisor+2,f
  1610  0400  0CA1               	rrf	___aldiv@divisor+1,f
  1611  0401  0CA0               	rrf	___aldiv@divisor,f
  1612  0402  3EFF               	addlw	-1
  1613  0403  1D03               	skipz
  1614  0404  2BFD               	goto	u1495
  1615  0405  3001               	movlw	1
  1616  0406  02A8               	subwf	___aldiv@counter,f
  1617  0407  1D03               	btfss	3,2
  1618  0408  2BD4               	goto	l1643
  1619  0409                     l1655:	
  1620  0409  0829               	movf	___aldiv@sign,w
  1621  040A  1903               	btfsc	3,2
  1622  040B  2C17               	goto	l1659
  1623  040C  09AA               	comf	___aldiv@quotient,f
  1624  040D  09AB               	comf	___aldiv@quotient+1,f
  1625  040E  09AC               	comf	___aldiv@quotient+2,f
  1626  040F  09AD               	comf	___aldiv@quotient+3,f
  1627  0410  0AAA               	incf	___aldiv@quotient,f
  1628  0411  1903               	skipnz
  1629  0412  0AAB               	incf	___aldiv@quotient+1,f
  1630  0413  1903               	skipnz
  1631  0414  0AAC               	incf	___aldiv@quotient+2,f
  1632  0415  1903               	skipnz
  1633  0416  0AAD               	incf	___aldiv@quotient+3,f
  1634  0417                     l1659:	
  1635  0417  082D               	movf	___aldiv@quotient+3,w
  1636  0418  00A3               	movwf	?___aldiv+3
  1637  0419  082C               	movf	___aldiv@quotient+2,w
  1638  041A  00A2               	movwf	?___aldiv+2
  1639  041B  082B               	movf	___aldiv@quotient+1,w
  1640  041C  00A1               	movwf	?___aldiv+1
  1641  041D  082A               	movf	___aldiv@quotient,w
  1642  041E  00A0               	movwf	?___aldiv
  1643  041F  0008               	return
  1644  0420                     __end_of___aldiv:	
  1645                           
  1646                           	psect	text3
  1647  0538                     __ptext3:	
  1648 ;; *************** function _Trigger *****************
  1649 ;; Defined at:
  1650 ;;		line 31 in file "Funciones.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1664 ;;      Params:         0       0       0       0
  1665 ;;      Locals:         0       0       0       0
  1666 ;;      Temps:          2       0       0       0
  1667 ;;      Totals:         2       0       0       0
  1668 ;;Total ram usage:        2 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    1
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           
  1679                           ;psect for function _Trigger
  1680  0538                     _Trigger:	
  1681                           
  1682                           ;Funciones.c: 32: RB0 = 1;
  1683                           
  1684                           ;incstack = 0
  1685                           ; Regs used in _Trigger: [wreg]
  1686  0538  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0539  1303               	bcf	3,6	;RP1=0, select bank0
  1688  053A  1406               	bsf	6,0	;volatile
  1689                           
  1690                           ;Funciones.c: 33: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1691  053B  3006               	movlw	6
  1692  053C  00F4               	movwf	??_Trigger
  1693  053D                     u2457:	
  1694  053D  0BF4               	decfsz	??_Trigger,f
  1695  053E  2D3D               	goto	u2457
  1696  053F  0000               	nop
  1697                           
  1698                           ;Funciones.c: 34: RB0 = 0;
  1699  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1700  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1701  0542  1006               	bcf	6,0	;volatile
  1702                           
  1703                           ;Funciones.c: 36: _delay((unsigned long)((50)*(8000000/4000.0)));
  1704  0543  3082               	movlw	130
  1705  0544  00F5               	movwf	??_Trigger+1
  1706  0545  30DD               	movlw	221
  1707  0546  00F4               	movwf	??_Trigger
  1708  0547                     u2467:	
  1709  0547  0BF4               	decfsz	??_Trigger,f
  1710  0548  2D47               	goto	u2467
  1711  0549  0BF5               	decfsz	??_Trigger+1,f
  1712  054A  2D47               	goto	u2467
  1713  054B  2D4C               	nop2
  1714                           
  1715                           ;Funciones.c: 38: RB1 = 1;
  1716  054C  1283               	bcf	3,5	;RP0=0, select bank0
  1717  054D  1303               	bcf	3,6	;RP1=0, select bank0
  1718  054E  1486               	bsf	6,1	;volatile
  1719                           
  1720                           ;Funciones.c: 39: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1721  054F  3006               	movlw	6
  1722  0550  00F4               	movwf	??_Trigger
  1723  0551                     u2477:	
  1724  0551  0BF4               	decfsz	??_Trigger,f
  1725  0552  2D51               	goto	u2477
  1726  0553  0000               	nop
  1727                           
  1728                           ;Funciones.c: 40: RB1 = 0;
  1729  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1730  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1731  0556  1086               	bcf	6,1	;volatile
  1732                           
  1733                           ;Funciones.c: 42: _delay((unsigned long)((50)*(8000000/4000.0)));
  1734  0557  3082               	movlw	130
  1735  0558  00F5               	movwf	??_Trigger+1
  1736  0559  30DD               	movlw	221
  1737  055A  00F4               	movwf	??_Trigger
  1738  055B                     u2487:	
  1739  055B  0BF4               	decfsz	??_Trigger,f
  1740  055C  2D5B               	goto	u2487
  1741  055D  0BF5               	decfsz	??_Trigger+1,f
  1742  055E  2D5B               	goto	u2487
  1743  055F  2D60               	nop2
  1744                           
  1745                           ;Funciones.c: 44: RB2 = 1;
  1746  0560  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0561  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0562  1506               	bsf	6,2	;volatile
  1749                           
  1750                           ;Funciones.c: 45: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1751  0563  3006               	movlw	6
  1752  0564  00F4               	movwf	??_Trigger
  1753  0565                     u2497:	
  1754  0565  0BF4               	decfsz	??_Trigger,f
  1755  0566  2D65               	goto	u2497
  1756  0567  0000               	nop
  1757                           
  1758                           ;Funciones.c: 46: RB2 = 0;
  1759  0568  1283               	bcf	3,5	;RP0=0, select bank0
  1760  0569  1303               	bcf	3,6	;RP1=0, select bank0
  1761  056A  1106               	bcf	6,2	;volatile
  1762                           
  1763                           ;Funciones.c: 48: _delay((unsigned long)((50)*(8000000/4000.0)));
  1764  056B  3082               	movlw	130
  1765  056C  00F5               	movwf	??_Trigger+1
  1766  056D  30DD               	movlw	221
  1767  056E  00F4               	movwf	??_Trigger
  1768  056F                     u2507:	
  1769  056F  0BF4               	decfsz	??_Trigger,f
  1770  0570  2D6F               	goto	u2507
  1771  0571  0BF5               	decfsz	??_Trigger+1,f
  1772  0572  2D6F               	goto	u2507
  1773  0573  2D74               	nop2
  1774                           
  1775                           ;Funciones.c: 49: RB3 = 1;
  1776  0574  1283               	bcf	3,5	;RP0=0, select bank0
  1777  0575  1303               	bcf	3,6	;RP1=0, select bank0
  1778  0576  1586               	bsf	6,3	;volatile
  1779                           
  1780                           ;Funciones.c: 50: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1781  0577  3006               	movlw	6
  1782  0578  00F4               	movwf	??_Trigger
  1783  0579                     u2517:	
  1784  0579  0BF4               	decfsz	??_Trigger,f
  1785  057A  2D79               	goto	u2517
  1786  057B  0000               	nop
  1787                           
  1788                           ;Funciones.c: 51: RB3= 0;
  1789  057C  1283               	bcf	3,5	;RP0=0, select bank0
  1790  057D  1303               	bcf	3,6	;RP1=0, select bank0
  1791  057E  1186               	bcf	6,3	;volatile
  1792                           
  1793                           ;Funciones.c: 53: _delay((unsigned long)((50)*(8000000/4000.0)));
  1794  057F  3082               	movlw	130
  1795  0580  00F5               	movwf	??_Trigger+1
  1796  0581  30DD               	movlw	221
  1797  0582  00F4               	movwf	??_Trigger
  1798  0583                     u2527:	
  1799  0583  0BF4               	decfsz	??_Trigger,f
  1800  0584  2D83               	goto	u2527
  1801  0585  0BF5               	decfsz	??_Trigger+1,f
  1802  0586  2D83               	goto	u2527
  1803  0587  2D88               	nop2
  1804  0588  0008               	return
  1805  0589                     __end_of_Trigger:	
  1806                           
  1807                           	psect	text4
  1808  0786                     __ptext4:	
  1809 ;; *************** function _ResetEcho *****************
  1810 ;; Defined at:
  1811 ;;		line 108 in file "Funciones.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1825 ;;      Params:         0       0       0       0
  1826 ;;      Locals:         0       0       0       0
  1827 ;;      Temps:          2       0       0       0
  1828 ;;      Totals:         2       0       0       0
  1829 ;;Total ram usage:        2 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    1
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_main
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           
  1840                           ;psect for function _ResetEcho
  1841  0786                     _ResetEcho:	
  1842                           
  1843                           ;Funciones.c: 110: TRISB = 0b00000000;
  1844                           
  1845                           ;incstack = 0
  1846                           ; Regs used in _ResetEcho: [wreg+status,2]
  1847  0786  1683               	bsf	3,5	;RP0=1, select bank1
  1848  0787  1303               	bcf	3,6	;RP1=0, select bank1
  1849  0788  0186               	clrf	6	;volatile
  1850                           
  1851                           ;Funciones.c: 111: _delay((unsigned long)((5)*(8000000/4000.0)));
  1852  0789  300D               	movlw	13
  1853  078A  00F5               	movwf	??_ResetEcho+1
  1854  078B  30FB               	movlw	251
  1855  078C  00F4               	movwf	??_ResetEcho
  1856  078D                     u2537:	
  1857  078D  0BF4               	decfsz	??_ResetEcho,f
  1858  078E  2F8D               	goto	u2537
  1859  078F  0BF5               	decfsz	??_ResetEcho+1,f
  1860  0790  2F8D               	goto	u2537
  1861  0791  2F92               	nop2
  1862                           
  1863                           ;Funciones.c: 112: PORTB = 0b00000000;
  1864  0792  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0793  1303               	bcf	3,6	;RP1=0, select bank0
  1866  0794  0186               	clrf	6	;volatile
  1867                           
  1868                           ;Funciones.c: 113: _delay((unsigned long)((5)*(8000000/4000.0)));
  1869  0795  300D               	movlw	13
  1870  0796  00F5               	movwf	??_ResetEcho+1
  1871  0797  30FB               	movlw	251
  1872  0798  00F4               	movwf	??_ResetEcho
  1873  0799                     u2547:	
  1874  0799  0BF4               	decfsz	??_ResetEcho,f
  1875  079A  2F99               	goto	u2547
  1876  079B  0BF5               	decfsz	??_ResetEcho+1,f
  1877  079C  2F99               	goto	u2547
  1878  079D  2F9E               	nop2
  1879                           
  1880                           ;Funciones.c: 114: TRISB = 0b11110000;
  1881  079E  30F0               	movlw	240
  1882  079F  1683               	bsf	3,5	;RP0=1, select bank1
  1883  07A0  1303               	bcf	3,6	;RP1=0, select bank1
  1884  07A1  0086               	movwf	6	;volatile
  1885  07A2  0008               	return
  1886  07A3                     __end_of_ResetEcho:	
  1887                           
  1888                           	psect	text5
  1889  04E4                     __ptext5:	
  1890 ;; *************** function _PrintDistancias *****************
  1891 ;; Defined at:
  1892 ;;		line 83 in file "Funciones.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  dist1           1    wreg     PTR unsigned char 
  1895 ;;		 -> dist1(8), 
  1896 ;;  dist2           1    8[BANK0 ] PTR unsigned char 
  1897 ;;		 -> dist2(8), 
  1898 ;;  dist3           1    9[BANK0 ] PTR unsigned char 
  1899 ;;		 -> dist3(8), 
  1900 ;;  dist4           1   10[BANK0 ] PTR unsigned char 
  1901 ;;		 -> dist4(8), 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  dist1           1   11[BANK0 ] PTR unsigned char 
  1904 ;;		 -> dist1(8), 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1914 ;;      Params:         0       3       0       0
  1915 ;;      Locals:         0       1       0       0
  1916 ;;      Temps:          0       0       0       0
  1917 ;;      Totals:         0       4       0       0
  1918 ;;Total ram usage:        4 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    5
  1921 ;; This function calls:
  1922 ;;		_lcd_goto
  1923 ;;		_lcd_puts
  1924 ;; This function is called by:
  1925 ;;		_main
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           
  1930                           ;psect for function _PrintDistancias
  1931  04E4                     _PrintDistancias:	
  1932                           
  1933                           ;incstack = 0
  1934                           ; Regs used in _PrintDistancias: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1935                           ;PrintDistancias@dist1 stored from wreg
  1936  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  1937  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  1938  04E6  00AB               	movwf	PrintDistancias@dist1
  1939                           
  1940                           ;Funciones.c: 86: lcd_goto(0, 0);
  1941  04E7  01A5               	clrf	lcd_goto@row
  1942  04E8  3000               	movlw	0
  1943  04E9  118A  2765  118A   	fcall	_lcd_goto
  1944                           
  1945                           ;Funciones.c: 87: lcd_puts("Distancias:");
  1946  04EC  300F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1947  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1948  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1949  04EF  00A5               	movwf	lcd_puts@string
  1950  04F0  3080               	movlw	128
  1951  04F1  00A6               	movwf	lcd_puts@string+1
  1952  04F2  118A  2744  118A   	fcall	_lcd_puts
  1953                           
  1954                           ;Funciones.c: 88: lcd_goto(12,0);
  1955  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1956  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1957  04F7  01A5               	clrf	lcd_goto@row
  1958  04F8  300C               	movlw	12
  1959  04F9  118A  2765  118A   	fcall	_lcd_goto
  1960                           
  1961                           ;Funciones.c: 89: lcd_puts(dist1);
  1962  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  1963  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  1964  04FE  082B               	movf	PrintDistancias@dist1,w
  1965  04FF  00A5               	movwf	lcd_puts@string
  1966  0500  3000               	movlw	0
  1967  0501  00A6               	movwf	lcd_puts@string+1
  1968  0502  118A  2744  118A   	fcall	_lcd_puts
  1969                           
  1970                           ;Funciones.c: 90: lcd_goto(0,1);
  1971  0505  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0506  1303               	bcf	3,6	;RP1=0, select bank0
  1973  0507  01A5               	clrf	lcd_goto@row
  1974  0508  0AA5               	incf	lcd_goto@row,f
  1975  0509  3000               	movlw	0
  1976  050A  118A  2765  118A   	fcall	_lcd_goto
  1977                           
  1978                           ;Funciones.c: 91: lcd_puts(dist2);
  1979  050D  1283               	bcf	3,5	;RP0=0, select bank0
  1980  050E  1303               	bcf	3,6	;RP1=0, select bank0
  1981  050F  0828               	movf	PrintDistancias@dist2,w
  1982  0510  00A5               	movwf	lcd_puts@string
  1983  0511  3000               	movlw	0
  1984  0512  00A6               	movwf	lcd_puts@string+1
  1985  0513  118A  2744  118A   	fcall	_lcd_puts
  1986                           
  1987                           ;Funciones.c: 92: lcd_goto(6,1);
  1988  0516  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0517  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0518  01A5               	clrf	lcd_goto@row
  1991  0519  0AA5               	incf	lcd_goto@row,f
  1992  051A  3006               	movlw	6
  1993  051B  118A  2765  118A   	fcall	_lcd_goto
  1994                           
  1995                           ;Funciones.c: 93: lcd_puts(dist3);
  1996  051E  1283               	bcf	3,5	;RP0=0, select bank0
  1997  051F  1303               	bcf	3,6	;RP1=0, select bank0
  1998  0520  0829               	movf	PrintDistancias@dist3,w
  1999  0521  00A5               	movwf	lcd_puts@string
  2000  0522  3000               	movlw	0
  2001  0523  00A6               	movwf	lcd_puts@string+1
  2002  0524  118A  2744  118A   	fcall	_lcd_puts
  2003                           
  2004                           ;Funciones.c: 94: lcd_goto(12,1);
  2005  0527  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0528  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0529  01A5               	clrf	lcd_goto@row
  2008  052A  0AA5               	incf	lcd_goto@row,f
  2009  052B  300C               	movlw	12
  2010  052C  118A  2765  118A   	fcall	_lcd_goto
  2011                           
  2012                           ;Funciones.c: 95: lcd_puts(dist4);
  2013  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2014  0530  1303               	bcf	3,6	;RP1=0, select bank0
  2015  0531  082A               	movf	PrintDistancias@dist4,w
  2016  0532  00A5               	movwf	lcd_puts@string
  2017  0533  3000               	movlw	0
  2018  0534  00A6               	movwf	lcd_puts@string+1
  2019  0535  118A  2744         	fcall	_lcd_puts
  2020  0537  0008               	return
  2021  0538                     __end_of_PrintDistancias:	
  2022                           
  2023                           	psect	text6
  2024  0744                     __ptext6:	
  2025 ;; *************** function _lcd_puts *****************
  2026 ;; Defined at:
  2027 ;;		line 178 in file "LCD.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  string          2    5[BANK0 ] PTR const unsigned char 
  2030 ;;		 -> dist4(8), dist3(8), dist2(8), dist1(8), 
  2031 ;;		 -> STR_13(12), 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2043 ;;      Params:         0       2       0       0
  2044 ;;      Locals:         0       0       0       0
  2045 ;;      Temps:          0       0       0       0
  2046 ;;      Totals:         0       2       0       0
  2047 ;;Total ram usage:        2 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    4
  2050 ;; This function calls:
  2051 ;;		_lcd_send
  2052 ;; This function is called by:
  2053 ;;		_PrintDistancias
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           
  2058                           ;psect for function _lcd_puts
  2059  0744                     _lcd_puts:	
  2060  0744                     l2163:	
  2061                           ;LCD.c: 180: while (*string != '\0')
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2065                           
  2066  0744  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0745  1303               	bcf	3,6	;RP1=0, select bank0
  2068  0746  0826               	movf	lcd_puts@string+1,w
  2069  0747  00FF               	movwf	127
  2070  0748  0825               	movf	lcd_puts@string,w
  2071  0749  0084               	movwf	4
  2072  074A  118A  2653  118A   	fcall	stringtab
  2073  074D  3A00               	xorlw	0
  2074  074E  1903               	btfsc	3,2
  2075  074F  0008               	return
  2076                           
  2077                           ;LCD.c: 181: lcd_send( *string++, 1 );
  2078  0750  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0751  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0752  01A2               	clrf	lcd_send@rs
  2081  0753  0AA2               	incf	lcd_send@rs,f
  2082  0754  0826               	movf	lcd_puts@string+1,w
  2083  0755  00FF               	movwf	127
  2084  0756  0825               	movf	lcd_puts@string,w
  2085  0757  0084               	movwf	4
  2086  0758  118A  2653  118A   	fcall	stringtab
  2087  075B  118A  26C3  118A   	fcall	_lcd_send
  2088  075E  3001               	movlw	1
  2089  075F  1283               	bcf	3,5	;RP0=0, select bank0
  2090  0760  1303               	bcf	3,6	;RP1=0, select bank0
  2091  0761  07A5               	addwf	lcd_puts@string,f
  2092  0762  1803               	skipnc
  2093  0763  0AA6               	incf	lcd_puts@string+1,f
  2094  0764  2F44               	goto	l2163
  2095  0765                     __end_of_lcd_puts:	
  2096                           
  2097                           	psect	text7
  2098  0765                     __ptext7:	
  2099 ;; *************** function _lcd_goto *****************
  2100 ;; Defined at:
  2101 ;;		line 149 in file "LCD.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  col             1    wreg     unsigned char 
  2104 ;;  row             1    5[BANK0 ] unsigned char 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  col             1    7[BANK0 ] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2116 ;;      Params:         0       1       0       0
  2117 ;;      Locals:         0       1       0       0
  2118 ;;      Temps:          0       1       0       0
  2119 ;;      Totals:         0       3       0       0
  2120 ;;Total ram usage:        3 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    4
  2123 ;; This function calls:
  2124 ;;		_lcd_send
  2125 ;; This function is called by:
  2126 ;;		_PrintDistancias
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           
  2131                           ;psect for function _lcd_goto
  2132  0765                     _lcd_goto:	
  2133                           
  2134                           ;incstack = 0
  2135                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2136                           ;lcd_goto@col stored from wreg
  2137  0765  1283               	bcf	3,5	;RP0=0, select bank0
  2138  0766  1303               	bcf	3,6	;RP1=0, select bank0
  2139  0767  00A7               	movwf	lcd_goto@col
  2140                           
  2141                           ;LCD.c: 152: if (row >= lcdrows)
  2142  0768  086A               	movf	_lcdrows,w
  2143  0769  0225               	subwf	lcd_goto@row,w
  2144  076A  1C03               	skipc
  2145  076B  2F71               	goto	l2151
  2146                           
  2147                           ;LCD.c: 153: row = lcdrows - 1;
  2148  076C  086A               	movf	_lcdrows,w
  2149  076D  3EFF               	addlw	255
  2150  076E  00A6               	movwf	??_lcd_goto
  2151  076F  0826               	movf	??_lcd_goto,w
  2152  0770  00A5               	movwf	lcd_goto@row
  2153  0771                     l2151:	
  2154                           
  2155                           ;LCD.c: 154: if (col >= lcdcolumns)
  2156  0771  0869               	movf	_lcdcolumns,w
  2157  0772  0227               	subwf	lcd_goto@col,w
  2158  0773  1C03               	skipc
  2159  0774  2F7A               	goto	l2155
  2160                           
  2161                           ;LCD.c: 155: col = lcdcolumns - 1;
  2162  0775  0869               	movf	_lcdcolumns,w
  2163  0776  3EFF               	addlw	255
  2164  0777  00A6               	movwf	??_lcd_goto
  2165  0778  0826               	movf	??_lcd_goto,w
  2166  0779  00A7               	movwf	lcd_goto@col
  2167  077A                     l2155:	
  2168                           
  2169                           ;LCD.c: 157: lcd_send( E_SET_DDRAM_ADDR | (col + rowaddr[ row ]), 0 );
  2170  077A  01A2               	clrf	lcd_send@rs
  2171  077B  0825               	movf	lcd_goto@row,w
  2172  077C  3E0B               	addlw	low ((_rowaddr-__stringbase)| (0+32768))
  2173  077D  0084               	movwf	4
  2174  077E  118A  265D  118A   	fcall	stringdir
  2175  0781  0727               	addwf	lcd_goto@col,w
  2176  0782  3880               	iorlw	128
  2177  0783  118A  26C3         	fcall	_lcd_send
  2178  0785  0008               	return
  2179  0786                     __end_of_lcd_goto:	
  2180                           
  2181                           	psect	text8
  2182  06F4                     __ptext8:	
  2183 ;; *************** function _Inicializaciones *****************
  2184 ;; Defined at:
  2185 ;;		line 6 in file "Funciones.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2199 ;;      Params:         0       0       0       0
  2200 ;;      Locals:         0       0       0       0
  2201 ;;      Temps:          0       2       0       0
  2202 ;;      Totals:         0       2       0       0
  2203 ;;Total ram usage:        2 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    5
  2206 ;; This function calls:
  2207 ;;		_lcd_clear
  2208 ;;		_lcd_init
  2209 ;;		_lcd_on
  2210 ;; This function is called by:
  2211 ;;		_main
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           
  2216                           ;psect for function _Inicializaciones
  2217  06F4                     _Inicializaciones:	
  2218                           
  2219                           ;Funciones.c: 7: OSCCON = 0b01110101;
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _Inicializaciones: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2223  06F4  3075               	movlw	117
  2224  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  2225  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  2226  06F7  008F               	movwf	15	;volatile
  2227                           
  2228                           ;Funciones.c: 10: TRISB = 0b11110000;
  2229  06F8  30F0               	movlw	240
  2230  06F9  0086               	movwf	6	;volatile
  2231                           
  2232                           ;Funciones.c: 11: PORTB = 0b00000000;
  2233  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  2234  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  2235  06FC  0186               	clrf	6	;volatile
  2236                           
  2237                           ;Funciones.c: 12: ANSELH = 0b00000000;
  2238  06FD  1683               	bsf	3,5	;RP0=1, select bank3
  2239  06FE  1703               	bsf	3,6	;RP1=1, select bank3
  2240  06FF  0189               	clrf	9	;volatile
  2241                           
  2242                           ;Funciones.c: 17: TMR1 = 0;
  2243  0700  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0701  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0702  018E               	clrf	14	;volatile
  2246  0703  018F               	clrf	15	;volatile
  2247                           
  2248                           ;Funciones.c: 18: T1CON = 0b00010000;
  2249  0704  3010               	movlw	16
  2250  0705  0090               	movwf	16	;volatile
  2251                           
  2252                           ;Funciones.c: 21: INTCON = 0b00001000;
  2253  0706  3008               	movlw	8
  2254  0707  008B               	movwf	11	;volatile
  2255                           
  2256                           ;Funciones.c: 22: IOCB = 0b11110000;
  2257  0708  30F0               	movlw	240
  2258  0709  1683               	bsf	3,5	;RP0=1, select bank1
  2259  070A  1303               	bcf	3,6	;RP1=0, select bank1
  2260  070B  0096               	movwf	22	;volatile
  2261                           
  2262                           ;Funciones.c: 23: GIE = 1;
  2263  070C  178B               	bsf	11,7	;volatile
  2264                           
  2265                           ;Funciones.c: 25: lcd_init(0, 16, 2);
  2266  070D  3010               	movlw	16
  2267  070E  1283               	bcf	3,5	;RP0=0, select bank0
  2268  070F  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0710  00AB               	movwf	??_Inicializaciones
  2270  0711  082B               	movf	??_Inicializaciones,w
  2271  0712  00A5               	movwf	lcd_init@cols
  2272  0713  3002               	movlw	2
  2273  0714  00AC               	movwf	??_Inicializaciones+1
  2274  0715  082C               	movf	??_Inicializaciones+1,w
  2275  0716  00A6               	movwf	lcd_init@rows
  2276  0717  3000               	movlw	0
  2277  0718  118A  2211  118A   	fcall	_lcd_init
  2278                           
  2279                           ;Funciones.c: 26: lcd_clear();
  2280  071B  118A  27A3  118A   	fcall	_lcd_clear
  2281                           
  2282                           ;Funciones.c: 27: lcd_on();
  2283  071E  118A  27B6         	fcall	_lcd_on
  2284  0720  0008               	return
  2285  0721                     __end_of_Inicializaciones:	
  2286                           
  2287                           	psect	text9
  2288  07B6                     __ptext9:	
  2289 ;; *************** function _lcd_on *****************
  2290 ;; Defined at:
  2291 ;;		line 91 in file "LCD.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;		None
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;		None
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2305 ;;      Params:         0       0       0       0
  2306 ;;      Locals:         0       0       0       0
  2307 ;;      Temps:          0       1       0       0
  2308 ;;      Totals:         0       1       0       0
  2309 ;;Total ram usage:        1 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    4
  2312 ;; This function calls:
  2313 ;;		_lcd_send
  2314 ;; This function is called by:
  2315 ;;		_Inicializaciones
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _lcd_on
  2321  07B6                     _lcd_on:	
  2322                           
  2323                           ;LCD.c: 93: dispctrl |= (1<<2);
  2324                           
  2325                           ;incstack = 0
  2326                           ; Regs used in _lcd_on: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2327  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  2328  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  2329  07B8  1558               	bsf	_dispctrl,2
  2330                           
  2331                           ;LCD.c: 94: lcd_send( E_DISPLAY_ON_OFF_CTRL | dispctrl, 0 );
  2332  07B9  01A2               	clrf	lcd_send@rs
  2333  07BA  0858               	movf	_dispctrl,w
  2334  07BB  3808               	iorlw	8
  2335  07BC  118A  26C3  118A   	fcall	_lcd_send
  2336                           
  2337                           ;LCD.c: 95: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2338  07BF  3021               	movlw	33
  2339  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  2340  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  2341  07C2  00A5               	movwf	??_lcd_on
  2342  07C3                     u2557:	
  2343  07C3  0BA5               	decfsz	??_lcd_on,f
  2344  07C4  2FC3               	goto	u2557
  2345  07C5  0008               	return
  2346  07C6                     __end_of_lcd_on:	
  2347                           
  2348                           	psect	text10
  2349  0211                     __ptext10:	
  2350 ;; *************** function _lcd_init *****************
  2351 ;; Defined at:
  2352 ;;		line 33 in file "LCD.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  iodata          1    wreg     PTR void 
  2355 ;;		 -> NULL(0), 
  2356 ;;  cols            1    5[BANK0 ] unsigned char 
  2357 ;;  rows            1    6[BANK0 ] unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  iodata          1   10[BANK0 ] PTR void 
  2360 ;;		 -> NULL(0), 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      unsigned char 
  2363 ;; Registers used:
  2364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2370 ;;      Params:         0       2       0       0
  2371 ;;      Locals:         0       1       0       0
  2372 ;;      Temps:          0       3       0       0
  2373 ;;      Totals:         0       6       0       0
  2374 ;;Total ram usage:        6 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    4
  2377 ;; This function calls:
  2378 ;;		_lcd_ioinit
  2379 ;;		_lcd_iowrite4
  2380 ;;		_lcd_send
  2381 ;; This function is called by:
  2382 ;;		_Inicializaciones
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           
  2387                           ;psect for function _lcd_init
  2388  0211                     _lcd_init:	
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2392                           ;lcd_init@iodata stored from wreg
  2393  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0213  00AA               	movwf	lcd_init@iodata
  2396                           
  2397                           ;LCD.c: 36: iomode = lcd_ioinit(iodata);
  2398  0214  082A               	movf	lcd_init@iodata,w
  2399  0215  118A  2721  118A   	fcall	_lcd_ioinit
  2400  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2401  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2402  021A  00A7               	movwf	??_lcd_init
  2403  021B  0827               	movf	??_lcd_init,w
  2404  021C  00EF               	movwf	_iomode
  2405                           
  2406                           ;LCD.c: 37: lcdrows = rows;
  2407  021D  0826               	movf	lcd_init@rows,w
  2408  021E  00A7               	movwf	??_lcd_init
  2409  021F  0827               	movf	??_lcd_init,w
  2410  0220  00EA               	movwf	_lcdrows
  2411                           
  2412                           ;LCD.c: 38: lcdcolumns = cols;
  2413  0221  0825               	movf	lcd_init@cols,w
  2414  0222  00A7               	movwf	??_lcd_init
  2415  0223  0827               	movf	??_lcd_init,w
  2416  0224  00E9               	movwf	_lcdcolumns
  2417                           
  2418                           ;LCD.c: 41: _delay((unsigned long)((100)*(8000000/4000.0)));
  2419  0225  3002               	movlw	2
  2420  0226  00A9               	movwf	??_lcd_init+2
  2421  0227  3004               	movlw	4
  2422  0228  00A8               	movwf	??_lcd_init+1
  2423  0229  30BA               	movlw	186
  2424  022A  00A7               	movwf	??_lcd_init
  2425  022B                     u2567:	
  2426  022B  0BA7               	decfsz	??_lcd_init,f
  2427  022C  2A2B               	goto	u2567
  2428  022D  0BA8               	decfsz	??_lcd_init+1,f
  2429  022E  2A2B               	goto	u2567
  2430  022F  0BA9               	decfsz	??_lcd_init+2,f
  2431  0230  2A2B               	goto	u2567
  2432  0231  0000               	nop
  2433                           
  2434                           ;LCD.c: 44: if (iomode == 4) {
  2435  0232  3004               	movlw	4
  2436  0233  1283               	bcf	3,5	;RP0=0, select bank0
  2437  0234  1303               	bcf	3,6	;RP1=0, select bank0
  2438  0235  066F               	xorwf	_iomode,w
  2439  0236  1D03               	btfss	3,2
  2440  0237  2A76               	goto	l2065
  2441                           
  2442                           ;LCD.c: 47: lcd_iowrite4(0x03);
  2443  0238  3003               	movlw	3
  2444  0239  118A  25D7  118A   	fcall	_lcd_iowrite4
  2445                           
  2446                           ;LCD.c: 48: _delay((unsigned long)((5)*(8000000/4000.0)));
  2447  023C  300D               	movlw	13
  2448  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2449  023E  1303               	bcf	3,6	;RP1=0, select bank0
  2450  023F  00A8               	movwf	??_lcd_init+1
  2451  0240  30FB               	movlw	251
  2452  0241  00A7               	movwf	??_lcd_init
  2453  0242                     u2577:	
  2454  0242  0BA7               	decfsz	??_lcd_init,f
  2455  0243  2A42               	goto	u2577
  2456  0244  0BA8               	decfsz	??_lcd_init+1,f
  2457  0245  2A42               	goto	u2577
  2458  0246  2A47               	nop2
  2459                           
  2460                           ;LCD.c: 49: lcd_iowrite4(0x03);
  2461  0247  3003               	movlw	3
  2462  0248  118A  25D7  118A   	fcall	_lcd_iowrite4
  2463                           
  2464                           ;LCD.c: 50: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2465  024B  304F               	movlw	79
  2466  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2467  024D  1303               	bcf	3,6	;RP1=0, select bank0
  2468  024E  00A7               	movwf	??_lcd_init
  2469  024F                     u2587:	
  2470  024F  0BA7               	decfsz	??_lcd_init,f
  2471  0250  2A4F               	goto	u2587
  2472  0251  2A52               	nop2	;nop
  2473                           
  2474                           ;LCD.c: 51: lcd_iowrite4(0x03);
  2475  0252  3003               	movlw	3
  2476  0253  118A  25D7  118A   	fcall	_lcd_iowrite4
  2477                           
  2478                           ;LCD.c: 52: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2479  0256  304F               	movlw	79
  2480  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0258  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0259  00A7               	movwf	??_lcd_init
  2483  025A                     u2597:	
  2484  025A  0BA7               	decfsz	??_lcd_init,f
  2485  025B  2A5A               	goto	u2597
  2486  025C  2A5D               	nop2	;nop
  2487                           
  2488                           ;LCD.c: 53: lcd_iowrite4(0x02);
  2489  025D  3002               	movlw	2
  2490  025E  118A  25D7  118A   	fcall	_lcd_iowrite4
  2491                           
  2492                           ;LCD.c: 54: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2493  0261  304F               	movlw	79
  2494  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0263  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0264  00A7               	movwf	??_lcd_init
  2497  0265                     u2607:	
  2498  0265  0BA7               	decfsz	??_lcd_init,f
  2499  0266  2A65               	goto	u2607
  2500  0267  2A68               	nop2	;nop
  2501                           
  2502                           ;LCD.c: 55: lcd_send( E_FUNCTION_SET | 0 | (1<<3) | (1<<2), 0 );
  2503  0268  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0269  1303               	bcf	3,6	;RP1=0, select bank0
  2505  026A  01A2               	clrf	lcd_send@rs
  2506  026B  302C               	movlw	44
  2507  026C  118A  26C3  118A   	fcall	_lcd_send
  2508                           
  2509                           ;LCD.c: 56: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2510  026F  3021               	movlw	33
  2511  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2512  0271  1303               	bcf	3,6	;RP1=0, select bank0
  2513  0272  00A7               	movwf	??_lcd_init
  2514  0273                     u2617:	
  2515  0273  0BA7               	decfsz	??_lcd_init,f
  2516  0274  2A73               	goto	u2617
  2517                           
  2518                           ;LCD.c: 57: } else if (iomode == 8) {
  2519  0275  2AB5               	goto	l2079
  2520  0276                     l2065:	
  2521  0276  3008               	movlw	8
  2522  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2524  0279  066F               	xorwf	_iomode,w
  2525  027A  1D03               	btfss	3,2
  2526  027B  2AB5               	goto	l2079
  2527                           
  2528                           ;LCD.c: 59: lcd_send( E_FUNCTION_SET, 0 );
  2529  027C  01A2               	clrf	lcd_send@rs
  2530  027D  3020               	movlw	32
  2531  027E  118A  26C3  118A   	fcall	_lcd_send
  2532                           
  2533                           ;LCD.c: 60: _delay((unsigned long)((5)*(8000000/4000.0)));
  2534  0281  300D               	movlw	13
  2535  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0284  00A8               	movwf	??_lcd_init+1
  2538  0285  30FB               	movlw	251
  2539  0286  00A7               	movwf	??_lcd_init
  2540  0287                     u2627:	
  2541  0287  0BA7               	decfsz	??_lcd_init,f
  2542  0288  2A87               	goto	u2627
  2543  0289  0BA8               	decfsz	??_lcd_init+1,f
  2544  028A  2A87               	goto	u2627
  2545  028B  2A8C               	nop2
  2546                           
  2547                           ;LCD.c: 61: lcd_send( E_FUNCTION_SET, 0 );
  2548  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2549  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2550  028E  01A2               	clrf	lcd_send@rs
  2551  028F  3020               	movlw	32
  2552  0290  118A  26C3  118A   	fcall	_lcd_send
  2553                           
  2554                           ;LCD.c: 62: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2555  0293  304F               	movlw	79
  2556  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0295  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0296  00A7               	movwf	??_lcd_init
  2559  0297                     u2637:	
  2560  0297  0BA7               	decfsz	??_lcd_init,f
  2561  0298  2A97               	goto	u2637
  2562  0299  2A9A               	nop2	;nop
  2563                           
  2564                           ;LCD.c: 63: lcd_send( E_FUNCTION_SET, 0 );
  2565  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2566  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2567  029C  01A2               	clrf	lcd_send@rs
  2568  029D  3020               	movlw	32
  2569  029E  118A  26C3  118A   	fcall	_lcd_send
  2570                           
  2571                           ;LCD.c: 64: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2572  02A1  304F               	movlw	79
  2573  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2574  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  2575  02A4  00A7               	movwf	??_lcd_init
  2576  02A5                     u2647:	
  2577  02A5  0BA7               	decfsz	??_lcd_init,f
  2578  02A6  2AA5               	goto	u2647
  2579  02A7  2AA8               	nop2	;nop
  2580                           
  2581                           ;LCD.c: 65: lcd_send( E_FUNCTION_SET | (1<<4) | (1<<3) | (1<<2), 0 );
  2582  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2583  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2584  02AA  01A2               	clrf	lcd_send@rs
  2585  02AB  303C               	movlw	60
  2586  02AC  118A  26C3  118A   	fcall	_lcd_send
  2587                           
  2588                           ;LCD.c: 66: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2589  02AF  3021               	movlw	33
  2590  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2591  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2592  02B2  00A7               	movwf	??_lcd_init
  2593  02B3                     u2657:	
  2594  02B3  0BA7               	decfsz	??_lcd_init,f
  2595  02B4  2AB3               	goto	u2657
  2596  02B5                     l2079:	
  2597                           
  2598                           ;LCD.c: 67: }
  2599                           ;LCD.c: 69: lcd_send( E_DISPLAY_ON_OFF_CTRL | 0, 0 );
  2600  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2601  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  2602  02B7  01A2               	clrf	lcd_send@rs
  2603  02B8  3008               	movlw	8
  2604  02B9  118A  26C3  118A   	fcall	_lcd_send
  2605                           
  2606                           ;LCD.c: 70: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2607  02BC  3021               	movlw	33
  2608  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2609  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2610  02BF  00A7               	movwf	??_lcd_init
  2611  02C0                     u2667:	
  2612  02C0  0BA7               	decfsz	??_lcd_init,f
  2613  02C1  2AC0               	goto	u2667
  2614                           
  2615                           ;LCD.c: 71: lcd_send( E_CLEAR_DISPLAY, 0 );
  2616  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2617  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2618  02C4  01A2               	clrf	lcd_send@rs
  2619  02C5  3001               	movlw	1
  2620  02C6  118A  26C3  118A   	fcall	_lcd_send
  2621                           
  2622                           ;LCD.c: 72: _delay((unsigned long)((2)*(8000000/4000.0)));
  2623  02C9  3006               	movlw	6
  2624  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2625  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2626  02CC  00A8               	movwf	??_lcd_init+1
  2627  02CD  3030               	movlw	48
  2628  02CE  00A7               	movwf	??_lcd_init
  2629  02CF                     u2677:	
  2630  02CF  0BA7               	decfsz	??_lcd_init,f
  2631  02D0  2ACF               	goto	u2677
  2632  02D1  0BA8               	decfsz	??_lcd_init+1,f
  2633  02D2  2ACF               	goto	u2677
  2634  02D3  0000               	nop
  2635                           
  2636                           ;LCD.c: 73: lcd_send( E_ENTRY_MODE_SET | 0 | (1<<1), 0 );
  2637  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2638  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2639  02D6  01A2               	clrf	lcd_send@rs
  2640  02D7  3006               	movlw	6
  2641  02D8  118A  26C3  118A   	fcall	_lcd_send
  2642                           
  2643                           ;LCD.c: 74: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2644  02DB  3021               	movlw	33
  2645  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2646  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2647  02DE  00A7               	movwf	??_lcd_init
  2648  02DF                     u2687:	
  2649  02DF  0BA7               	decfsz	??_lcd_init,f
  2650  02E0  2ADF               	goto	u2687
  2651  02E1  0008               	return
  2652  02E2                     __end_of_lcd_init:	
  2653                           ;LCD.c: 76: return 1;
  2654                           ;	Return value of _lcd_init is never used
  2655                           
  2656                           
  2657                           	psect	text11
  2658  0721                     __ptext11:	
  2659 ;; *************** function _lcd_ioinit *****************
  2660 ;; Defined at:
  2661 ;;		line 48 in file "LCD-PIC16.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  iodata          1    wreg     PTR void 
  2664 ;;		 -> NULL(0), 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  iodata          1    0[BANK0 ] PTR void 
  2667 ;;		 -> NULL(0), 
  2668 ;;  i               1    1[BANK0 ] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      unsigned char 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2678 ;;      Params:         0       0       0       0
  2679 ;;      Locals:         0       2       0       0
  2680 ;;      Temps:          1       0       0       0
  2681 ;;      Totals:         1       2       0       0
  2682 ;;Total ram usage:        3 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    2
  2685 ;; This function calls:
  2686 ;;		_lcd_ioset
  2687 ;; This function is called by:
  2688 ;;		_lcd_init
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           
  2693                           ;psect for function _lcd_ioinit
  2694  0721                     _lcd_ioinit:	
  2695                           
  2696                           ;LCD-PIC16.c: 50: uint8_t i = 0;
  2697                           
  2698                           ;incstack = 0
  2699                           ; Regs used in _lcd_ioinit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2700  0721  1283               	bcf	3,5	;RP0=0, select bank0
  2701  0722  1303               	bcf	3,6	;RP1=0, select bank0
  2702  0723  01A1               	clrf	lcd_ioinit@i
  2703                           
  2704                           ;LCD-PIC16.c: 53: TRISC5 = 0;
  2705  0724  1683               	bsf	3,5	;RP0=1, select bank1
  2706  0725  1303               	bcf	3,6	;RP1=0, select bank1
  2707  0726  1287               	bcf	7,5	;volatile
  2708                           
  2709                           ;LCD-PIC16.c: 54: TRISC4 = 0;
  2710  0727  1207               	bcf	7,4	;volatile
  2711                           
  2712                           ;LCD-PIC16.c: 60: TRISC0 = 0;
  2713  0728  1007               	bcf	7,0	;volatile
  2714                           
  2715                           ;LCD-PIC16.c: 61: TRISC1 = 0;
  2716  0729  1087               	bcf	7,1	;volatile
  2717                           
  2718                           ;LCD-PIC16.c: 62: TRISC2 = 0;
  2719  072A  1107               	bcf	7,2	;volatile
  2720                           
  2721                           ;LCD-PIC16.c: 63: TRISC3 = 0;
  2722  072B  1187               	bcf	7,3	;volatile
  2723                           
  2724                           ;LCD-PIC16.c: 75: for (i = 0; i < 11; i++)
  2725  072C  1283               	bcf	3,5	;RP0=0, select bank0
  2726  072D  1303               	bcf	3,6	;RP1=0, select bank0
  2727  072E  01A1               	clrf	lcd_ioinit@i
  2728  072F  300B               	movlw	11
  2729  0730  0221               	subwf	lcd_ioinit@i,w
  2730  0731  1803               	btfsc	3,0
  2731  0732  2F42               	goto	l1977
  2732  0733                     l1971:	
  2733                           
  2734                           ;LCD-PIC16.c: 76: lcd_ioset(i, 0);
  2735  0733  01F4               	clrf	lcd_ioset@out
  2736  0734  0821               	movf	lcd_ioinit@i,w
  2737  0735  118A  248E  118A   	fcall	_lcd_ioset
  2738  0738  3001               	movlw	1
  2739  0739  00F6               	movwf	??_lcd_ioinit
  2740  073A  0876               	movf	??_lcd_ioinit,w
  2741  073B  1283               	bcf	3,5	;RP0=0, select bank0
  2742  073C  1303               	bcf	3,6	;RP1=0, select bank0
  2743  073D  07A1               	addwf	lcd_ioinit@i,f
  2744  073E  300B               	movlw	11
  2745  073F  0221               	subwf	lcd_ioinit@i,w
  2746  0740  1C03               	skipc
  2747  0741  2F33               	goto	l1971
  2748  0742                     l1977:	
  2749                           
  2750                           ;LCD-PIC16.c: 80: return 4;
  2751  0742  3004               	movlw	4
  2752  0743  0008               	return
  2753  0744                     __end_of_lcd_ioinit:	
  2754                           
  2755                           	psect	text12
  2756  07A3                     __ptext12:	
  2757 ;; *************** function _lcd_clear *****************
  2758 ;; Defined at:
  2759 ;;		line 79 in file "LCD.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;		None
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;		None
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2773 ;;      Params:         0       0       0       0
  2774 ;;      Locals:         0       0       0       0
  2775 ;;      Temps:          0       2       0       0
  2776 ;;      Totals:         0       2       0       0
  2777 ;;Total ram usage:        2 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    4
  2780 ;; This function calls:
  2781 ;;		_lcd_send
  2782 ;; This function is called by:
  2783 ;;		_Inicializaciones
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           
  2788                           ;psect for function _lcd_clear
  2789  07A3                     _lcd_clear:	
  2790                           
  2791                           ;LCD.c: 81: lcd_send( E_CLEAR_DISPLAY, 0 );
  2792                           
  2793                           ;incstack = 0
  2794                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2795  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  2796  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  2797  07A5  01A2               	clrf	lcd_send@rs
  2798  07A6  3001               	movlw	1
  2799  07A7  118A  26C3  118A   	fcall	_lcd_send
  2800                           
  2801                           ;LCD.c: 82: _delay((unsigned long)((2)*(8000000/4000.0)));
  2802  07AA  3006               	movlw	6
  2803  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  2804  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  2805  07AD  00A6               	movwf	??_lcd_clear+1
  2806  07AE  3030               	movlw	48
  2807  07AF  00A5               	movwf	??_lcd_clear
  2808  07B0                     u2697:	
  2809  07B0  0BA5               	decfsz	??_lcd_clear,f
  2810  07B1  2FB0               	goto	u2697
  2811  07B2  0BA6               	decfsz	??_lcd_clear+1,f
  2812  07B3  2FB0               	goto	u2697
  2813  07B4  0000               	nop
  2814  07B5  0008               	return
  2815  07B6                     __end_of_lcd_clear:	
  2816                           
  2817                           	psect	text13
  2818  06C3                     __ptext13:	
  2819 ;; *************** function _lcd_send *****************
  2820 ;; Defined at:
  2821 ;;		line 160 in file "LCD.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  data            1    wreg     unsigned char 
  2824 ;;  rs              1    2[BANK0 ] unsigned char 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  data            1    4[BANK0 ] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2836 ;;      Params:         0       1       0       0
  2837 ;;      Locals:         0       1       0       0
  2838 ;;      Temps:          0       1       0       0
  2839 ;;      Totals:         0       3       0       0
  2840 ;;Total ram usage:        3 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    3
  2843 ;; This function calls:
  2844 ;;		_lcd_ioset
  2845 ;;		_lcd_iowrite4
  2846 ;;		_lcd_iowrite8
  2847 ;; This function is called by:
  2848 ;;		_lcd_init
  2849 ;;		_lcd_clear
  2850 ;;		_lcd_on
  2851 ;;		_lcd_goto
  2852 ;;		_lcd_puts
  2853 ;;		_lcd_home
  2854 ;;		_lcd_off
  2855 ;;		_lcd_cursor
  2856 ;;		_lcd_cursor_left
  2857 ;;		_lcd_cursor_right
  2858 ;;		_lcd_scroll_left
  2859 ;;		_lcd_scroll_right
  2860 ;;		_lcd_autoscroll_on
  2861 ;;		_lcd_autoscroll_off
  2862 ;;		_lcd_create_char
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           
  2867                           ;psect for function _lcd_send
  2868  06C3                     _lcd_send:	
  2869                           
  2870                           ;incstack = 0
  2871                           ; Regs used in _lcd_send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2872                           ;lcd_send@data stored from wreg
  2873  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  2874  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  2875  06C5  00A4               	movwf	lcd_send@data
  2876                           
  2877                           ;LCD.c: 163: if (rs)
  2878  06C6  0822               	movf	lcd_send@rs,w
  2879  06C7  1903               	btfsc	3,2
  2880  06C8  2ECC               	goto	l1985
  2881                           
  2882                           ;LCD.c: 164: lcd_ioset(E_RS_PIN,1);
  2883  06C9  01F4               	clrf	lcd_ioset@out
  2884  06CA  0AF4               	incf	lcd_ioset@out,f
  2885  06CB  2ECD               	goto	L1
  2886  06CC                     l1985:	
  2887                           
  2888                           ;LCD.c: 165: else
  2889                           ;LCD.c: 166: lcd_ioset(E_RS_PIN,0);
  2890  06CC  01F4               	clrf	lcd_ioset@out
  2891  06CD                     L1:	
  2892  06CD  3009               	movlw	9
  2893  06CE  118A  248E  118A   	fcall	_lcd_ioset
  2894                           
  2895                           ;LCD.c: 168: lcd_ioset(E_RW_PIN,0);
  2896  06D1  01F4               	clrf	lcd_ioset@out
  2897  06D2  300A               	movlw	10
  2898  06D3  118A  248E  118A   	fcall	_lcd_ioset
  2899                           
  2900                           ;LCD.c: 170: if (iomode == 4) {
  2901  06D6  3004               	movlw	4
  2902  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  2903  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  2904  06D9  066F               	xorwf	_iomode,w
  2905  06DA  1D03               	btfss	3,2
  2906  06DB  2EEE               	goto	l1991
  2907                           
  2908                           ;LCD.c: 171: lcd_iowrite4(data >> 4);
  2909  06DC  0824               	movf	lcd_send@data,w
  2910  06DD  00A3               	movwf	??_lcd_send
  2911  06DE  3004               	movlw	4
  2912  06DF                     u2095:	
  2913  06DF  1003               	clrc
  2914  06E0  0CA3               	rrf	??_lcd_send,f
  2915  06E1  3EFF               	addlw	-1
  2916  06E2  1D03               	skipz
  2917  06E3  2EDF               	goto	u2095
  2918  06E4  0823               	movf	??_lcd_send,w
  2919  06E5  118A  25D7  118A   	fcall	_lcd_iowrite4
  2920                           
  2921                           ;LCD.c: 172: lcd_iowrite4(data);
  2922  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  2923  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  2924  06EA  0824               	movf	lcd_send@data,w
  2925  06EB  118A  25D7         	fcall	_lcd_iowrite4
  2926                           
  2927                           ;LCD.c: 173: } else {
  2928  06ED  0008               	return
  2929  06EE                     l1991:	
  2930                           
  2931                           ;LCD.c: 174: lcd_iowrite8(data);
  2932  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  2933  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  2934  06F0  0824               	movf	lcd_send@data,w
  2935  06F1  118A  27D4         	fcall	_lcd_iowrite8
  2936  06F3  0008               	return
  2937  06F4                     __end_of_lcd_send:	
  2938                           
  2939                           	psect	text14
  2940  07D4                     __ptext14:	
  2941 ;; *************** function _lcd_iowrite8 *****************
  2942 ;; Defined at:
  2943 ;;		line 143 in file "LCD-PIC16.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  data            1    wreg     unsigned char 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  data            1    0[COMMON] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2957 ;;      Params:         0       0       0       0
  2958 ;;      Locals:         0       0       0       0
  2959 ;;      Temps:          0       0       0       0
  2960 ;;      Totals:         0       0       0       0
  2961 ;;Total ram usage:        0 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    1
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_lcd_send
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           
  2972                           ;psect for function _lcd_iowrite8
  2973  07D4                     _lcd_iowrite8:	
  2974                           
  2975                           ;incstack = 0
  2976                           ; Regs used in _lcd_iowrite8: [wreg]
  2977  07D4  0008               	return
  2978  07D5                     __end_of_lcd_iowrite8:	
  2979                           
  2980                           	psect	text15
  2981  05D7                     __ptext15:	
  2982 ;; *************** function _lcd_iowrite4 *****************
  2983 ;; Defined at:
  2984 ;;		line 129 in file "LCD-PIC16.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  data            1    wreg     unsigned char 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  data            1    0[BANK0 ] unsigned char 
  2989 ;;  i               1    1[BANK0 ] unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2999 ;;      Params:         0       0       0       0
  3000 ;;      Locals:         0       2       0       0
  3001 ;;      Temps:          2       0       0       0
  3002 ;;      Totals:         2       2       0       0
  3003 ;;Total ram usage:        4 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    2
  3006 ;; This function calls:
  3007 ;;		_lcd_ioset
  3008 ;; This function is called by:
  3009 ;;		_lcd_init
  3010 ;;		_lcd_send
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function _lcd_iowrite4
  3016  05D7                     _lcd_iowrite4:	
  3017                           
  3018                           ;incstack = 0
  3019                           ; Regs used in _lcd_iowrite4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3020                           ;lcd_iowrite4@data stored from wreg
  3021  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  3022  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  3023  05D9  00A0               	movwf	lcd_iowrite4@data
  3024                           
  3025                           ;LCD-PIC16.c: 132: uint8_t i;
  3026                           ;LCD-PIC16.c: 134: for (i = 4; i < 8; i++)
  3027  05DA  3004               	movlw	4
  3028  05DB  00F6               	movwf	??_lcd_iowrite4
  3029  05DC  0876               	movf	??_lcd_iowrite4,w
  3030  05DD  00A1               	movwf	lcd_iowrite4@i
  3031  05DE  3008               	movlw	8
  3032  05DF  0221               	subwf	lcd_iowrite4@i,w
  3033  05E0  1803               	btfsc	3,0
  3034  05E1  2E05               	goto	l1947
  3035  05E2                     l1941:	
  3036                           
  3037                           ;LCD-PIC16.c: 135: lcd_ioset(i, (data & (1 << i - 4)) ? 1 : 0);
  3038  05E2  3001               	movlw	1
  3039  05E3  00F6               	movwf	??_lcd_iowrite4
  3040  05E4  0821               	movf	lcd_iowrite4@i,w
  3041  05E5  3EFC               	addlw	-4
  3042  05E6  3E01               	addlw	1
  3043  05E7  2DEA               	goto	u2014
  3044  05E8                     u2015:	
  3045  05E8  1003               	clrc
  3046  05E9  0DF6               	rlf	??_lcd_iowrite4,f
  3047  05EA                     u2014:	
  3048  05EA  3EFF               	addlw	-1
  3049  05EB  1D03               	skipz
  3050  05EC  2DE8               	goto	u2015
  3051  05ED  0876               	movf	??_lcd_iowrite4,w
  3052  05EE  0520               	andwf	lcd_iowrite4@data,w
  3053  05EF  1903               	btfsc	3,2
  3054  05F0  2DF3               	goto	u2020
  3055  05F1  3001               	movlw	1
  3056  05F2  2DF4               	goto	u2030
  3057  05F3                     u2020:	
  3058  05F3  3000               	movlw	0
  3059  05F4                     u2030:	
  3060  05F4  00F7               	movwf	??_lcd_iowrite4+1
  3061  05F5  0877               	movf	??_lcd_iowrite4+1,w
  3062  05F6  00F4               	movwf	lcd_ioset@out
  3063  05F7  0821               	movf	lcd_iowrite4@i,w
  3064  05F8  118A  248E  118A   	fcall	_lcd_ioset
  3065  05FB  3001               	movlw	1
  3066  05FC  00F6               	movwf	??_lcd_iowrite4
  3067  05FD  0876               	movf	??_lcd_iowrite4,w
  3068  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3069  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0600  07A1               	addwf	lcd_iowrite4@i,f
  3071  0601  3008               	movlw	8
  3072  0602  0221               	subwf	lcd_iowrite4@i,w
  3073  0603  1C03               	skipc
  3074  0604  2DE2               	goto	l1941
  3075  0605                     l1947:	
  3076                           
  3077                           ;LCD-PIC16.c: 137: lcd_ioset(E_EN_PIN,1);
  3078  0605  01F4               	clrf	lcd_ioset@out
  3079  0606  0AF4               	incf	lcd_ioset@out,f
  3080  0607  3008               	movlw	8
  3081  0608  118A  248E  118A   	fcall	_lcd_ioset
  3082                           
  3083                           ;LCD-PIC16.c: 138: _delay((unsigned long)((10)*(8000000/4000000.0)));
  3084  060B  3006               	movlw	6
  3085  060C  00F6               	movwf	??_lcd_iowrite4
  3086  060D                     u2707:	
  3087  060D  0BF6               	decfsz	??_lcd_iowrite4,f
  3088  060E  2E0D               	goto	u2707
  3089  060F  0000               	nop
  3090                           
  3091                           ;LCD-PIC16.c: 139: lcd_ioset(E_EN_PIN,0);
  3092  0610  01F4               	clrf	lcd_ioset@out
  3093  0611  3008               	movlw	8
  3094  0612  118A  248E         	fcall	_lcd_ioset
  3095  0614  0008               	return
  3096  0615                     __end_of_lcd_iowrite4:	
  3097                           
  3098                           	psect	text16
  3099  048E                     __ptext16:	
  3100 ;; *************** function _lcd_ioset *****************
  3101 ;; Defined at:
  3102 ;;		line 86 in file "LCD-PIC16.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;  pin             1    wreg     enum E42
  3105 ;;  out             1    4[COMMON] unsigned char 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  pin             1    5[COMMON] enum E42
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3117 ;;      Params:         1       0       0       0
  3118 ;;      Locals:         1       0       0       0
  3119 ;;      Temps:          0       0       0       0
  3120 ;;      Totals:         2       0       0       0
  3121 ;;Total ram usage:        2 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    1
  3124 ;; This function calls:
  3125 ;;		Nothing
  3126 ;; This function is called by:
  3127 ;;		_lcd_ioinit
  3128 ;;		_lcd_iowrite4
  3129 ;;		_lcd_send
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           
  3134                           ;psect for function _lcd_ioset
  3135  048E                     _lcd_ioset:	
  3136                           
  3137                           ;incstack = 0
  3138                           ; Regs used in _lcd_ioset: [wreg-fsr0h+status,2+status,0]
  3139                           ;lcd_ioset@pin stored from wreg
  3140  048E  00F5               	movwf	lcd_ioset@pin
  3141                           
  3142                           ;LCD-PIC16.c: 88: switch (pin) {
  3143  048F  2CCC               	goto	l1935
  3144  0490                     l187:	
  3145                           ;LCD-PIC16.c: 103: case E_D4_PIN:
  3146                           
  3147                           
  3148                           ;LCD-PIC16.c: 104: RC0 = out;
  3149  0490  1C74               	btfss	lcd_ioset@out,0
  3150  0491  2C96               	goto	u1880
  3151  0492  1283               	bcf	3,5	;RP0=0, select bank0
  3152  0493  1303               	bcf	3,6	;RP1=0, select bank0
  3153  0494  1407               	bsf	7,0	;volatile
  3154  0495  0008               	return
  3155  0496                     u1880:	
  3156  0496  1283               	bcf	3,5	;RP0=0, select bank0
  3157  0497  1303               	bcf	3,6	;RP1=0, select bank0
  3158  0498  1007               	bcf	7,0	;volatile
  3159                           
  3160                           ;LCD-PIC16.c: 105: break;
  3161  0499  0008               	return
  3162  049A                     l189:	
  3163                           ;LCD-PIC16.c: 106: case E_D5_PIN:
  3164                           
  3165                           
  3166                           ;LCD-PIC16.c: 107: RC1 = out;
  3167  049A  1C74               	btfss	lcd_ioset@out,0
  3168  049B  2CA0               	goto	u1900
  3169  049C  1283               	bcf	3,5	;RP0=0, select bank0
  3170  049D  1303               	bcf	3,6	;RP1=0, select bank0
  3171  049E  1487               	bsf	7,1	;volatile
  3172  049F  0008               	return
  3173  04A0                     u1900:	
  3174  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  3175  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  3176  04A2  1087               	bcf	7,1	;volatile
  3177                           
  3178                           ;LCD-PIC16.c: 108: break;
  3179  04A3  0008               	return
  3180  04A4                     l190:	
  3181                           ;LCD-PIC16.c: 109: case E_D6_PIN:
  3182                           
  3183                           
  3184                           ;LCD-PIC16.c: 110: RC2 = out;
  3185  04A4  1C74               	btfss	lcd_ioset@out,0
  3186  04A5  2CAA               	goto	u1920
  3187  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  3188  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  3189  04A8  1507               	bsf	7,2	;volatile
  3190  04A9  0008               	return
  3191  04AA                     u1920:	
  3192  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  3193  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  3194  04AC  1107               	bcf	7,2	;volatile
  3195                           
  3196                           ;LCD-PIC16.c: 111: break;
  3197  04AD  0008               	return
  3198  04AE                     l191:	
  3199                           ;LCD-PIC16.c: 112: case E_D7_PIN:
  3200                           
  3201                           
  3202                           ;LCD-PIC16.c: 113: RC3 = out;
  3203  04AE  1C74               	btfss	lcd_ioset@out,0
  3204  04AF  2CB4               	goto	u1940
  3205  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  3206  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  3207  04B2  1587               	bsf	7,3	;volatile
  3208  04B3  0008               	return
  3209  04B4                     u1940:	
  3210  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  3211  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  3212  04B6  1187               	bcf	7,3	;volatile
  3213                           
  3214                           ;LCD-PIC16.c: 114: break;
  3215  04B7  0008               	return
  3216  04B8                     l192:	
  3217                           ;LCD-PIC16.c: 115: case E_RS_PIN:
  3218                           
  3219                           
  3220                           ;LCD-PIC16.c: 116: RC4 = out;
  3221  04B8  1C74               	btfss	lcd_ioset@out,0
  3222  04B9  2CBE               	goto	u1960
  3223  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  3224  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  3225  04BC  1607               	bsf	7,4	;volatile
  3226  04BD  0008               	return
  3227  04BE                     u1960:	
  3228  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  3229  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  3230  04C0  1207               	bcf	7,4	;volatile
  3231                           
  3232                           ;LCD-PIC16.c: 117: break;
  3233  04C1  0008               	return
  3234  04C2                     l193:	
  3235                           ;LCD-PIC16.c: 118: case E_EN_PIN:
  3236                           
  3237                           
  3238                           ;LCD-PIC16.c: 119: RC5 = out;
  3239  04C2  1C74               	btfss	lcd_ioset@out,0
  3240  04C3  2CC8               	goto	u1980
  3241  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  3242  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  3243  04C6  1687               	bsf	7,5	;volatile
  3244  04C7  0008               	return
  3245  04C8                     u1980:	
  3246  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  3247  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  3248  04CA  1287               	bcf	7,5	;volatile
  3249                           
  3250                           ;LCD-PIC16.c: 126: }
  3251                           
  3252                           ;LCD-PIC16.c: 125: break;
  3253                           
  3254                           ;LCD-PIC16.c: 121: case E_RW_PIN:
  3255                           
  3256                           ;LCD-PIC16.c: 120: break;
  3257  04CB  0008               	return
  3258  04CC                     l1935:	
  3259  04CC  0875               	movf	lcd_ioset@pin,w
  3260                           
  3261                           ; Switch size 1, requested type "space"
  3262                           ; Number of cases is 7, Range of values is 4 to 10
  3263                           ; switch strategies available:
  3264                           ; Name         Instructions Cycles
  3265                           ; simple_byte           22    12 (average)
  3266                           ; direct_byte           24    10 (fixed)
  3267                           ; jumptable            263     9 (fixed)
  3268                           ;	Chosen strategy is simple_byte
  3269  04CD  3A04               	xorlw	4	; case 4
  3270  04CE  1903               	skipnz
  3271  04CF  2C90               	goto	l187
  3272  04D0  3A01               	xorlw	1	; case 5
  3273  04D1  1903               	skipnz
  3274  04D2  2C9A               	goto	l189
  3275  04D3  3A03               	xorlw	3	; case 6
  3276  04D4  1903               	skipnz
  3277  04D5  2CA4               	goto	l190
  3278  04D6  3A01               	xorlw	1	; case 7
  3279  04D7  1903               	skipnz
  3280  04D8  2CAE               	goto	l191
  3281  04D9  3A0F               	xorlw	15	; case 8
  3282  04DA  1903               	skipnz
  3283  04DB  2CC2               	goto	l193
  3284  04DC  3A01               	xorlw	1	; case 9
  3285  04DD  1903               	skipnz
  3286  04DE  2CB8               	goto	l192
  3287  04DF  3A03               	xorlw	3	; case 10
  3288  04E0  1903               	skipnz
  3289  04E1  2CE3               	goto	l195
  3290  04E2  2CE3               	goto	l195
  3291  04E3                     l195:	
  3292  04E3  0008               	return
  3293  04E4                     __end_of_lcd_ioset:	
  3294                           
  3295                           	psect	text17
  3296  003C                     __ptext17:	
  3297 ;; *************** function _CalcularDistancia *****************
  3298 ;; Defined at:
  3299 ;;		line 56 in file "Funciones.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  t0              2   23[BANK0 ] unsigned int 
  3302 ;;  t1              2   25[BANK0 ] unsigned int 
  3303 ;;  t2              2   27[BANK0 ] unsigned int 
  3304 ;;  t3              2   29[BANK0 ] unsigned int 
  3305 ;;  distancia1      1   31[BANK0 ] PTR PTR unsigned char 
  3306 ;;		 -> distancia1(1), 
  3307 ;;  distancia2      1   32[BANK0 ] PTR PTR unsigned char 
  3308 ;;		 -> distancia2(1), 
  3309 ;;  distancia3      1   33[BANK0 ] PTR PTR unsigned char 
  3310 ;;		 -> distancia3(1), 
  3311 ;;  distancia4      1   34[BANK0 ] PTR PTR unsigned char 
  3312 ;;		 -> distancia4(1), 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  d3              2   42[BANK0 ] unsigned int 
  3315 ;;  d2              2   40[BANK0 ] unsigned int 
  3316 ;;  d1              2   38[BANK0 ] unsigned int 
  3317 ;;  d0              2   36[BANK0 ] unsigned int 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3327 ;;      Params:         0      12       0       0
  3328 ;;      Locals:         0       8       0       0
  3329 ;;      Temps:          0       1       0       0
  3330 ;;      Totals:         0      21       0       0
  3331 ;;Total ram usage:       21 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    3
  3334 ;; This function calls:
  3335 ;;		___lwdiv
  3336 ;;		_sprintf
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           
  3343                           ;psect for function _CalcularDistancia
  3344  003C                     _CalcularDistancia:	
  3345                           
  3346                           ;Funciones.c: 59: unsigned int d0,d1,d2,d3;
  3347                           ;Funciones.c: 61: d0 = ( t0 ) / 58;
  3348                           
  3349                           ;incstack = 0
  3350                           ; Regs used in _CalcularDistancia: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3351  003C  303A               	movlw	58
  3352  003D  00F4               	movwf	___lwdiv@divisor
  3353  003E  3000               	movlw	0
  3354  003F  00F5               	movwf	___lwdiv@divisor+1
  3355  0040  1283               	bcf	3,5	;RP0=0, select bank0
  3356  0041  1303               	bcf	3,6	;RP1=0, select bank0
  3357  0042  0838               	movf	CalcularDistancia@t0+1,w
  3358  0043  00F7               	movwf	___lwdiv@dividend+1
  3359  0044  0837               	movf	CalcularDistancia@t0,w
  3360  0045  00F6               	movwf	___lwdiv@dividend
  3361  0046  118A  2615  118A   	fcall	___lwdiv
  3362  0049  0875               	movf	?___lwdiv+1,w
  3363  004A  1283               	bcf	3,5	;RP0=0, select bank0
  3364  004B  1303               	bcf	3,6	;RP1=0, select bank0
  3365  004C  00C5               	movwf	CalcularDistancia@d0+1
  3366  004D  0874               	movf	?___lwdiv,w
  3367  004E  00C4               	movwf	CalcularDistancia@d0
  3368                           
  3369                           ;Funciones.c: 62: d1 = ( t1 ) / 58;
  3370  004F  303A               	movlw	58
  3371  0050  00F4               	movwf	___lwdiv@divisor
  3372  0051  3000               	movlw	0
  3373  0052  00F5               	movwf	___lwdiv@divisor+1
  3374  0053  083A               	movf	CalcularDistancia@t1+1,w
  3375  0054  00F7               	movwf	___lwdiv@dividend+1
  3376  0055  0839               	movf	CalcularDistancia@t1,w
  3377  0056  00F6               	movwf	___lwdiv@dividend
  3378  0057  118A  2615  118A   	fcall	___lwdiv
  3379  005A  0875               	movf	?___lwdiv+1,w
  3380  005B  1283               	bcf	3,5	;RP0=0, select bank0
  3381  005C  1303               	bcf	3,6	;RP1=0, select bank0
  3382  005D  00C7               	movwf	CalcularDistancia@d1+1
  3383  005E  0874               	movf	?___lwdiv,w
  3384  005F  00C6               	movwf	CalcularDistancia@d1
  3385                           
  3386                           ;Funciones.c: 63: d2 = ( t2 ) / 58;
  3387  0060  303A               	movlw	58
  3388  0061  00F4               	movwf	___lwdiv@divisor
  3389  0062  3000               	movlw	0
  3390  0063  00F5               	movwf	___lwdiv@divisor+1
  3391  0064  083C               	movf	CalcularDistancia@t2+1,w
  3392  0065  00F7               	movwf	___lwdiv@dividend+1
  3393  0066  083B               	movf	CalcularDistancia@t2,w
  3394  0067  00F6               	movwf	___lwdiv@dividend
  3395  0068  118A  2615  118A   	fcall	___lwdiv
  3396  006B  0875               	movf	?___lwdiv+1,w
  3397  006C  1283               	bcf	3,5	;RP0=0, select bank0
  3398  006D  1303               	bcf	3,6	;RP1=0, select bank0
  3399  006E  00C9               	movwf	CalcularDistancia@d2+1
  3400  006F  0874               	movf	?___lwdiv,w
  3401  0070  00C8               	movwf	CalcularDistancia@d2
  3402                           
  3403                           ;Funciones.c: 64: d3 = ( t3 ) / 58;
  3404  0071  303A               	movlw	58
  3405  0072  00F4               	movwf	___lwdiv@divisor
  3406  0073  3000               	movlw	0
  3407  0074  00F5               	movwf	___lwdiv@divisor+1
  3408  0075  083E               	movf	CalcularDistancia@t3+1,w
  3409  0076  00F7               	movwf	___lwdiv@dividend+1
  3410  0077  083D               	movf	CalcularDistancia@t3,w
  3411  0078  00F6               	movwf	___lwdiv@dividend
  3412  0079  118A  2615  118A   	fcall	___lwdiv
  3413  007C  0875               	movf	?___lwdiv+1,w
  3414  007D  1283               	bcf	3,5	;RP0=0, select bank0
  3415  007E  1303               	bcf	3,6	;RP1=0, select bank0
  3416  007F  00CB               	movwf	CalcularDistancia@d3+1
  3417  0080  0874               	movf	?___lwdiv,w
  3418  0081  00CA               	movwf	CalcularDistancia@d3
  3419                           
  3420                           ;Funciones.c: 66: if(d0 == 0){ sprintf(*distancia1,"NOPE\0"); }
  3421  0082  0844               	movf	CalcularDistancia@d0,w
  3422  0083  0445               	iorwf	CalcularDistancia@d0+1,w
  3423  0084  1D03               	btfss	3,2
  3424  0085  2888               	goto	l2193
  3425  0086  3022               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3426  0087  2892               	goto	L5
  3427  0088                     l2193:	
  3428                           
  3429                           ;Funciones.c: 67: else if(d0 > 400){ sprintf(*distancia1,"OUT\0"); }
  3430  0088  3001               	movlw	1
  3431  0089  1283               	bcf	3,5	;RP0=0, select bank0
  3432  008A  1303               	bcf	3,6	;RP1=0, select bank0
  3433  008B  0245               	subwf	CalcularDistancia@d0+1,w
  3434  008C  3091               	movlw	145
  3435  008D  1903               	skipnz
  3436  008E  0244               	subwf	CalcularDistancia@d0,w
  3437  008F  1C03               	skipc
  3438  0090  2896               	goto	l2197
  3439  0091  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3440  0092                     L5:	
  3441  0092  00C3               	movwf	??_CalcularDistancia
  3442  0093  0843               	movf	??_CalcularDistancia,w
  3443  0094  00AA               	movwf	sprintf@f
  3444  0095  28A0               	goto	L2
  3445  0096                     l2197:	
  3446                           
  3447                           ;Funciones.c: 68: else { sprintf(*distancia1,"%u   \0", d0); }
  3448  0096  301B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3449  0097  1283               	bcf	3,5	;RP0=0, select bank0
  3450  0098  1303               	bcf	3,6	;RP1=0, select bank0
  3451  0099  00C3               	movwf	??_CalcularDistancia
  3452  009A  0843               	movf	??_CalcularDistancia,w
  3453  009B  00AA               	movwf	sprintf@f
  3454  009C  0845               	movf	CalcularDistancia@d0+1,w
  3455  009D  00AC               	movwf	?_sprintf+2
  3456  009E  0844               	movf	CalcularDistancia@d0,w
  3457  009F  00AB               	movwf	?_sprintf+1
  3458  00A0                     L2:	
  3459  00A0  083F               	movf	CalcularDistancia@distancia1,w
  3460  00A1  0084               	movwf	4
  3461  00A2  1383               	bcf	3,7	;select IRP bank0
  3462  00A3  0800               	movf	0,w
  3463  00A4  118A  22E2  118A   	fcall	_sprintf
  3464                           
  3465                           ;Funciones.c: 70: if(d1 == 0){ sprintf(*distancia2,"NOPE\0"); }
  3466  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  3467  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  3468  00A9  0846               	movf	CalcularDistancia@d1,w
  3469  00AA  0447               	iorwf	CalcularDistancia@d1+1,w
  3470  00AB  1D03               	btfss	3,2
  3471  00AC  28AF               	goto	l2203
  3472  00AD  3022               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3473  00AE  28B9               	goto	L6
  3474  00AF                     l2203:	
  3475                           
  3476                           ;Funciones.c: 71: else if(d1 > 400){ sprintf(*distancia2,"OUT\0"); }
  3477  00AF  3001               	movlw	1
  3478  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  3479  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  3480  00B2  0247               	subwf	CalcularDistancia@d1+1,w
  3481  00B3  3091               	movlw	145
  3482  00B4  1903               	skipnz
  3483  00B5  0246               	subwf	CalcularDistancia@d1,w
  3484  00B6  1C03               	skipc
  3485  00B7  28BD               	goto	l2207
  3486  00B8  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3487  00B9                     L6:	
  3488  00B9  00C3               	movwf	??_CalcularDistancia
  3489  00BA  0843               	movf	??_CalcularDistancia,w
  3490  00BB  00AA               	movwf	sprintf@f
  3491  00BC  28C7               	goto	L3
  3492  00BD                     l2207:	
  3493                           
  3494                           ;Funciones.c: 72: else{ sprintf(*distancia2,"%u   \0", d1); }
  3495  00BD  301B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3496  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  3497  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  3498  00C0  00C3               	movwf	??_CalcularDistancia
  3499  00C1  0843               	movf	??_CalcularDistancia,w
  3500  00C2  00AA               	movwf	sprintf@f
  3501  00C3  0847               	movf	CalcularDistancia@d1+1,w
  3502  00C4  00AC               	movwf	?_sprintf+2
  3503  00C5  0846               	movf	CalcularDistancia@d1,w
  3504  00C6  00AB               	movwf	?_sprintf+1
  3505  00C7                     L3:	
  3506  00C7  0840               	movf	CalcularDistancia@distancia2,w
  3507  00C8  0084               	movwf	4
  3508  00C9  1383               	bcf	3,7	;select IRP bank0
  3509  00CA  0800               	movf	0,w
  3510  00CB  118A  22E2  118A   	fcall	_sprintf
  3511                           
  3512                           ;Funciones.c: 74: if(d2 == 0){ sprintf(*distancia3,"NOPE\0"); }
  3513  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  3514  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  3515  00D0  0848               	movf	CalcularDistancia@d2,w
  3516  00D1  0449               	iorwf	CalcularDistancia@d2+1,w
  3517  00D2  1D03               	btfss	3,2
  3518  00D3  28D6               	goto	l2213
  3519  00D4  3022               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3520  00D5  28E0               	goto	L7
  3521  00D6                     l2213:	
  3522                           
  3523                           ;Funciones.c: 75: else if(d2 > 400){ sprintf(*distancia3,"OUT\0"); }
  3524  00D6  3001               	movlw	1
  3525  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  3526  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  3527  00D9  0249               	subwf	CalcularDistancia@d2+1,w
  3528  00DA  3091               	movlw	145
  3529  00DB  1903               	skipnz
  3530  00DC  0248               	subwf	CalcularDistancia@d2,w
  3531  00DD  1C03               	skipc
  3532  00DE  28E4               	goto	l2217
  3533  00DF  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3534  00E0                     L7:	
  3535  00E0  00C3               	movwf	??_CalcularDistancia
  3536  00E1  0843               	movf	??_CalcularDistancia,w
  3537  00E2  00AA               	movwf	sprintf@f
  3538  00E3  28EE               	goto	L4
  3539  00E4                     l2217:	
  3540                           
  3541                           ;Funciones.c: 76: else{ sprintf(*distancia3,"%u   \0", d2); }
  3542  00E4  301B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3543  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  3544  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  3545  00E7  00C3               	movwf	??_CalcularDistancia
  3546  00E8  0843               	movf	??_CalcularDistancia,w
  3547  00E9  00AA               	movwf	sprintf@f
  3548  00EA  0849               	movf	CalcularDistancia@d2+1,w
  3549  00EB  00AC               	movwf	?_sprintf+2
  3550  00EC  0848               	movf	CalcularDistancia@d2,w
  3551  00ED  00AB               	movwf	?_sprintf+1
  3552  00EE                     L4:	
  3553  00EE  0841               	movf	CalcularDistancia@distancia3,w
  3554  00EF  0084               	movwf	4
  3555  00F0  1383               	bcf	3,7	;select IRP bank0
  3556  00F1  0800               	movf	0,w
  3557  00F2  118A  22E2  118A   	fcall	_sprintf
  3558                           
  3559                           ;Funciones.c: 78: if(d3 == 0){ sprintf(*distancia4,"NOPE\0"); }
  3560  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  3561  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  3562  00F7  084A               	movf	CalcularDistancia@d3,w
  3563  00F8  044B               	iorwf	CalcularDistancia@d3+1,w
  3564  00F9  1D03               	btfss	3,2
  3565  00FA  2906               	goto	l2223
  3566  00FB  3022               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3567  00FC  00C3               	movwf	??_CalcularDistancia
  3568  00FD  0843               	movf	??_CalcularDistancia,w
  3569  00FE  00AA               	movwf	sprintf@f
  3570  00FF  0842               	movf	CalcularDistancia@distancia4,w
  3571  0100  0084               	movwf	4
  3572  0101  1383               	bcf	3,7	;select IRP bank0
  3573  0102  0800               	movf	0,w
  3574  0103  118A  22E2         	fcall	_sprintf
  3575  0105  0008               	return
  3576  0106                     l2223:	
  3577                           
  3578                           ;Funciones.c: 79: else if(d3 > 400){ sprintf(*distancia4,"OUT\0"); }
  3579  0106  3001               	movlw	1
  3580  0107  1283               	bcf	3,5	;RP0=0, select bank0
  3581  0108  1303               	bcf	3,6	;RP1=0, select bank0
  3582  0109  024B               	subwf	CalcularDistancia@d3+1,w
  3583  010A  3091               	movlw	145
  3584  010B  1903               	skipnz
  3585  010C  024A               	subwf	CalcularDistancia@d3,w
  3586  010D  1C03               	skipc
  3587  010E  291A               	goto	l2227
  3588  010F  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3589  0110  00C3               	movwf	??_CalcularDistancia
  3590  0111  0843               	movf	??_CalcularDistancia,w
  3591  0112  00AA               	movwf	sprintf@f
  3592  0113  0842               	movf	CalcularDistancia@distancia4,w
  3593  0114  0084               	movwf	4
  3594  0115  1383               	bcf	3,7	;select IRP bank0
  3595  0116  0800               	movf	0,w
  3596  0117  118A  22E2         	fcall	_sprintf
  3597  0119  0008               	return
  3598  011A                     l2227:	
  3599                           
  3600                           ;Funciones.c: 80: else{ sprintf(*distancia4,"%u   \0", d3); }
  3601  011A  301B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3602  011B  1283               	bcf	3,5	;RP0=0, select bank0
  3603  011C  1303               	bcf	3,6	;RP1=0, select bank0
  3604  011D  00C3               	movwf	??_CalcularDistancia
  3605  011E  0843               	movf	??_CalcularDistancia,w
  3606  011F  00AA               	movwf	sprintf@f
  3607  0120  084B               	movf	CalcularDistancia@d3+1,w
  3608  0121  00AC               	movwf	?_sprintf+2
  3609  0122  084A               	movf	CalcularDistancia@d3,w
  3610  0123  00AB               	movwf	?_sprintf+1
  3611  0124  0842               	movf	CalcularDistancia@distancia4,w
  3612  0125  0084               	movwf	4
  3613  0126  1383               	bcf	3,7	;select IRP bank0
  3614  0127  0800               	movf	0,w
  3615  0128  118A  22E2         	fcall	_sprintf
  3616  012A  0008               	return
  3617  012B                     __end_of_CalcularDistancia:	
  3618                           
  3619                           	psect	text18
  3620  02E2                     __ptext18:	
  3621 ;; *************** function _sprintf *****************
  3622 ;; Defined at:
  3623 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  sp              1    wreg     PTR unsigned char 
  3626 ;;		 -> dist4(8), dist3(8), dist2(8), dist1(8), 
  3627 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  3628 ;;		 -> STR_12(7), STR_11(5), STR_10(6), STR_9(7), 
  3629 ;;		 -> STR_8(5), STR_7(6), STR_6(7), STR_5(5), 
  3630 ;;		 -> STR_4(6), STR_3(7), STR_2(5), STR_1(6), 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  3633 ;;		 -> dist4(8), dist3(8), dist2(8), dist1(8), 
  3634 ;;  tmpval          4    0        struct .
  3635 ;;  val             2   18[BANK0 ] unsigned int 
  3636 ;;  cp              2    0        PTR const unsigned char 
  3637 ;;  len             2    0        unsigned int 
  3638 ;;  c               1   22[BANK0 ] char 
  3639 ;;  prec            1   20[BANK0 ] char 
  3640 ;;  ap              1   17[BANK0 ] PTR void [1]
  3641 ;;		 -> ?_sprintf(2), 
  3642 ;;  flag            1   16[BANK0 ] unsigned char 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  2   10[BANK0 ] int 
  3645 ;; Registers used:
  3646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3652 ;;      Params:         0       3       0       0
  3653 ;;      Locals:         0       7       0       0
  3654 ;;      Temps:          0       3       0       0
  3655 ;;      Totals:         0      13       0       0
  3656 ;;Total ram usage:       13 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    2
  3659 ;; This function calls:
  3660 ;;		___lwdiv
  3661 ;;		___lwmod
  3662 ;; This function is called by:
  3663 ;;		_CalcularDistancia
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           
  3668                           ;psect for function _sprintf
  3669  02E2                     _sprintf:	
  3670                           
  3671                           ;incstack = 0
  3672                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3673                           ;sprintf@sp stored from wreg
  3674  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  3675  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  3676  02E4  00B5               	movwf	sprintf@sp
  3677                           
  3678                           ;doprnt.c: 494: va_list ap;
  3679                           ;doprnt.c: 499: signed char c;
  3680                           ;doprnt.c: 506: signed char prec;
  3681                           ;doprnt.c: 508: unsigned char flag;
  3682                           ;doprnt.c: 523: union {
  3683                           ;doprnt.c: 524: unsigned long vd;
  3684                           ;doprnt.c: 525: double integ;
  3685                           ;doprnt.c: 526: } tmpval;
  3686                           ;doprnt.c: 528: unsigned int val;
  3687                           ;doprnt.c: 529: unsigned len;
  3688                           ;doprnt.c: 530: const char * cp;
  3689                           ;doprnt.c: 533: *ap = __va_start();
  3690  02E5  302B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3691  02E6  00AD               	movwf	??_sprintf
  3692  02E7  082D               	movf	??_sprintf,w
  3693  02E8  00B1               	movwf	sprintf@ap
  3694  02E9                     l2141:	
  3695                           ;doprnt.c: 536: while(c = *f++) {
  3696                           
  3697  02E9  3001               	movlw	1
  3698  02EA  07AA               	addwf	sprintf@f,f
  3699  02EB  30FF               	movlw	-1
  3700  02EC  072A               	addwf	sprintf@f,w
  3701  02ED  0084               	movwf	4
  3702  02EE  118A  265D  118A   	fcall	stringdir
  3703  02F1  00AD               	movwf	??_sprintf
  3704  02F2  082D               	movf	??_sprintf,w
  3705  02F3  00B6               	movwf	sprintf@c
  3706  02F4  0836               	movf	sprintf@c,w
  3707  02F5  1903               	btfsc	3,2
  3708  02F6  2B8C               	goto	l2143
  3709                           
  3710                           ;doprnt.c: 538: if(c != '%')
  3711  02F7  3025               	movlw	37
  3712  02F8  0636               	xorwf	sprintf@c,w
  3713  02F9  1903               	btfsc	3,2
  3714  02FA  2B07               	goto	l2107
  3715                           
  3716                           ;doprnt.c: 540: {
  3717                           ;doprnt.c: 541: ((*sp++ = (c)));
  3718  02FB  0836               	movf	sprintf@c,w
  3719  02FC  00AD               	movwf	??_sprintf
  3720  02FD  0835               	movf	sprintf@sp,w
  3721  02FE  0084               	movwf	4
  3722  02FF  082D               	movf	??_sprintf,w
  3723  0300  1383               	bcf	3,7	;select IRP bank0
  3724  0301  0080               	movwf	0
  3725  0302  3001               	movlw	1
  3726  0303  00AD               	movwf	??_sprintf
  3727  0304  082D               	movf	??_sprintf,w
  3728  0305  07B5               	addwf	sprintf@sp,f
  3729                           
  3730                           ;doprnt.c: 542: continue;
  3731  0306  2AE9               	goto	l2141
  3732  0307                     l2107:	
  3733                           
  3734                           ;doprnt.c: 543: }
  3735                           ;doprnt.c: 548: flag = 0;
  3736  0307  01B0               	clrf	sprintf@flag
  3737                           
  3738                           ;doprnt.c: 635: switch(c = *f++) {
  3739  0308  2B0E               	goto	l2113
  3740  0309                     l2109:	
  3741                           ;doprnt.c: 817: case 'u':
  3742                           
  3743                           ;doprnt.c: 813: continue;
  3744                           
  3745                           ;doprnt.c: 802: default:
  3746                           
  3747                           ;doprnt.c: 638: goto alldone;
  3748                           
  3749                           ;doprnt.c: 637: case 0:
  3750                           
  3751                           
  3752                           ;doprnt.c: 818: flag |= 0xC0;
  3753  0309  30C0               	movlw	192
  3754  030A  00AD               	movwf	??_sprintf
  3755  030B  082D               	movf	??_sprintf,w
  3756  030C  04B0               	iorwf	sprintf@flag,f
  3757                           
  3758                           ;doprnt.c: 822: }
  3759                           
  3760                           ;doprnt.c: 819: break;
  3761  030D  2B1E               	goto	l2115
  3762  030E                     l2113:	
  3763  030E  3001               	movlw	1
  3764  030F  07AA               	addwf	sprintf@f,f
  3765  0310  30FF               	movlw	-1
  3766  0311  072A               	addwf	sprintf@f,w
  3767  0312  0084               	movwf	4
  3768  0313  118A  265D  118A   	fcall	stringdir
  3769  0316  00B6               	movwf	sprintf@c
  3770                           
  3771                           ; Switch size 1, requested type "space"
  3772                           ; Number of cases is 2, Range of values is 0 to 117
  3773                           ; switch strategies available:
  3774                           ; Name         Instructions Cycles
  3775                           ; simple_byte            7     4 (average)
  3776                           ; direct_byte          243     7 (fixed)
  3777                           ; jumptable            260     6 (fixed)
  3778                           ;	Chosen strategy is simple_byte
  3779  0317  3A00               	xorlw	0	; case 0
  3780  0318  1903               	skipnz
  3781  0319  2B8C               	goto	l2143
  3782  031A  3A75               	xorlw	117	; case 117
  3783  031B  1903               	skipnz
  3784  031C  2B09               	goto	l2109
  3785  031D  2AE9               	goto	l2141
  3786  031E                     l2115:	
  3787                           
  3788                           ;doprnt.c: 1273: {
  3789                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3790  031E  0831               	movf	sprintf@ap,w
  3791  031F  0084               	movwf	4
  3792  0320  1383               	bcf	3,7	;select IRP bank0
  3793  0321  0800               	movf	0,w
  3794  0322  00B2               	movwf	sprintf@val
  3795  0323  0A84               	incf	4,f
  3796  0324  0800               	movf	0,w
  3797  0325  00B3               	movwf	sprintf@val+1
  3798  0326  3002               	movlw	2
  3799  0327  00AD               	movwf	??_sprintf
  3800  0328  082D               	movf	??_sprintf,w
  3801  0329  07B1               	addwf	sprintf@ap,f
  3802                           
  3803                           ;doprnt.c: 1287: }
  3804                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3805  032A  01B6               	clrf	sprintf@c
  3806  032B  0AB6               	incf	sprintf@c,f
  3807  032C  3005               	movlw	5
  3808  032D  0636               	xorwf	sprintf@c,w
  3809  032E  1903               	btfsc	3,2
  3810  032F  2B4D               	goto	l2131
  3811  0330                     l2125:	
  3812                           
  3813                           ;doprnt.c: 1306: if(val < dpowers[c])
  3814  0330  0836               	movf	sprintf@c,w
  3815  0331  00AD               	movwf	??_sprintf
  3816  0332  072D               	addwf	??_sprintf,w
  3817  0333  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3818  0334  0084               	movwf	4
  3819  0335  118A  265D  118A   	fcall	stringdir
  3820  0338  00AE               	movwf	??_sprintf+1
  3821  0339  118A  265D  118A   	fcall	stringdir
  3822  033C  00AF               	movwf	??_sprintf+2
  3823  033D  082F               	movf	??_sprintf+2,w
  3824  033E  0233               	subwf	sprintf@val+1,w
  3825  033F  1D03               	skipz
  3826  0340  2B43               	goto	u2275
  3827  0341  082E               	movf	??_sprintf+1,w
  3828  0342  0232               	subwf	sprintf@val,w
  3829  0343                     u2275:	
  3830  0343  1C03               	btfss	3,0
  3831  0344  2B4D               	goto	l2131
  3832                           
  3833                           ;doprnt.c: 1307: break;
  3834  0345  3001               	movlw	1
  3835  0346  00AD               	movwf	??_sprintf
  3836  0347  082D               	movf	??_sprintf,w
  3837  0348  07B6               	addwf	sprintf@c,f
  3838  0349  3005               	movlw	5
  3839  034A  0636               	xorwf	sprintf@c,w
  3840  034B  1D03               	btfss	3,2
  3841  034C  2B30               	goto	l2125
  3842  034D                     l2131:	
  3843                           
  3844                           ;doprnt.c: 1422: {
  3845                           ;doprnt.c: 1469: }
  3846                           ;doprnt.c: 1472: prec = c;
  3847  034D  0836               	movf	sprintf@c,w
  3848  034E  00AD               	movwf	??_sprintf
  3849  034F  082D               	movf	??_sprintf,w
  3850  0350  00B4               	movwf	sprintf@prec
  3851  0351                     l2139:	
  3852                           ;doprnt.c: 1474: while(prec--) {
  3853                           
  3854  0351  30FF               	movlw	255
  3855  0352  00AD               	movwf	??_sprintf
  3856  0353  082D               	movf	??_sprintf,w
  3857  0354  07B4               	addwf	sprintf@prec,f
  3858  0355  0A34               	incf	sprintf@prec,w
  3859  0356  1903               	btfsc	3,2
  3860  0357  2AE9               	goto	l2141
  3861                           
  3862                           ;doprnt.c: 1478: {
  3863                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3864  0358  300A               	movlw	10
  3865  0359  00A4               	movwf	___lwmod@divisor
  3866  035A  3000               	movlw	0
  3867  035B  00A5               	movwf	___lwmod@divisor+1
  3868  035C  0834               	movf	sprintf@prec,w
  3869  035D  00AD               	movwf	??_sprintf
  3870  035E  072D               	addwf	??_sprintf,w
  3871  035F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3872  0360  0084               	movwf	4
  3873  0361  118A  265D  118A   	fcall	stringdir
  3874  0364  00F4               	movwf	___lwdiv@divisor
  3875  0365  118A  265D  118A   	fcall	stringdir
  3876  0368  00F5               	movwf	___lwdiv@divisor+1
  3877  0369  0833               	movf	sprintf@val+1,w
  3878  036A  00F7               	movwf	___lwdiv@dividend+1
  3879  036B  0832               	movf	sprintf@val,w
  3880  036C  00F6               	movwf	___lwdiv@dividend
  3881  036D  118A  2615  118A   	fcall	___lwdiv
  3882  0370  0875               	movf	?___lwdiv+1,w
  3883  0371  1283               	bcf	3,5	;RP0=0, select bank0
  3884  0372  1303               	bcf	3,6	;RP1=0, select bank0
  3885  0373  00A7               	movwf	___lwmod@dividend+1
  3886  0374  0874               	movf	?___lwdiv,w
  3887  0375  00A6               	movwf	___lwmod@dividend
  3888  0376  118A  268F  118A   	fcall	___lwmod
  3889  0379  1283               	bcf	3,5	;RP0=0, select bank0
  3890  037A  1303               	bcf	3,6	;RP1=0, select bank0
  3891  037B  0824               	movf	?___lwmod,w
  3892  037C  3E30               	addlw	48
  3893  037D  00AE               	movwf	??_sprintf+1
  3894  037E  082E               	movf	??_sprintf+1,w
  3895  037F  00B6               	movwf	sprintf@c
  3896                           
  3897                           ;doprnt.c: 1523: }
  3898                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3899  0380  0836               	movf	sprintf@c,w
  3900  0381  00AD               	movwf	??_sprintf
  3901  0382  0835               	movf	sprintf@sp,w
  3902  0383  0084               	movwf	4
  3903  0384  082D               	movf	??_sprintf,w
  3904  0385  1383               	bcf	3,7	;select IRP bank0
  3905  0386  0080               	movwf	0
  3906  0387  3001               	movlw	1
  3907  0388  00AD               	movwf	??_sprintf
  3908  0389  082D               	movf	??_sprintf,w
  3909  038A  07B5               	addwf	sprintf@sp,f
  3910  038B  2B51               	goto	l2139
  3911  038C                     l2143:	
  3912                           ;doprnt.c: 1525: }
  3913                           ;doprnt.c: 1533: }
  3914                           ;doprnt.c: 1535: alldone:
  3915                           
  3916                           
  3917                           ;doprnt.c: 1538: *sp = 0;
  3918  038C  0835               	movf	sprintf@sp,w
  3919  038D  0084               	movwf	4
  3920  038E  1383               	bcf	3,7	;select IRP bank0
  3921  038F  0180               	clrf	0
  3922  0390  0008               	return
  3923  0391                     __end_of_sprintf:	
  3924                           ;doprnt.c: 1540: return 0;
  3925                           ;	Return value of _sprintf is never used
  3926                           
  3927                           
  3928                           	psect	text19
  3929  068F                     __ptext19:	
  3930 ;; *************** function ___lwmod *****************
  3931 ;; Defined at:
  3932 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  divisor         2    4[BANK0 ] unsigned int 
  3935 ;;  dividend        2    6[BANK0 ] unsigned int 
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  counter         1    9[BANK0 ] unsigned char 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  2    4[BANK0 ] unsigned int 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2, status,0
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3947 ;;      Params:         0       4       0       0
  3948 ;;      Locals:         0       1       0       0
  3949 ;;      Temps:          0       1       0       0
  3950 ;;      Totals:         0       6       0       0
  3951 ;;Total ram usage:        6 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    1
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_sprintf
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function ___lwmod
  3963  068F                     ___lwmod:	
  3964                           
  3965                           ;incstack = 0
  3966                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3967  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3968  0690  1303               	bcf	3,6	;RP1=0, select bank0
  3969  0691  0824               	movf	___lwmod@divisor,w
  3970  0692  0425               	iorwf	___lwmod@divisor+1,w
  3971  0693  1903               	btfsc	3,2
  3972  0694  2EBE               	goto	l2037
  3973  0695  01A9               	clrf	___lwmod@counter
  3974  0696  0AA9               	incf	___lwmod@counter,f
  3975  0697                     l2027:	
  3976  0697  1BA5               	btfsc	___lwmod@divisor+1,7
  3977  0698  2EA5               	goto	l2029
  3978  0699  3001               	movlw	1
  3979  069A                     u2185:	
  3980  069A  1003               	clrc
  3981  069B  0DA4               	rlf	___lwmod@divisor,f
  3982  069C  0DA5               	rlf	___lwmod@divisor+1,f
  3983  069D  3EFF               	addlw	-1
  3984  069E  1D03               	skipz
  3985  069F  2E9A               	goto	u2185
  3986  06A0  3001               	movlw	1
  3987  06A1  00A8               	movwf	??___lwmod
  3988  06A2  0828               	movf	??___lwmod,w
  3989  06A3  07A9               	addwf	___lwmod@counter,f
  3990  06A4  2E97               	goto	l2027
  3991  06A5                     l2029:	
  3992  06A5  0825               	movf	___lwmod@divisor+1,w
  3993  06A6  0227               	subwf	___lwmod@dividend+1,w
  3994  06A7  1D03               	skipz
  3995  06A8  2EAB               	goto	u2205
  3996  06A9  0824               	movf	___lwmod@divisor,w
  3997  06AA  0226               	subwf	___lwmod@dividend,w
  3998  06AB                     u2205:	
  3999  06AB  1C03               	skipc
  4000  06AC  2EB3               	goto	l2033
  4001  06AD  0824               	movf	___lwmod@divisor,w
  4002  06AE  02A6               	subwf	___lwmod@dividend,f
  4003  06AF  0825               	movf	___lwmod@divisor+1,w
  4004  06B0  1C03               	skipc
  4005  06B1  03A7               	decf	___lwmod@dividend+1,f
  4006  06B2  02A7               	subwf	___lwmod@dividend+1,f
  4007  06B3                     l2033:	
  4008  06B3  3001               	movlw	1
  4009  06B4                     u2215:	
  4010  06B4  1003               	clrc
  4011  06B5  0CA5               	rrf	___lwmod@divisor+1,f
  4012  06B6  0CA4               	rrf	___lwmod@divisor,f
  4013  06B7  3EFF               	addlw	-1
  4014  06B8  1D03               	skipz
  4015  06B9  2EB4               	goto	u2215
  4016  06BA  3001               	movlw	1
  4017  06BB  02A9               	subwf	___lwmod@counter,f
  4018  06BC  1D03               	btfss	3,2
  4019  06BD  2EA5               	goto	l2029
  4020  06BE                     l2037:	
  4021  06BE  0827               	movf	___lwmod@dividend+1,w
  4022  06BF  00A5               	movwf	?___lwmod+1
  4023  06C0  0826               	movf	___lwmod@dividend,w
  4024  06C1  00A4               	movwf	?___lwmod
  4025  06C2  0008               	return
  4026  06C3                     __end_of___lwmod:	
  4027                           
  4028                           	psect	text20
  4029  0615                     __ptext20:	
  4030 ;; *************** function ___lwdiv *****************
  4031 ;; Defined at:
  4032 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;  divisor         2    4[COMMON] unsigned int 
  4035 ;;  dividend        2    6[COMMON] unsigned int 
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;  quotient        2    2[BANK0 ] unsigned int 
  4038 ;;  counter         1    1[BANK0 ] unsigned char 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  2    4[COMMON] unsigned int 
  4041 ;; Registers used:
  4042 ;;		wreg, status,2, status,0
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4048 ;;      Params:         4       0       0       0
  4049 ;;      Locals:         0       3       0       0
  4050 ;;      Temps:          0       1       0       0
  4051 ;;      Totals:         4       4       0       0
  4052 ;;Total ram usage:        8 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    1
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_CalcularDistancia
  4059 ;;		_sprintf
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           
  4064                           ;psect for function ___lwdiv
  4065  0615                     ___lwdiv:	
  4066                           
  4067                           ;incstack = 0
  4068                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4069  0615  1283               	bcf	3,5	;RP0=0, select bank0
  4070  0616  1303               	bcf	3,6	;RP1=0, select bank0
  4071  0617  01A2               	clrf	___lwdiv@quotient
  4072  0618  01A3               	clrf	___lwdiv@quotient+1
  4073  0619  0874               	movf	___lwdiv@divisor,w
  4074  061A  0475               	iorwf	___lwdiv@divisor+1,w
  4075  061B  1903               	btfsc	3,2
  4076  061C  2E4E               	goto	l2015
  4077  061D  01A1               	clrf	___lwdiv@counter
  4078  061E  0AA1               	incf	___lwdiv@counter,f
  4079  061F                     l2003:	
  4080  061F  1BF5               	btfsc	___lwdiv@divisor+1,7
  4081  0620  2E2D               	goto	l2005
  4082  0621  3001               	movlw	1
  4083  0622                     u2115:	
  4084  0622  1003               	clrc
  4085  0623  0DF4               	rlf	___lwdiv@divisor,f
  4086  0624  0DF5               	rlf	___lwdiv@divisor+1,f
  4087  0625  3EFF               	addlw	-1
  4088  0626  1D03               	skipz
  4089  0627  2E22               	goto	u2115
  4090  0628  3001               	movlw	1
  4091  0629  00A0               	movwf	??___lwdiv
  4092  062A  0820               	movf	??___lwdiv,w
  4093  062B  07A1               	addwf	___lwdiv@counter,f
  4094  062C  2E1F               	goto	l2003
  4095  062D                     l2005:	
  4096  062D  3001               	movlw	1
  4097  062E                     u2135:	
  4098  062E  1003               	clrc
  4099  062F  0DA2               	rlf	___lwdiv@quotient,f
  4100  0630  0DA3               	rlf	___lwdiv@quotient+1,f
  4101  0631  3EFF               	addlw	-1
  4102  0632  1D03               	skipz
  4103  0633  2E2E               	goto	u2135
  4104  0634  0875               	movf	___lwdiv@divisor+1,w
  4105  0635  0277               	subwf	___lwdiv@dividend+1,w
  4106  0636  1D03               	skipz
  4107  0637  2E3A               	goto	u2145
  4108  0638  0874               	movf	___lwdiv@divisor,w
  4109  0639  0276               	subwf	___lwdiv@dividend,w
  4110  063A                     u2145:	
  4111  063A  1C03               	skipc
  4112  063B  2E43               	goto	l2011
  4113  063C  0874               	movf	___lwdiv@divisor,w
  4114  063D  02F6               	subwf	___lwdiv@dividend,f
  4115  063E  0875               	movf	___lwdiv@divisor+1,w
  4116  063F  1C03               	skipc
  4117  0640  03F7               	decf	___lwdiv@dividend+1,f
  4118  0641  02F7               	subwf	___lwdiv@dividend+1,f
  4119  0642  1422               	bsf	___lwdiv@quotient,0
  4120  0643                     l2011:	
  4121  0643  3001               	movlw	1
  4122  0644                     u2155:	
  4123  0644  1003               	clrc
  4124  0645  0CF5               	rrf	___lwdiv@divisor+1,f
  4125  0646  0CF4               	rrf	___lwdiv@divisor,f
  4126  0647  3EFF               	addlw	-1
  4127  0648  1D03               	skipz
  4128  0649  2E44               	goto	u2155
  4129  064A  3001               	movlw	1
  4130  064B  02A1               	subwf	___lwdiv@counter,f
  4131  064C  1D03               	btfss	3,2
  4132  064D  2E2D               	goto	l2005
  4133  064E                     l2015:	
  4134  064E  0823               	movf	___lwdiv@quotient+1,w
  4135  064F  00F5               	movwf	?___lwdiv+1
  4136  0650  0822               	movf	___lwdiv@quotient,w
  4137  0651  00F4               	movwf	?___lwdiv
  4138  0652  0008               	return
  4139  0653                     __end_of___lwdiv:	
  4140                           
  4141                           	psect	text21
  4142  0420                     __ptext21:	
  4143 ;; *************** function _echo *****************
  4144 ;; Defined at:
  4145 ;;		line 71 in file "main.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;		None
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;		None
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      void 
  4152 ;; Registers used:
  4153 ;;		wreg, status,2, status,0
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4159 ;;      Params:         0       0       0       0
  4160 ;;      Locals:         0       0       0       0
  4161 ;;      Temps:          4       0       0       0
  4162 ;;      Totals:         4       0       0       0
  4163 ;;Total ram usage:        4 bytes
  4164 ;; Hardware stack levels used:    1
  4165 ;; This function calls:
  4166 ;;		Nothing
  4167 ;; This function is called by:
  4168 ;;		Interrupt level 1
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           
  4173                           ;psect for function _echo
  4174  0420                     _echo:	
  4175                           
  4176                           ;main.c: 73: if(RBIF == 1)
  4177  0420  1C0B               	btfss	11,0	;volatile
  4178  0421  2C83               	goto	i1l150
  4179                           
  4180                           ;main.c: 74: {
  4181                           ;main.c: 75: RBIE = 0;
  4182  0422  118B               	bcf	11,3	;volatile
  4183                           
  4184                           ;main.c: 81: if ( (RB4 == 1) && (rbon == 0) )
  4185  0423  1E06               	btfss	6,4	;volatile
  4186  0424  2C2D               	goto	i1l135
  4187  0425  0878               	movf	_rbon,w
  4188  0426  0479               	iorwf	_rbon+1,w
  4189  0427  1D03               	btfss	3,2
  4190  0428  2C2D               	goto	i1l135
  4191                           
  4192                           ;main.c: 82: {
  4193                           ;main.c: 83: TMR1 = 0;
  4194  0429  018E               	clrf	14	;volatile
  4195  042A  018F               	clrf	15	;volatile
  4196                           
  4197                           ;main.c: 84: rbon = 4;
  4198  042B  3004               	movlw	4
  4199  042C  2C6E               	goto	L8
  4200  042D                     i1l135:	
  4201                           ;main.c: 86: }
  4202                           
  4203                           ;main.c: 85: TMR1ON = 1;
  4204                           
  4205                           
  4206                           ;main.c: 88: else if( (RB4 == 0) && (rbon == 4) )
  4207  042D  1A06               	btfsc	6,4	;volatile
  4208  042E  2C39               	goto	i1l137
  4209  042F  3004               	movlw	4
  4210  0430  0678               	xorwf	_rbon,w
  4211  0431  0479               	iorwf	_rbon+1,w
  4212  0432  1D03               	btfss	3,2
  4213  0433  2C39               	goto	i1l137
  4214                           
  4215                           ;main.c: 89: {
  4216                           ;main.c: 90: t4 = TMR1;
  4217  0434  080F               	movf	15,w	;volatile
  4218  0435  00D1               	movwf	_t4+1
  4219  0436  080E               	movf	14,w	;volatile
  4220  0437  00D0               	movwf	_t4
  4221  0438  2C7E               	goto	L9
  4222  0439                     i1l137:	
  4223                           ;main.c: 93: }
  4224                           
  4225                           ;main.c: 92: TMR1ON = 0;
  4226                           
  4227                           ;main.c: 91: rbon = 0;
  4228                           
  4229                           
  4230                           ;main.c: 95: else if ( (RB5 == 1) && (rbon == 0) )
  4231  0439  1E86               	btfss	6,5	;volatile
  4232  043A  2C43               	goto	i1l139
  4233  043B  0878               	movf	_rbon,w
  4234  043C  0479               	iorwf	_rbon+1,w
  4235  043D  1D03               	btfss	3,2
  4236  043E  2C43               	goto	i1l139
  4237                           
  4238                           ;main.c: 96: {
  4239                           ;main.c: 97: TMR1 = 0;
  4240  043F  018E               	clrf	14	;volatile
  4241  0440  018F               	clrf	15	;volatile
  4242                           
  4243                           ;main.c: 98: rbon = 5;
  4244  0441  3005               	movlw	5
  4245  0442  2C6E               	goto	L8
  4246  0443                     i1l139:	
  4247                           ;main.c: 100: }
  4248                           
  4249                           ;main.c: 99: TMR1ON = 1;
  4250                           
  4251                           
  4252                           ;main.c: 102: else if( (RB5 == 0) && (rbon == 5) )
  4253  0443  1A86               	btfsc	6,5	;volatile
  4254  0444  2C4F               	goto	i1l141
  4255  0445  3005               	movlw	5
  4256  0446  0678               	xorwf	_rbon,w
  4257  0447  0479               	iorwf	_rbon+1,w
  4258  0448  1D03               	btfss	3,2
  4259  0449  2C4F               	goto	i1l141
  4260                           
  4261                           ;main.c: 103: {
  4262                           ;main.c: 104: t5 = TMR1;
  4263  044A  080F               	movf	15,w	;volatile
  4264  044B  00D3               	movwf	_t5+1
  4265  044C  080E               	movf	14,w	;volatile
  4266  044D  00D2               	movwf	_t5
  4267  044E  2C7E               	goto	L9
  4268  044F                     i1l141:	
  4269                           ;main.c: 107: }
  4270                           
  4271                           ;main.c: 106: TMR1ON = 0;
  4272                           
  4273                           ;main.c: 105: rbon = 0;
  4274                           
  4275                           
  4276                           ;main.c: 109: else if ( (RB6 == 1) && (rbon == 0) )
  4277  044F  1F06               	btfss	6,6	;volatile
  4278  0450  2C59               	goto	i1l143
  4279  0451  0878               	movf	_rbon,w
  4280  0452  0479               	iorwf	_rbon+1,w
  4281  0453  1D03               	btfss	3,2
  4282  0454  2C59               	goto	i1l143
  4283                           
  4284                           ;main.c: 110: {
  4285                           ;main.c: 111: TMR1 = 0;
  4286  0455  018E               	clrf	14	;volatile
  4287  0456  018F               	clrf	15	;volatile
  4288                           
  4289                           ;main.c: 112: rbon = 6;
  4290  0457  3006               	movlw	6
  4291  0458  2C6E               	goto	L8
  4292  0459                     i1l143:	
  4293                           ;main.c: 114: }
  4294                           
  4295                           ;main.c: 113: TMR1ON = 1;
  4296                           
  4297                           
  4298                           ;main.c: 116: else if( (RB6 == 0) && (rbon == 6) )
  4299  0459  1B06               	btfsc	6,6	;volatile
  4300  045A  2C65               	goto	i1l145
  4301  045B  3006               	movlw	6
  4302  045C  0678               	xorwf	_rbon,w
  4303  045D  0479               	iorwf	_rbon+1,w
  4304  045E  1D03               	btfss	3,2
  4305  045F  2C65               	goto	i1l145
  4306                           
  4307                           ;main.c: 117: {
  4308                           ;main.c: 118: t6 = TMR1;
  4309  0460  080F               	movf	15,w	;volatile
  4310  0461  00D5               	movwf	_t6+1
  4311  0462  080E               	movf	14,w	;volatile
  4312  0463  00D4               	movwf	_t6
  4313  0464  2C7E               	goto	L9
  4314  0465                     i1l145:	
  4315                           ;main.c: 121: }
  4316                           
  4317                           ;main.c: 120: TMR1ON = 0;
  4318                           
  4319                           ;main.c: 119: rbon = 0;
  4320                           
  4321                           
  4322                           ;main.c: 123: else if ( (RB7 == 1) && (rbon == 0) )
  4323  0465  1F86               	btfss	6,7	;volatile
  4324  0466  2C73               	goto	i1l147
  4325  0467  0878               	movf	_rbon,w
  4326  0468  0479               	iorwf	_rbon+1,w
  4327  0469  1D03               	btfss	3,2
  4328  046A  2C73               	goto	i1l147
  4329                           
  4330                           ;main.c: 124: {
  4331                           ;main.c: 125: TMR1 = 0;
  4332  046B  018E               	clrf	14	;volatile
  4333  046C  018F               	clrf	15	;volatile
  4334                           
  4335                           ;main.c: 126: rbon = 7;
  4336  046D  3007               	movlw	7
  4337  046E                     L8:	
  4338  046E  00F8               	movwf	_rbon
  4339  046F  3000               	movlw	0
  4340  0470  00F9               	movwf	_rbon+1
  4341                           
  4342                           ;main.c: 127: TMR1ON = 1;
  4343  0471  1410               	bsf	16,0	;volatile
  4344                           
  4345                           ;main.c: 128: }
  4346  0472  2C81               	goto	i1l1871
  4347  0473                     i1l147:	
  4348                           
  4349                           ;main.c: 130: else if( (RB7 == 0) && (rbon == 7) )
  4350  0473  1B86               	btfsc	6,7	;volatile
  4351  0474  2C81               	goto	i1l1871
  4352  0475  3007               	movlw	7
  4353  0476  0678               	xorwf	_rbon,w
  4354  0477  0479               	iorwf	_rbon+1,w
  4355  0478  1D03               	btfss	3,2
  4356  0479  2C81               	goto	i1l1871
  4357                           
  4358                           ;main.c: 131: {
  4359                           ;main.c: 132: t7 = TMR1;
  4360  047A  080F               	movf	15,w	;volatile
  4361  047B  00D7               	movwf	_t7+1
  4362  047C  080E               	movf	14,w	;volatile
  4363  047D  00D6               	movwf	_t7
  4364  047E                     L9:	
  4365                           
  4366                           ;main.c: 133: rbon = 0;
  4367  047E  01F8               	clrf	_rbon
  4368  047F  01F9               	clrf	_rbon+1
  4369                           
  4370                           ;main.c: 134: TMR1ON = 0;
  4371  0480  1010               	bcf	16,0	;volatile
  4372  0481                     i1l1871:	
  4373                           
  4374                           ;main.c: 135: }
  4375                           ;main.c: 137: RBIF = 0;
  4376  0481  100B               	bcf	11,0	;volatile
  4377                           
  4378                           ;main.c: 138: RBIE = 1;
  4379  0482  158B               	bsf	11,3	;volatile
  4380  0483                     i1l150:	
  4381  0483  0873               	movf	??_echo+3,w
  4382  0484  00FF               	movwf	127
  4383  0485  0872               	movf	??_echo+2,w
  4384  0486  008A               	movwf	10
  4385  0487  0871               	movf	??_echo+1,w
  4386  0488  0084               	movwf	4
  4387  0489  0E70               	swapf	??_echo^(0+-128),w
  4388  048A  0083               	movwf	3
  4389  048B  0EFE               	swapf	126,f
  4390  048C  0E7E               	swapf	126,w
  4391  048D  0009               	retfie
  4392  048E                     __end_of_echo:	
  4393  007E                     btemp	set	126	;btemp
  4394  007E                     wtemp	set	126
  4395  007E                     wtemp0	set	126
  4396  0080                     wtemp1	set	128
  4397  0082                     wtemp2	set	130
  4398  0084                     wtemp3	set	132
  4399  0086                     wtemp4	set	134
  4400  0088                     wtemp5	set	136
  4401  007F                     wtemp6	set	127
  4402  007E                     ttemp	set	126
  4403  007E                     ttemp0	set	126
  4404  0081                     ttemp1	set	129
  4405  0084                     ttemp2	set	132
  4406  0087                     ttemp3	set	135
  4407  007F                     ttemp4	set	127
  4408  007E                     ltemp	set	126
  4409  007E                     ltemp0	set	126
  4410  0082                     ltemp1	set	130
  4411  0086                     ltemp2	set	134
  4412  0080                     ltemp3	set	128
  4413                           
  4414                           	psect	intentry
  4415  0004                     __pintentry:	
  4416                           ;incstack = 0
  4417                           ; Regs used in _echo: [wreg+status,2+status,0]
  4418                           
  4419  0004                     interrupt_function:	
  4420  007E                     saved_w	set	btemp
  4421  0004  00FE               	movwf	btemp
  4422  0005  0E03               	swapf	3,w
  4423  0006  00F0               	movwf	??_echo
  4424  0007  0804               	movf	4,w
  4425  0008  00F1               	movwf	??_echo+1
  4426  0009  080A               	movf	10,w
  4427  000A  00F2               	movwf	??_echo+2
  4428  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4429  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4430  000D  087F               	movf	btemp+1,w
  4431  000E  00F3               	movwf	??_echo+3
  4432  000F  118A  2C20         	ljmp	_echo


Data Sizes:
    Strings     30
    Constant    14
    Data        6
    BSS         43
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     48      80
    BANK1            80      0      16
    BANK2            80      0       0

Pointer List with Targets:

    lcd_ioinit@iodata	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_12(CODE[7]), STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[7]), 
		 -> STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[7]), STR_5(CODE[5]), 
		 -> STR_4(CODE[6]), STR_3(CODE[7]), STR_2(CODE[5]), STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> dist4(BANK1[8]), dist3(BANK1[8]), dist2(BANK0[8]), dist1(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_puts@string	PTR const unsigned char  size(2) Largest target is 12
		 -> dist4(BANK1[8]), dist3(BANK1[8]), dist2(BANK0[8]), dist1(BANK0[8]), 
		 -> STR_13(CODE[12]), 

    lcd_init@iodata	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    distancia4	PTR unsigned char  size(1) Largest target is 8
		 -> dist4(BANK1[8]), 

    distancia3	PTR unsigned char  size(1) Largest target is 8
		 -> dist3(BANK1[8]), 

    distancia2	PTR unsigned char  size(1) Largest target is 8
		 -> dist2(BANK0[8]), 

    distancia1	PTR unsigned char  size(1) Largest target is 8
		 -> dist1(BANK0[8]), 

    PrintDistancias@dist4	PTR unsigned char  size(1) Largest target is 8
		 -> dist4(BANK1[8]), 

    PrintDistancias@dist3	PTR unsigned char  size(1) Largest target is 8
		 -> dist3(BANK1[8]), 

    PrintDistancias@dist2	PTR unsigned char  size(1) Largest target is 8
		 -> dist2(BANK0[8]), 

    PrintDistancias@dist1	PTR unsigned char  size(1) Largest target is 8
		 -> dist1(BANK0[8]), 

    CalcularDistancia@distancia4	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia4(BANK0[1]), 

    CalcularDistancia@distancia3	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia3(BANK0[1]), 

    CalcularDistancia@distancia2	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia2(BANK0[1]), 

    CalcularDistancia@distancia1	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia1(BANK0[1]), 


Critical Paths under _main in COMMON

    _UART_Init->___aldiv
    _lcd_init->_lcd_iowrite4
    _lcd_ioinit->_lcd_ioset
    _lcd_send->_lcd_iowrite4
    _lcd_iowrite4->_lcd_ioset
    _CalcularDistancia->___lwdiv
    _sprintf->___lwdiv
    ___lwmod->___lwdiv

Critical Paths under _echo in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_CalcularDistancia
    _UART_Init->___aldiv
    _PrintDistancias->_lcd_goto
    _lcd_puts->_lcd_send
    _lcd_goto->_lcd_send
    _Inicializaciones->_lcd_init
    _lcd_on->_lcd_send
    _lcd_init->_lcd_send
    _lcd_clear->_lcd_send
    _lcd_send->_lcd_iowrite4
    _CalcularDistancia->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _echo in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _echo in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _echo in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   24675
                                             44 BANK0      4     4      0
                  _CalcularDistancia
                   _Inicializaciones
                    _PrintDistancias
                          _ResetEcho
                            _Trigger
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     721
                                              5 COMMON     2     2      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Trigger                                              2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ResetEcho                                            2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _PrintDistancias                                      4     1      3    7442
                                              8 BANK0      4     1      3
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2    3514
                                              5 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             3     2      1    3579
                                              5 BANK0      3     2      1
                           _lcd_send
 ---------------------------------------------------------------------------------
 (1) _Inicializaciones                                     2     2      0   11262
                                             11 BANK0      2     2      0
                          _lcd_clear
                           _lcd_init
                             _lcd_on
 ---------------------------------------------------------------------------------
 (2) _lcd_on                                               1     1      0    3124
                                              5 BANK0      1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             6     4      2    5014
                                              5 BANK0      6     4      2
                         _lcd_ioinit
                       _lcd_iowrite4
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_ioinit                                           3     3      0     804
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                          _lcd_ioset
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            2     2      0    3124
                                              5 BANK0      2     2      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_send                                             3     2      1    3124
                                              2 BANK0      3     2      1
                          _lcd_ioset
                       _lcd_iowrite4
                       _lcd_iowrite8
 ---------------------------------------------------------------------------------
 (4) _lcd_iowrite8                                         1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_iowrite4                                         4     4      0     833
                                              6 COMMON     2     2      0
                                              0 BANK0      2     2      0
                          _lcd_ioset
 ---------------------------------------------------------------------------------
 (5) _lcd_ioset                                            2     1      1     672
                                              4 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _CalcularDistancia                                   21     9     12    5250
                                             23 BANK0     21     9     12
                            ___lwdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    2959
                                             10 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     362
                                              4 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     891
                                              4 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _echo                                                 4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcularDistancia
     ___lwdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _Inicializaciones
     _lcd_clear
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
     _lcd_init
       _lcd_ioinit
         _lcd_ioset
       _lcd_iowrite4
         _lcd_ioset
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
     _lcd_on
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
   _PrintDistancias
     _lcd_goto
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
     _lcd_puts
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
   _ResetEcho
   _Trigger
   _UART_Init
     ___aldiv

 _echo (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       5       20.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     30      50       3      100.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6A      10        0.0%
ABS                  0      0      6A       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri Mar 11 17:45:51 2016

  __size_of_Inicializaciones 002D                ?_lcd_iowrite4 0070                ?_lcd_iowrite8 0070  
                          pc 0002                  __CFG_CP$OFF 0000                           _t4 0050  
                         _t5 0052                           _t6 0054                           _t7 0056  
                         fsr 0004                          l190 04A4                          l191 04AE  
                        l192 04B8                          l504 03A3                          l193 04C2  
                        l195 04E3                          l187 0490                          l189 049A  
                        _GIE 005F                          _RB0 0030                          _RB1 0031  
                        _RC0 0038                          _RB2 0032                          _RC1 0039  
                        _RB3 0033                          _RC2 003A                          _RB4 0034  
                        _RC3 003B                          _RB5 0035                          _RC4 003C  
                        _RB6 0036                          _RC5 003D                          _RB7 0037  
               __CFG_CPD$OFF 0000             lcd_ioinit@iodata 0020                          fsr0 0004  
                        indf 0000                  lcd_goto@col 0027                  lcd_goto@row 0025  
               __CFG_IESO$ON 0000                  lcd_ioinit@i 0021                 __CFG_LVP$OFF 0000  
                       l2011 0643                         l2003 061F                         l2005 062D  
                       l2015 064E                         l2033 06B3                         l2113 030E  
                       l2027 0697                         l2131 034D                         l2115 031E  
                       l2107 0307                         l2203 00AF                         l2029 06A5  
                       l2037 06BE                         l2125 0330                         l2109 0309  
                       l2141 02E9                         l2213 00D6                         l2143 038C  
                       l2223 0106                         l2207 00BD                         l2151 0771  
                       l2217 00E4                         l2065 0276                         l2139 0351  
                       l2227 011A                         l2155 077A                         l2163 0744  
                       l2079 02B5                         l2247 0599                         l2193 0088  
                       l1641 03C4                         l1633 03B4                         l1651 03FC  
                       l1643 03D4                         l2197 0096                         l1655 0409  
                       l1659 0417                         l1941 05E2                         l1773 01F7  
                       l1935 04CC                         l1947 0605                         l1971 0733  
                       l1991 06EE                         l1985 06CC                         l1977 0742  
                       STR_1 0684                         STR_2 068A                         STR_3 067D  
                       STR_4 0684                         STR_5 068A                         STR_6 067D  
                       STR_7 0684                         STR_8 068A                         STR_9 067D  
                       _BRGH 04C2                         _CREN 00C4                         u2020 05F3  
                       u2030 05F4                         u2014 05EA                         u2015 05E8  
                       u2115 0622                         _IOCB 0096                         u2205 06AB  
                       u2135 062E                         u2215 06B4                         u2145 063A  
                       u2155 0644                         u1620 0171                         u1621 0172  
                       u1605 0136                         u1622 0177                         u2095 06DF  
                       u1455 03C8                         u1623 0178                         u1615 0157  
                       u2185 069A                         u2275 0343                         u2507 056F  
                       u1475 03D6                         u1900 04A0                         u1660 01D8  
                       u2517 0579                         u1485 03EB                         u1661 01D9  
                       u1645 019D                         u1662 01DE                         u2607 0265  
                       u2527 0583                         u1495 03FD                         u1663 01DF  
                       u1655 01BE                         u1920 04AA                         u2617 0273  
                       u2537 078D                         u2457 053D                         u2707 060D  
                       u2627 0287                         u2547 0799                         u2467 0547  
                       u1940 04B4                         u2637 0297                         u2557 07C3  
                       u2477 0551                         u2647 02A5                         u2567 022B  
                       u2487 055B                         u1960 04BE                         u1880 0496  
                       u2657 02B3                         u2577 0242                         u2497 0565  
                       u2667 02C0                         u2587 024F                         u1980 04C8  
                       u2677 02CF                         u2597 025A                         u2687 02DF  
                       _RBIE 005B                         _RBIF 0058                         u2697 07B0  
                       _RCIF 0065                         _TMR1 000E                         _SPEN 00C7  
                       _TRMT 04C1                         _TXEN 04C5                         _SYNC 04C4  
               __CFG_WRT$OFF 0000                __CFG_FCMEN$ON 0000                         _echo 0420  
                       _main 0589                         _rbon 0078                         btemp 007E  
               lcd_init@cols 0025                __CFG_BOREN$ON 0000                 lcd_init@rows 0026  
                       ltemp 007E                         start 0011                         ttemp 007E  
                       wtemp 007E                __CFG_MCLRE$ON 0000               ??_lcd_iowrite4 0076  
             ??_lcd_iowrite8 0074                 lcd_ioset@pin 0075                 lcd_ioset@out 0074  
               lcd_send@data 0024                        ?_echo 0070              __end_of_Trigger 0589  
            __end_of___aldiv 0420                        ?_main 0070                        STR_10 0684  
                      STR_11 068A                        STR_12 067D                        STR_13 0671  
              __CFG_WDTE$OFF 0000                        _T1CON 0010              __end_of___lwdiv 0653  
                      i1l141 044F                        i1l150 0483                        i1l143 0459  
                      i1l135 042D                        i1l145 0465                        i1l137 0439  
                      i1l147 0473                        i1l139 0443              __end_of___lwmod 06C3  
                      _RCREG 001A                        _SPBRG 0099                        _PORTB 0006  
                      _TRISB 0086                        _TXREG 0019           __size_of_UART_Init 00E6  
                      _dist1 0059                        _dist2 0061                        _dist3 00A0  
                      _dist4 00A8              __end_of_dpowers 066D             ?_PrintDistancias 0028  
                      pclath 000A                        ltemp0 007E                        ltemp1 0082  
                      ltemp2 0086                        ltemp3 0080              __end_of_rowaddr 0671  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        status 0003  
                      wtemp0 007E                        wtemp1 0080                        wtemp2 0082  
                      wtemp3 0084                        wtemp4 0086                        wtemp5 0088  
                      wtemp6 007F              __end_of_sprintf 0391              __initialization 0013  
               __end_of_echo 048E                 __end_of_main 05D7                       ??_echo 0070  
                     ??_main 004C                lcd_iowrite4@i 0021                       _ANSELH 0189  
                     i1l1871 0481                       _INTCON 000B                       _OSCCON 008F  
                     _TMR1ON 0080                       _TRISC0 0438                       _TRISC1 0439  
                     _TRISC2 043A                       _TRISC3 043B                       _TRISC4 043C  
                     _TRISC5 043D                       _TRISC6 043E                       _TRISC7 043F  
             __CFG_PWRTE$OFF 0000             __end_of_lcd_init 02E2             __end_of_lcd_goto 0786  
          __end_of_UART_Init 0211             __end_of_lcd_send 06F4             _Inicializaciones 06F4  
           __end_of_lcd_puts 0765                    ??_Trigger 0074                    ??___aldiv 0074  
                  ??___lwdiv 0020                    ??___lwmod 0028                       _lcd_on 07B6  
         __size_of_ResetEcho 001D                       _iomode 006F               lcd_init@iodata 002A  
                     saved_w 007E         __end_of_lcd_iowrite4 0615         __end_of_lcd_iowrite8 07D5  
                  ??_sprintf 002D      __end_of__initialization 0039               __pcstackCOMMON 0070  
               __pidataBANK0 07CE             lcd_iowrite4@data 0020             lcd_iowrite8@data 0070  
         __size_of_lcd_clear 0013           __size_of_lcd_ioset 0056         PrintDistancias@dist1 002B  
       PrintDistancias@dist2 0028         PrintDistancias@dist3 0029         PrintDistancias@dist4 002A  
                 __pbssBANK0 0050                   __pbssBANK1 00A0            __end_of_ResetEcho 07A3  
                 __pmaintext 0589                   __pintentry 0004                      ?_lcd_on 0070  
                 _lcd_ioinit 0721                   _distancia1 006B                   _distancia2 006C  
                 _distancia3 006D                   _distancia4 006E                   _lcdcolumns 0069  
                  ?_lcd_init 0025                    ?_lcd_goto 0025                    ?_lcd_send 0022  
                  ?_lcd_puts 0025                   __stringtab 0653            __end_of_lcd_clear 07B6  
          __end_of_lcd_ioset 04E4                      _Trigger 0538                      ___aldiv 0391  
                    ___lwdiv 0615                      ___lwmod 068F              __size_of_lcd_on 0010  
                    __ptext1 012B                      __ptext2 0391                      __ptext3 0538  
                    __ptext4 0786                      __ptext5 04E4                      __ptext6 0744  
                    __ptext7 0765                      __ptext8 06F4                      __ptext9 07B6  
      __size_of_lcd_iowrite4 003E        __size_of_lcd_iowrite8 0001                      _lcdrows 006A  
                    _dpowers 0663             ___aldiv@dividend 0024     __end_of_Inicializaciones 0721  
                    _rowaddr 066D                      _sprintf 02E2                      clrloop0 07C7  
                 ??_lcd_init 0027                   ??_lcd_goto 0026                   ??_lcd_send 0023  
                 ??_lcd_puts 0078         end_of_initialization 0039               lcd_puts@string 0025  
   __size_of_PrintDistancias 0054             ___aldiv@quotient 002A                 _lcd_iowrite4 05D7  
               _lcd_iowrite8 07D4                    _UART_Init 012B                  ?_lcd_ioinit 0070  
                 lcd_send@rs 0022                   ?_UART_Init 002E               __end_of_lcd_on 07C6  
          _CalcularDistancia 003C          start_initialization 0013           ?_CalcularDistancia 0037  
        ??_CalcularDistancia 0043                    _ResetEcho 0786          __size_of_lcd_ioinit 0023  
                   ??_lcd_on 0025                  __pdataBANK0 0069            ??_PrintDistancias 0078  
  __end_of_CalcularDistancia 012B                  __pbssCOMMON 0078                    ___latbits 0001  
              __pcstackBANK0 0020       __CFG_FOSC$INTRC_CLKOUT 0000            __size_of_lcd_init 00D1  
          __size_of_lcd_goto 0021            __size_of_lcd_send 0031                  sprintf@flag 0030  
          __size_of_lcd_puts 0021                  sprintf@prec 0034                    __pnvBANK0 006F  
                 ?_ResetEcho 0070             ___lwdiv@dividend 0076                     ?_Trigger 0070  
                   ?___aldiv 0020                     ?___lwdiv 0074                     ?___lwmod 0024  
                  _lcd_clear 07A3                  ??_UART_Init 0032                    _lcd_ioset 048E  
                  __pstrings 0653             ___lwdiv@quotient 0022            ?_Inicializaciones 0070  
                   ?_sprintf 002A  CalcularDistancia@distancia1 003F  CalcularDistancia@distancia2 0040  
CalcularDistancia@distancia3 0041  CalcularDistancia@distancia4 0042                   UART_Init@x 0075  
         ??_Inicializaciones 002B              ___aldiv@divisor 0020            interrupt_function 0004  
            ___aldiv@counter 0028                    clear_ram0 07C6          CalcularDistancia@d0 0044  
        CalcularDistancia@d1 0046          CalcularDistancia@d2 0048          CalcularDistancia@d3 004A  
        CalcularDistancia@t0 0037          CalcularDistancia@t1 0039          CalcularDistancia@t2 003B  
        CalcularDistancia@t3 003D                   ?_lcd_clear 0070            UART_Init@baudrate 002E  
 __size_of_CalcularDistancia 00EF                   ?_lcd_ioset 0074                  __stringbase 0662  
               ??_lcd_ioinit 0076                  ??_ResetEcho 0074           __end_of_lcd_ioinit 0744  
           __size_of_Trigger 0051             __size_of___aldiv 008F             __size_of___lwdiv 003E  
           __size_of___lwmod 0034           __end_of__stringtab 0663                   sprintf@val 0032  
            ___lwdiv@divisor 0074              ___lwdiv@counter 0021                     __ptext10 0211  
                   __ptext11 0721                     __ptext20 0615                     __ptext12 07A3  
                   __ptext21 0420                     __ptext13 06C3                     __ptext14 07D4  
                   __ptext15 05D7                     __ptext16 048E                     __ptext17 003C  
                   __ptext18 02E2                     __ptext19 068F            __CFG_BOR4V$BOR21V 0000  
                   _lcd_init 0211                     _lcd_goto 0765                     _lcd_send 06C3  
                   _dispctrl 0058                     _lcd_puts 0744             __size_of_sprintf 00AF  
              __size_of_echo 006E                __size_of_main 004E              _PrintDistancias 04E4  
                ??_lcd_clear 0025                  ??_lcd_ioset 0075                     intlevel1 0000  
                  sprintf@ap 0031                    sprintf@sp 0035             ___lwmod@dividend 0026  
                  stringcode 065D                     sprintf@c 0036                     sprintf@f 002A  
            ___lwmod@divisor 0024              ___lwmod@counter 0029                     stringdir 065D  
                   stringtab 0653                 ___aldiv@sign 0029      __end_of_PrintDistancias 0538  
