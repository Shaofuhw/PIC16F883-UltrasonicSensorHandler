

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue Mar 15 10:52:09 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F883
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  0007                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  000E                     	;# 
    55  000E                     	;# 
    56  000F                     	;# 
    57  0010                     	;# 
    58  0011                     	;# 
    59  0012                     	;# 
    60  0013                     	;# 
    61  0014                     	;# 
    62  0015                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001B                     	;# 
    70  001B                     	;# 
    71  001C                     	;# 
    72  001D                     	;# 
    73  001E                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  0087                     	;# 
    79  0089                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  008E                     	;# 
    83  008F                     	;# 
    84  0090                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0093                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  0105                     	;# 
   103  0107                     	;# 
   104  0108                     	;# 
   105  0109                     	;# 
   106  010C                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  0185                     	;# 
   112  0187                     	;# 
   113  0188                     	;# 
   114  0189                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  008F                     	;# 
   160  0090                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0093                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0095                     	;# 
   168  0096                     	;# 
   169  0097                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009B                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  0105                     	;# 
   179  0107                     	;# 
   180  0108                     	;# 
   181  0109                     	;# 
   182  010C                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  0185                     	;# 
   188  0187                     	;# 
   189  0188                     	;# 
   190  0189                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  0009                     	;# 
   202  000A                     	;# 
   203  000B                     	;# 
   204  000C                     	;# 
   205  000D                     	;# 
   206  000E                     	;# 
   207  000E                     	;# 
   208  000F                     	;# 
   209  0010                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0014                     	;# 
   214  0015                     	;# 
   215  0015                     	;# 
   216  0016                     	;# 
   217  0017                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001B                     	;# 
   222  001B                     	;# 
   223  001C                     	;# 
   224  001D                     	;# 
   225  001E                     	;# 
   226  001F                     	;# 
   227  0081                     	;# 
   228  0085                     	;# 
   229  0086                     	;# 
   230  0087                     	;# 
   231  0089                     	;# 
   232  008C                     	;# 
   233  008D                     	;# 
   234  008E                     	;# 
   235  008F                     	;# 
   236  0090                     	;# 
   237  0091                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0093                     	;# 
   241  0093                     	;# 
   242  0094                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009A                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  009F                     	;# 
   254  0105                     	;# 
   255  0107                     	;# 
   256  0108                     	;# 
   257  0109                     	;# 
   258  010C                     	;# 
   259  010C                     	;# 
   260  010D                     	;# 
   261  010E                     	;# 
   262  010F                     	;# 
   263  0185                     	;# 
   264  0187                     	;# 
   265  0188                     	;# 
   266  0189                     	;# 
   267  018C                     	;# 
   268  018D                     	;# 
   269  0000                     	;# 
   270  0001                     	;# 
   271  0002                     	;# 
   272  0003                     	;# 
   273  0004                     	;# 
   274  0005                     	;# 
   275  0006                     	;# 
   276  0007                     	;# 
   277  0009                     	;# 
   278  000A                     	;# 
   279  000B                     	;# 
   280  000C                     	;# 
   281  000D                     	;# 
   282  000E                     	;# 
   283  000E                     	;# 
   284  000F                     	;# 
   285  0010                     	;# 
   286  0011                     	;# 
   287  0012                     	;# 
   288  0013                     	;# 
   289  0014                     	;# 
   290  0015                     	;# 
   291  0015                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001B                     	;# 
   299  001C                     	;# 
   300  001D                     	;# 
   301  001E                     	;# 
   302  001F                     	;# 
   303  0081                     	;# 
   304  0085                     	;# 
   305  0086                     	;# 
   306  0087                     	;# 
   307  0089                     	;# 
   308  008C                     	;# 
   309  008D                     	;# 
   310  008E                     	;# 
   311  008F                     	;# 
   312  0090                     	;# 
   313  0091                     	;# 
   314  0092                     	;# 
   315  0093                     	;# 
   316  0093                     	;# 
   317  0093                     	;# 
   318  0094                     	;# 
   319  0095                     	;# 
   320  0096                     	;# 
   321  0097                     	;# 
   322  0098                     	;# 
   323  0099                     	;# 
   324  009A                     	;# 
   325  009B                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  009F                     	;# 
   330  0105                     	;# 
   331  0107                     	;# 
   332  0108                     	;# 
   333  0109                     	;# 
   334  010C                     	;# 
   335  010C                     	;# 
   336  010D                     	;# 
   337  010E                     	;# 
   338  010F                     	;# 
   339  0185                     	;# 
   340  0187                     	;# 
   341  0188                     	;# 
   342  0189                     	;# 
   343  018C                     	;# 
   344  018D                     	;# 
   345  0000                     	;# 
   346  0001                     	;# 
   347  0002                     	;# 
   348  0003                     	;# 
   349  0004                     	;# 
   350  0005                     	;# 
   351  0006                     	;# 
   352  0007                     	;# 
   353  0009                     	;# 
   354  000A                     	;# 
   355  000B                     	;# 
   356  000C                     	;# 
   357  000D                     	;# 
   358  000E                     	;# 
   359  000E                     	;# 
   360  000F                     	;# 
   361  0010                     	;# 
   362  0011                     	;# 
   363  0012                     	;# 
   364  0013                     	;# 
   365  0014                     	;# 
   366  0015                     	;# 
   367  0015                     	;# 
   368  0016                     	;# 
   369  0017                     	;# 
   370  0018                     	;# 
   371  0019                     	;# 
   372  001A                     	;# 
   373  001B                     	;# 
   374  001B                     	;# 
   375  001C                     	;# 
   376  001D                     	;# 
   377  001E                     	;# 
   378  001F                     	;# 
   379  0081                     	;# 
   380  0085                     	;# 
   381  0086                     	;# 
   382  0087                     	;# 
   383  0089                     	;# 
   384  008C                     	;# 
   385  008D                     	;# 
   386  008E                     	;# 
   387  008F                     	;# 
   388  0090                     	;# 
   389  0091                     	;# 
   390  0092                     	;# 
   391  0093                     	;# 
   392  0093                     	;# 
   393  0093                     	;# 
   394  0094                     	;# 
   395  0095                     	;# 
   396  0096                     	;# 
   397  0097                     	;# 
   398  0098                     	;# 
   399  0099                     	;# 
   400  009A                     	;# 
   401  009B                     	;# 
   402  009C                     	;# 
   403  009D                     	;# 
   404  009E                     	;# 
   405  009F                     	;# 
   406  0105                     	;# 
   407  0107                     	;# 
   408  0108                     	;# 
   409  0109                     	;# 
   410  010C                     	;# 
   411  010C                     	;# 
   412  010D                     	;# 
   413  010E                     	;# 
   414  010F                     	;# 
   415  0185                     	;# 
   416  0187                     	;# 
   417  0188                     	;# 
   418  0189                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421                           
   422                           	psect	idataBANK0
   423  0FAC                     __pidataBANK0:	
   424                           
   425                           ;initializer for _lcdcolumns
   426  0FAC  3410               	retlw	16
   427                           
   428                           ;initializer for _lcdrows
   429  0FAD  3402               	retlw	2
   430                           
   431                           ;initializer for _distancia1
   432  0FAE  3459               	retlw	low (_dist1| 0)
   433                           
   434                           ;initializer for _distancia2
   435  0FAF  3461               	retlw	low (_dist2| 0)
   436                           
   437                           ;initializer for _distancia3
   438  0FB0  34A0               	retlw	low (_dist3| 0)
   439                           
   440                           ;initializer for _distancia4
   441  0FB1  34A8               	retlw	low (_dist4| 0)
   442                           
   443                           	psect	strings
   444  06A8                     __pstrings:	
   445  06A8                     stringtab:	
   446  06A8                     __stringtab:	
   447                           
   448                           ;	String table - string pointers are 1 byte each
   449  06A8  1BFF               	btfsc	btemp+1,7
   450  06A9  2EB2               	ljmp	stringcode
   451  06AA  1383               	bcf	3,7
   452  06AB  187F               	btfsc	btemp+1,0
   453  06AC  1783               	bsf	3,7
   454  06AD  0800               	movf	0,w
   455  06AE  0A84               	incf	4,f
   456  06AF  1903               	skipnz
   457  06B0  0AFF               	incf	btemp+1,f
   458  06B1  0008               	return
   459  06B2                     stringcode:	
   460  06B2                     stringdir:	
   461  06B2  3006               	movlw	high stringdir
   462  06B3  008A               	movwf	10
   463  06B4  0804               	movf	4,w
   464  06B5  0A84               	incf	4,f
   465  06B6  0782               	addwf	2,f
   466  06B7                     __stringbase:	
   467  06B7  3400               	retlw	0
   468  06B8                     __end_of__stringtab:	
   469  06B8                     _dpowers:	
   470  06B8  3401               	retlw	1
   471  06B9  3400               	retlw	0
   472  06BA  340A               	retlw	10
   473  06BB  3400               	retlw	0
   474  06BC  3464               	retlw	100
   475  06BD  3400               	retlw	0
   476  06BE  34E8               	retlw	232
   477  06BF  3403               	retlw	3
   478  06C0  3410               	retlw	16
   479  06C1  3427               	retlw	39
   480  06C2                     __end_of_dpowers:	
   481  06C2                     _rowaddr:	
   482  06C2  3400               	retlw	0
   483  06C3  3440               	retlw	64
   484  06C4  3414               	retlw	20
   485  06C5  3454               	retlw	84
   486  06C6                     __end_of_rowaddr:	
   487  06C6                     STR_13:	
   488  06C6  3444               	retlw	68	;'D'
   489  06C7  3469               	retlw	105	;'i'
   490  06C8  3473               	retlw	115	;'s'
   491  06C9  3474               	retlw	116	;'t'
   492  06CA  3461               	retlw	97	;'a'
   493  06CB  346E               	retlw	110	;'n'
   494  06CC  3463               	retlw	99	;'c'
   495  06CD  3469               	retlw	105	;'i'
   496  06CE  3461               	retlw	97	;'a'
   497  06CF  3473               	retlw	115	;'s'
   498  06D0  343A               	retlw	58	;':'
   499  06D1  3400               	retlw	0
   500  06D2                     STR_3:	
   501  06D2  3425               	retlw	37	;'%'
   502  06D3  3475               	retlw	117	;'u'
   503  06D4  3420               	retlw	32	;' '
   504  06D5  3420               	retlw	32	;' '
   505  06D6  3420               	retlw	32	;' '
   506  06D7  3400               	retlw	0
   507  06D8  3400               	retlw	0
   508  06D9                     STR_1:	
   509  06D9  344E               	retlw	78	;'N'
   510  06DA  344F               	retlw	79	;'O'
   511  06DB  3450               	retlw	80	;'P'
   512  06DC  3445               	retlw	69	;'E'
   513  06DD  3400               	retlw	0
   514  06DE  3400               	retlw	0
   515  06DF                     STR_2:	
   516  06DF  344F               	retlw	79	;'O'
   517  06E0  3455               	retlw	85	;'U'
   518  06E1  3454               	retlw	84	;'T'
   519  06E2  3400               	retlw	0
   520  06E3  3400               	retlw	0
   521  06D2                     
   522                           ; #config settings
   523  0000                     
   524                           	psect	nvBANK0
   525  006F                     __pnvBANK0:	
   526  006F                     _iomode:	
   527  006F                     	ds	1
   528  000E                     _TMR1	set	14
   529  000B                     _INTCON	set	11
   530  0006                     _PORTB	set	6
   531  001A                     _RCREG	set	26
   532  0010                     _T1CON	set	16
   533  0019                     _TXREG	set	25
   534  00C4                     _CREN	set	196
   535  005F                     _GIE	set	95
   536  0030                     _RB0	set	48
   537  0031                     _RB1	set	49
   538  0032                     _RB2	set	50
   539  0033                     _RB3	set	51
   540  0034                     _RB4	set	52
   541  0035                     _RB5	set	53
   542  0036                     _RB6	set	54
   543  0037                     _RB7	set	55
   544  005B                     _RBIE	set	91
   545  0058                     _RBIF	set	88
   546  0038                     _RC0	set	56
   547  0039                     _RC1	set	57
   548  003A                     _RC2	set	58
   549  003B                     _RC3	set	59
   550  003C                     _RC4	set	60
   551  003D                     _RC5	set	61
   552  0065                     _RCIF	set	101
   553  00C7                     _SPEN	set	199
   554  0080                     _TMR1ON	set	128
   555  0096                     _IOCB	set	150
   556  008F                     _OSCCON	set	143
   557  0099                     _SPBRG	set	153
   558  0086                     _TRISB	set	134
   559  04C2                     _BRGH	set	1218
   560  04C4                     _SYNC	set	1220
   561  0438                     _TRISC0	set	1080
   562  0439                     _TRISC1	set	1081
   563  043A                     _TRISC2	set	1082
   564  043B                     _TRISC3	set	1083
   565  043C                     _TRISC4	set	1084
   566  043D                     _TRISC5	set	1085
   567  043E                     _TRISC6	set	1086
   568  043F                     _TRISC7	set	1087
   569  04C1                     _TRMT	set	1217
   570  04C5                     _TXEN	set	1221
   571  0189                     _ANSELH	set	393
   572                           
   573                           	psect	cinit
   574  0013                     start_initialization:	
   575  0013                     __initialization:	
   576                           
   577                           ; Clear objects allocated to COMMON
   578  0013  01F8               	clrf	__pbssCOMMON& (0+127)
   579  0014  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   580                           
   581                           ; Clear objects allocated to BANK0
   582  0015  1383               	bcf	3,7	;select IRP bank0
   583  0016  3050               	movlw	low __pbssBANK0
   584  0017  0084               	movwf	4
   585  0018  3069               	movlw	low (__pbssBANK0+25)
   586  0019  158A  27B2  118A   	fcall	clear_ram0
   587                           
   588                           ; Clear objects allocated to BANK1
   589  001C  30A0               	movlw	low __pbssBANK1
   590  001D  0084               	movwf	4
   591  001E  30B0               	movlw	low (__pbssBANK1+16)
   592  001F  158A  27B2  118A   	fcall	clear_ram0
   593                           
   594                           ; Initialize objects allocated to BANK0
   595  0022  158A  27AC  118A   	fcall	__pidataBANK0	;fetch initializer
   596  0025  00E9               	movwf	__pdataBANK0& (0+127)
   597  0026  158A  27AD  118A   	fcall	__pidataBANK0+1	;fetch initializer
   598  0029  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   599  002A  158A  27AE  118A   	fcall	__pidataBANK0+2	;fetch initializer
   600  002D  00EB               	movwf	(__pdataBANK0+2)& (0+127)
   601  002E  158A  27AF  118A   	fcall	__pidataBANK0+3	;fetch initializer
   602  0031  00EC               	movwf	(__pdataBANK0+3)& (0+127)
   603  0032  158A  27B0  118A   	fcall	__pidataBANK0+4	;fetch initializer
   604  0035  00ED               	movwf	(__pdataBANK0+4)& (0+127)
   605  0036  158A  27B1         	fcall	__pidataBANK0+5	;fetch initializer
   606  0038  00EE               	movwf	(__pdataBANK0+5)& (0+127)
   607  0039                     end_of_initialization:	
   608                           ;End of C runtime variable initialization code
   609                           
   610  0039                     __end_of__initialization:	
   611  0039  0183               	clrf	3
   612  003A  118A  2DDE         	ljmp	_main	;jump to C main() function
   613                           
   614                           	psect	bssCOMMON
   615  0078                     __pbssCOMMON:	
   616  0078                     _rbon:	
   617  0078                     	ds	2
   618                           
   619                           	psect	bssBANK0
   620  0050                     __pbssBANK0:	
   621  0050                     _t4:	
   622  0050                     	ds	2
   623  0052                     _t5:	
   624  0052                     	ds	2
   625  0054                     _t6:	
   626  0054                     	ds	2
   627  0056                     _t7:	
   628  0056                     	ds	2
   629  0058                     _dispctrl:	
   630  0058                     	ds	1
   631  0059                     _dist1:	
   632  0059                     	ds	8
   633  0061                     _dist2:	
   634  0061                     	ds	8
   635                           
   636                           	psect	dataBANK0
   637  0069                     __pdataBANK0:	
   638  0069                     _lcdcolumns:	
   639  0069                     	ds	1
   640  006A                     _lcdrows:	
   641  006A                     	ds	1
   642  006B                     _distancia1:	
   643  006B                     	ds	1
   644  006C                     _distancia2:	
   645  006C                     	ds	1
   646  006D                     _distancia3:	
   647  006D                     	ds	1
   648  006E                     _distancia4:	
   649  006E                     	ds	1
   650                           
   651                           	psect	bssBANK1
   652  00A0                     __pbssBANK1:	
   653  00A0                     _dist3:	
   654  00A0                     	ds	8
   655  00A8                     _dist4:	
   656  00A8                     	ds	8
   657                           
   658                           	psect	clrtext
   659  0FB2                     clear_ram0:	
   660                           ;	Called with FSR containing the base address, and
   661                           ;	W with the last address+1
   662                           
   663  0FB2  0064               	clrwdt	;clear the watchdog before getting into this loop
   664  0FB3                     clrloop0:	
   665  0FB3  0180               	clrf	0	;clear RAM location pointed to by FSR
   666  0FB4  0A84               	incf	4,f	;increment pointer
   667  0FB5  0604               	xorwf	4,w	;XOR with final address
   668  0FB6  1903               	btfsc	3,2	;have we reached the end yet?
   669  0FB7  3400               	retlw	0	;all done for this memory range, return
   670  0FB8  0604               	xorwf	4,w	;XOR again to restore value
   671  0FB9  2FB3               	goto	clrloop0	;do the next byte
   672                           
   673                           	psect	cstackCOMMON
   674  0070                     __pcstackCOMMON:	
   675  0070                     ?_lcd_ioinit:	
   676  0070                     ?_lcd_iowrite4:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_lcd_iowrite8:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_lcd_clear:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_lcd_on:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_UART_Write:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_UART_Write_Text:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_Inicializaciones:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_Trigger:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_ResetEcho:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_main:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_echo:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ??_echo:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     lcd_iowrite8@data:	
   713                           ; 1 bytes @ 0x0
   714                           
   715                           
   716                           ; 1 bytes @ 0x0
   717  0070                     	ds	4
   718  0074                     ?_lcd_ioset:	
   719  0074                     ??_lcd_iowrite8:	
   720                           ; 1 bytes @ 0x4
   721                           
   722  0074                     ??_UART_Write:	
   723                           ; 1 bytes @ 0x4
   724                           
   725  0074                     ??_Trigger:	
   726                           ; 1 bytes @ 0x4
   727                           
   728  0074                     ??_ResetEcho:	
   729                           ; 1 bytes @ 0x4
   730                           
   731  0074                     ??___aldiv:	
   732                           ; 1 bytes @ 0x4
   733                           
   734  0074                     ?___lwdiv:	
   735                           ; 1 bytes @ 0x4
   736                           
   737  0074                     lcd_ioset@out:	
   738                           ; 2 bytes @ 0x4
   739                           
   740  0074                     UART_Write@data:	
   741                           ; 1 bytes @ 0x4
   742                           
   743  0074                     ___lwdiv@divisor:	
   744                           ; 1 bytes @ 0x4
   745                           
   746                           
   747                           ; 2 bytes @ 0x4
   748  0074                     	ds	1
   749  0075                     ??_lcd_ioset:	
   750  0075                     ??_UART_Write_Text:	
   751                           ; 1 bytes @ 0x5
   752                           
   753  0075                     lcd_ioset@pin:	
   754                           ; 1 bytes @ 0x5
   755                           
   756  0075                     UART_Init@x:	
   757                           ; 1 bytes @ 0x5
   758                           
   759                           
   760                           ; 2 bytes @ 0x5
   761  0075                     	ds	1
   762  0076                     ??_lcd_ioinit:	
   763  0076                     ??_lcd_iowrite4:	
   764                           ; 1 bytes @ 0x6
   765                           
   766  0076                     ___lwdiv@dividend:	
   767                           ; 1 bytes @ 0x6
   768                           
   769                           
   770                           ; 2 bytes @ 0x6
   771  0076                     	ds	2
   772  0078                     ??_lcd_puts:	
   773                           
   774                           	psect	cstackBANK0
   775  0020                     __pcstackBANK0:	
   776                           ; 1 bytes @ 0x8
   777                           
   778  0020                     ??___lwdiv:	
   779  0020                     ?___aldiv:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0020                     lcd_ioinit@iodata:	
   783                           ; 4 bytes @ 0x0
   784                           
   785  0020                     lcd_iowrite4@data:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0020                     UART_Write_Text@i:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0020                     ___aldiv@divisor:	
   792                           ; 2 bytes @ 0x0
   793                           
   794                           
   795                           ; 4 bytes @ 0x0
   796  0020                     	ds	1
   797  0021                     lcd_ioinit@i:	
   798  0021                     lcd_iowrite4@i:	
   799                           ; 1 bytes @ 0x1
   800                           
   801  0021                     ___lwdiv@counter:	
   802                           ; 1 bytes @ 0x1
   803                           
   804                           
   805                           ; 1 bytes @ 0x1
   806  0021                     	ds	1
   807  0022                     ?_lcd_send:	
   808  0022                     lcd_send@rs:	
   809                           ; 1 bytes @ 0x2
   810                           
   811  0022                     UART_Write_Text@text:	
   812                           ; 1 bytes @ 0x2
   813                           
   814  0022                     ___lwdiv@quotient:	
   815                           ; 1 bytes @ 0x2
   816                           
   817                           
   818                           ; 2 bytes @ 0x2
   819  0022                     	ds	1
   820  0023                     ??_lcd_send:	
   821                           
   822                           ; 1 bytes @ 0x3
   823  0023                     	ds	1
   824  0024                     ?___lwmod:	
   825  0024                     lcd_send@data:	
   826                           ; 2 bytes @ 0x4
   827                           
   828  0024                     ___lwmod@divisor:	
   829                           ; 1 bytes @ 0x4
   830                           
   831  0024                     ___aldiv@dividend:	
   832                           ; 2 bytes @ 0x4
   833                           
   834                           
   835                           ; 4 bytes @ 0x4
   836  0024                     	ds	1
   837  0025                     ?_lcd_init:	
   838  0025                     ??_lcd_clear:	
   839                           ; 1 bytes @ 0x5
   840                           
   841  0025                     ??_lcd_on:	
   842                           ; 1 bytes @ 0x5
   843                           
   844  0025                     ?_lcd_goto:	
   845                           ; 1 bytes @ 0x5
   846                           
   847  0025                     ?_lcd_puts:	
   848                           ; 1 bytes @ 0x5
   849                           
   850  0025                     lcd_init@cols:	
   851                           ; 1 bytes @ 0x5
   852                           
   853  0025                     lcd_goto@row:	
   854                           ; 1 bytes @ 0x5
   855                           
   856  0025                     lcd_puts@string:	
   857                           ; 1 bytes @ 0x5
   858                           
   859                           
   860                           ; 2 bytes @ 0x5
   861  0025                     	ds	1
   862  0026                     ??_lcd_goto:	
   863  0026                     lcd_init@rows:	
   864                           ; 1 bytes @ 0x6
   865                           
   866  0026                     ___lwmod@dividend:	
   867                           ; 1 bytes @ 0x6
   868                           
   869                           
   870                           ; 2 bytes @ 0x6
   871  0026                     	ds	1
   872  0027                     ??_lcd_init:	
   873  0027                     lcd_goto@col:	
   874                           ; 1 bytes @ 0x7
   875                           
   876                           
   877                           ; 1 bytes @ 0x7
   878  0027                     	ds	1
   879  0028                     ?_PrintDistancias:	
   880  0028                     ??___lwmod:	
   881                           ; 1 bytes @ 0x8
   882                           
   883  0028                     PrintDistancias@dist2:	
   884                           ; 1 bytes @ 0x8
   885                           
   886  0028                     ___aldiv@counter:	
   887                           ; 1 bytes @ 0x8
   888                           
   889                           
   890                           ; 1 bytes @ 0x8
   891  0028                     	ds	1
   892  0029                     PrintDistancias@dist3:	
   893  0029                     ___aldiv@sign:	
   894                           ; 1 bytes @ 0x9
   895                           
   896  0029                     ___lwmod@counter:	
   897                           ; 1 bytes @ 0x9
   898                           
   899                           
   900                           ; 1 bytes @ 0x9
   901  0029                     	ds	1
   902  002A                     ?_sprintf:	
   903  002A                     lcd_init@iodata:	
   904                           ; 2 bytes @ 0xA
   905                           
   906  002A                     PrintDistancias@dist4:	
   907                           ; 1 bytes @ 0xA
   908                           
   909  002A                     sprintf@f:	
   910                           ; 1 bytes @ 0xA
   911                           
   912  002A                     ___aldiv@quotient:	
   913                           ; 1 bytes @ 0xA
   914                           
   915                           
   916                           ; 4 bytes @ 0xA
   917  002A                     	ds	1
   918  002B                     ??_Inicializaciones:	
   919  002B                     ??_PrintDistancias:	
   920                           ; 1 bytes @ 0xB
   921                           
   922                           
   923                           ; 1 bytes @ 0xB
   924  002B                     	ds	2
   925  002D                     ??_sprintf:	
   926  002D                     PrintDistancias@dist1:	
   927                           ; 1 bytes @ 0xD
   928                           
   929                           
   930                           ; 1 bytes @ 0xD
   931  002D                     	ds	1
   932  002E                     ?_UART_Init:	
   933  002E                     UART_Init@baudrate:	
   934                           ; 1 bytes @ 0xE
   935                           
   936                           
   937                           ; 4 bytes @ 0xE
   938  002E                     	ds	2
   939  0030                     sprintf@flag:	
   940                           
   941                           ; 1 bytes @ 0x10
   942  0030                     	ds	1
   943  0031                     sprintf@ap:	
   944                           
   945                           ; 1 bytes @ 0x11
   946  0031                     	ds	1
   947  0032                     ??_UART_Init:	
   948  0032                     sprintf@val:	
   949                           ; 1 bytes @ 0x12
   950                           
   951                           
   952                           ; 2 bytes @ 0x12
   953  0032                     	ds	2
   954  0034                     sprintf@prec:	
   955                           
   956                           ; 1 bytes @ 0x14
   957  0034                     	ds	1
   958  0035                     sprintf@sp:	
   959                           
   960                           ; 1 bytes @ 0x15
   961  0035                     	ds	1
   962  0036                     sprintf@c:	
   963                           
   964                           ; 1 bytes @ 0x16
   965  0036                     	ds	1
   966  0037                     ?_CalcularDistancia:	
   967  0037                     CalcularDistancia@t0:	
   968                           ; 1 bytes @ 0x17
   969                           
   970                           
   971                           ; 2 bytes @ 0x17
   972  0037                     	ds	2
   973  0039                     CalcularDistancia@t1:	
   974                           
   975                           ; 2 bytes @ 0x19
   976  0039                     	ds	2
   977  003B                     CalcularDistancia@t2:	
   978                           
   979                           ; 2 bytes @ 0x1B
   980  003B                     	ds	2
   981  003D                     CalcularDistancia@t3:	
   982                           
   983                           ; 2 bytes @ 0x1D
   984  003D                     	ds	2
   985  003F                     CalcularDistancia@distancia1:	
   986                           
   987                           ; 1 bytes @ 0x1F
   988  003F                     	ds	1
   989  0040                     CalcularDistancia@distancia2:	
   990                           
   991                           ; 1 bytes @ 0x20
   992  0040                     	ds	1
   993  0041                     CalcularDistancia@distancia3:	
   994                           
   995                           ; 1 bytes @ 0x21
   996  0041                     	ds	1
   997  0042                     CalcularDistancia@distancia4:	
   998                           
   999                           ; 1 bytes @ 0x22
  1000  0042                     	ds	1
  1001  0043                     ??_CalcularDistancia:	
  1002                           
  1003                           ; 1 bytes @ 0x23
  1004  0043                     	ds	1
  1005  0044                     CalcularDistancia@d0:	
  1006                           
  1007                           ; 2 bytes @ 0x24
  1008  0044                     	ds	2
  1009  0046                     CalcularDistancia@d1:	
  1010                           
  1011                           ; 2 bytes @ 0x26
  1012  0046                     	ds	2
  1013  0048                     CalcularDistancia@d2:	
  1014                           
  1015                           ; 2 bytes @ 0x28
  1016  0048                     	ds	2
  1017  004A                     CalcularDistancia@d3:	
  1018                           
  1019                           ; 2 bytes @ 0x2A
  1020  004A                     	ds	2
  1021  004C                     ??_main:	
  1022                           
  1023                           ; 1 bytes @ 0x2C
  1024  004C                     	ds	4
  1025                           
  1026                           	psect	maintext
  1027  05DE                     __pmaintext:	
  1028 ;;
  1029 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1030 ;;
  1031 ;; *************** function _main *****************
  1032 ;; Defined at:
  1033 ;;		line 49 in file "main.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : B00/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1047 ;;      Params:         0       0       0       0
  1048 ;;      Locals:         0       0       0       0
  1049 ;;      Temps:          0       4       0       0
  1050 ;;      Totals:         0       4       0       0
  1051 ;;Total ram usage:        4 bytes
  1052 ;; Hardware stack levels required when called:    6
  1053 ;; This function calls:
  1054 ;;		_CalcularDistancia
  1055 ;;		_Inicializaciones
  1056 ;;		_PrintDistancias
  1057 ;;		_ResetEcho
  1058 ;;		_Trigger
  1059 ;;		_UART_Init
  1060 ;; This function is called by:
  1061 ;;		Startup code after reset
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _main
  1067  05DE                     _main:	
  1068                           
  1069                           ;main.c: 51: Inicializaciones();
  1070                           
  1071                           ;incstack = 0
  1072                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1073  05DE  118A  2749  118A   	fcall	_Inicializaciones
  1074                           
  1075                           ;main.c: 52: UART_Init(9600);
  1076  05E1  3000               	movlw	0
  1077  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  1078  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  1079  05E4  00B1               	movwf	UART_Init@baudrate+3
  1080  05E5  3000               	movlw	0
  1081  05E6  00B0               	movwf	UART_Init@baudrate+2
  1082  05E7  3025               	movlw	37
  1083  05E8  00AF               	movwf	UART_Init@baudrate+1
  1084  05E9  3080               	movlw	128
  1085  05EA  00AE               	movwf	UART_Init@baudrate
  1086  05EB  118A  212B  118A   	fcall	_UART_Init
  1087  05EE                     l2377:	
  1088                           ;main.c: 54: while(1)
  1089                           
  1090                           
  1091                           ;main.c: 55: {
  1092                           ;main.c: 62: Trigger();
  1093  05EE  118A  2527  118A   	fcall	_Trigger
  1094                           
  1095                           ;main.c: 63: CalcularDistancia(t4, t5, t6, t7, &distancia1, &distancia2, &distancia3, &d
      +                          istancia4);
  1096  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1097  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1098  05F3  0851               	movf	_t4+1,w
  1099  05F4  00B8               	movwf	CalcularDistancia@t0+1
  1100  05F5  0850               	movf	_t4,w
  1101  05F6  00B7               	movwf	CalcularDistancia@t0
  1102  05F7  0853               	movf	_t5+1,w
  1103  05F8  00BA               	movwf	CalcularDistancia@t1+1
  1104  05F9  0852               	movf	_t5,w
  1105  05FA  00B9               	movwf	CalcularDistancia@t1
  1106  05FB  0855               	movf	_t6+1,w
  1107  05FC  00BC               	movwf	CalcularDistancia@t2+1
  1108  05FD  0854               	movf	_t6,w
  1109  05FE  00BB               	movwf	CalcularDistancia@t2
  1110  05FF  0857               	movf	_t7+1,w
  1111  0600  00BE               	movwf	CalcularDistancia@t3+1
  1112  0601  0856               	movf	_t7,w
  1113  0602  00BD               	movwf	CalcularDistancia@t3
  1114  0603  306B               	movlw	(low (_distancia1| 0))& (0+255)
  1115  0604  00CC               	movwf	??_main
  1116  0605  084C               	movf	??_main,w
  1117  0606  00BF               	movwf	CalcularDistancia@distancia1
  1118  0607  306C               	movlw	(low (_distancia2| 0))& (0+255)
  1119  0608  00CD               	movwf	??_main+1
  1120  0609  084D               	movf	??_main+1,w
  1121  060A  00C0               	movwf	CalcularDistancia@distancia2
  1122  060B  306D               	movlw	(low (_distancia3| 0))& (0+255)
  1123  060C  00CE               	movwf	??_main+2
  1124  060D  084E               	movf	??_main+2,w
  1125  060E  00C1               	movwf	CalcularDistancia@distancia3
  1126  060F  306E               	movlw	(low (_distancia4| 0))& (0+255)
  1127  0610  00CF               	movwf	??_main+3
  1128  0611  084F               	movf	??_main+3,w
  1129  0612  00C2               	movwf	CalcularDistancia@distancia4
  1130  0613  118A  203C  118A   	fcall	_CalcularDistancia
  1131                           
  1132                           ;main.c: 64: PrintDistancias(dist1, dist2, dist3, dist4);
  1133  0616  3061               	movlw	(low (_dist2| 0))& (0+255)
  1134  0617  1283               	bcf	3,5	;RP0=0, select bank0
  1135  0618  1303               	bcf	3,6	;RP1=0, select bank0
  1136  0619  00CC               	movwf	??_main
  1137  061A  084C               	movf	??_main,w
  1138  061B  00A8               	movwf	PrintDistancias@dist2
  1139  061C  30A0               	movlw	(low (_dist3| 0))& (0+255)
  1140  061D  00CD               	movwf	??_main+1
  1141  061E  084D               	movf	??_main+1,w
  1142  061F  00A9               	movwf	PrintDistancias@dist3
  1143  0620  30A8               	movlw	(low (_dist4| 0))& (0+255)
  1144  0621  00CE               	movwf	??_main+2
  1145  0622  084E               	movf	??_main+2,w
  1146  0623  00AA               	movwf	PrintDistancias@dist4
  1147  0624  3059               	movlw	(low (_dist1| 0))& (0+255)
  1148  0625  118A  2391  118A   	fcall	_PrintDistancias
  1149                           
  1150                           ;main.c: 65: ResetEcho();
  1151  0628  158A  27E7  118A   	fcall	_ResetEcho
  1152  062B  2DEE               	goto	l2377
  1153  062C                     __end_of_main:	
  1154                           ;main.c: 66: }
  1155                           ;main.c: 67: return;
  1156                           
  1157                           
  1158                           	psect	text1
  1159  012B                     __ptext1:	
  1160 ;; *************** function _UART_Init *****************
  1161 ;; Defined at:
  1162 ;;		line 3 in file "Uart.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;  baudrate        4   14[BANK0 ] const long 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;  x               2    5[COMMON] unsigned int 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      unsigned char 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0, pclath, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1176 ;;      Params:         0       4       0       0
  1177 ;;      Locals:         2       0       0       0
  1178 ;;      Temps:          0      12       0       0
  1179 ;;      Totals:         2      16       0       0
  1180 ;;Total ram usage:       18 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    2
  1183 ;; This function calls:
  1184 ;;		___aldiv
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           
  1191                           ;psect for function _UART_Init
  1192  012B                     _UART_Init:	
  1193                           
  1194                           ;Uart.c: 5: unsigned int x;
  1195                           ;Uart.c: 6: x = (8000000 - baudrate*64)/(baudrate*64);
  1196                           
  1197                           ;incstack = 0
  1198                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1199  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1200  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1201  012D  082E               	movf	UART_Init@baudrate,w
  1202  012E  00B2               	movwf	??_UART_Init
  1203  012F  082F               	movf	UART_Init@baudrate+1,w
  1204  0130  00B3               	movwf	??_UART_Init+1
  1205  0131  0830               	movf	UART_Init@baudrate+2,w
  1206  0132  00B4               	movwf	??_UART_Init+2
  1207  0133  0831               	movf	UART_Init@baudrate+3,w
  1208  0134  00B5               	movwf	??_UART_Init+3
  1209  0135  3006               	movlw	6
  1210  0136                     u1545:	
  1211  0136  1003               	clrc
  1212  0137  0DB2               	rlf	??_UART_Init,f
  1213  0138  0DB3               	rlf	??_UART_Init+1,f
  1214  0139  0DB4               	rlf	??_UART_Init+2,f
  1215  013A  0DB5               	rlf	??_UART_Init+3,f
  1216  013B  3EFF               	addlw	-1
  1217  013C  1D03               	skipz
  1218  013D  2936               	goto	u1545
  1219  013E  0835               	movf	??_UART_Init+3,w
  1220  013F  00A3               	movwf	___aldiv@divisor+3
  1221  0140  0834               	movf	??_UART_Init+2,w
  1222  0141  00A2               	movwf	___aldiv@divisor+2
  1223  0142  0833               	movf	??_UART_Init+1,w
  1224  0143  00A1               	movwf	___aldiv@divisor+1
  1225  0144  0832               	movf	??_UART_Init,w
  1226  0145  00A0               	movwf	___aldiv@divisor
  1227  0146  3000               	movlw	0
  1228  0147  00B6               	movwf	??_UART_Init+4
  1229  0148  3012               	movlw	18
  1230  0149  00B7               	movwf	??_UART_Init+5
  1231  014A  307A               	movlw	122
  1232  014B  00B8               	movwf	??_UART_Init+6
  1233  014C  3000               	movlw	0
  1234  014D  00B9               	movwf	??_UART_Init+7
  1235  014E  082E               	movf	UART_Init@baudrate,w
  1236  014F  00BA               	movwf	??_UART_Init+8
  1237  0150  082F               	movf	UART_Init@baudrate+1,w
  1238  0151  00BB               	movwf	??_UART_Init+9
  1239  0152  0830               	movf	UART_Init@baudrate+2,w
  1240  0153  00BC               	movwf	??_UART_Init+10
  1241  0154  0831               	movf	UART_Init@baudrate+3,w
  1242  0155  00BD               	movwf	??_UART_Init+11
  1243  0156  3006               	movlw	6
  1244  0157                     u1555:	
  1245  0157  1003               	clrc
  1246  0158  0DBA               	rlf	??_UART_Init+8,f
  1247  0159  0DBB               	rlf	??_UART_Init+9,f
  1248  015A  0DBC               	rlf	??_UART_Init+10,f
  1249  015B  0DBD               	rlf	??_UART_Init+11,f
  1250  015C  3EFF               	addlw	-1
  1251  015D  1D03               	skipz
  1252  015E  2957               	goto	u1555
  1253  015F  09BA               	comf	??_UART_Init+8,f
  1254  0160  09BB               	comf	??_UART_Init+9,f
  1255  0161  09BC               	comf	??_UART_Init+10,f
  1256  0162  09BD               	comf	??_UART_Init+11,f
  1257  0163  0ABA               	incf	??_UART_Init+8,f
  1258  0164  1903               	skipnz
  1259  0165  0ABB               	incf	??_UART_Init+9,f
  1260  0166  1903               	skipnz
  1261  0167  0ABC               	incf	??_UART_Init+10,f
  1262  0168  1903               	skipnz
  1263  0169  0ABD               	incf	??_UART_Init+11,f
  1264  016A  083A               	movf	??_UART_Init+8,w
  1265  016B  07B6               	addwf	??_UART_Init+4,f
  1266  016C  083B               	movf	??_UART_Init+9,w
  1267  016D  1803               	skipnc
  1268  016E  0F3B               	incfsz	??_UART_Init+9,w
  1269  016F  2971               	goto	u1560
  1270  0170  2972               	goto	u1561
  1271  0171                     u1560:	
  1272  0171  07B7               	addwf	??_UART_Init+5,f
  1273  0172                     u1561:	
  1274  0172  083C               	movf	??_UART_Init+10,w
  1275  0173  1803               	skipnc
  1276  0174  0F3C               	incfsz	??_UART_Init+10,w
  1277  0175  2977               	goto	u1562
  1278  0176  2978               	goto	u1563
  1279  0177                     u1562:	
  1280  0177  07B8               	addwf	??_UART_Init+6,f
  1281  0178                     u1563:	
  1282  0178  083D               	movf	??_UART_Init+11,w
  1283  0179  1803               	skipnc
  1284  017A  0A3D               	incf	??_UART_Init+11,w
  1285  017B  07B9               	addwf	??_UART_Init+7,f
  1286  017C  0839               	movf	??_UART_Init+7,w
  1287  017D  00A7               	movwf	___aldiv@dividend+3
  1288  017E  0838               	movf	??_UART_Init+6,w
  1289  017F  00A6               	movwf	___aldiv@dividend+2
  1290  0180  0837               	movf	??_UART_Init+5,w
  1291  0181  00A5               	movwf	___aldiv@dividend+1
  1292  0182  0836               	movf	??_UART_Init+4,w
  1293  0183  00A4               	movwf	___aldiv@dividend
  1294  0184  118A  242A  118A   	fcall	___aldiv
  1295  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0189  0821               	movf	?___aldiv+1,w
  1298  018A  00F6               	movwf	UART_Init@x+1
  1299  018B  0820               	movf	?___aldiv,w
  1300  018C  00F5               	movwf	UART_Init@x
  1301                           
  1302                           ;Uart.c: 7: if(x>255)
  1303  018D  3001               	movlw	1
  1304  018E  0276               	subwf	UART_Init@x+1,w
  1305  018F  3000               	movlw	0
  1306  0190  1903               	skipnz
  1307  0191  0275               	subwf	UART_Init@x,w
  1308  0192  1C03               	skipc
  1309  0193  29F7               	goto	l1701
  1310                           
  1311                           ;Uart.c: 8: {
  1312                           ;Uart.c: 9: x = (8000000 - baudrate*16)/(baudrate*16);
  1313  0194  082E               	movf	UART_Init@baudrate,w
  1314  0195  00B2               	movwf	??_UART_Init
  1315  0196  082F               	movf	UART_Init@baudrate+1,w
  1316  0197  00B3               	movwf	??_UART_Init+1
  1317  0198  0830               	movf	UART_Init@baudrate+2,w
  1318  0199  00B4               	movwf	??_UART_Init+2
  1319  019A  0831               	movf	UART_Init@baudrate+3,w
  1320  019B  00B5               	movwf	??_UART_Init+3
  1321  019C  3004               	movlw	4
  1322  019D                     u1585:	
  1323  019D  1003               	clrc
  1324  019E  0DB2               	rlf	??_UART_Init,f
  1325  019F  0DB3               	rlf	??_UART_Init+1,f
  1326  01A0  0DB4               	rlf	??_UART_Init+2,f
  1327  01A1  0DB5               	rlf	??_UART_Init+3,f
  1328  01A2  3EFF               	addlw	-1
  1329  01A3  1D03               	skipz
  1330  01A4  299D               	goto	u1585
  1331  01A5  0835               	movf	??_UART_Init+3,w
  1332  01A6  00A3               	movwf	___aldiv@divisor+3
  1333  01A7  0834               	movf	??_UART_Init+2,w
  1334  01A8  00A2               	movwf	___aldiv@divisor+2
  1335  01A9  0833               	movf	??_UART_Init+1,w
  1336  01AA  00A1               	movwf	___aldiv@divisor+1
  1337  01AB  0832               	movf	??_UART_Init,w
  1338  01AC  00A0               	movwf	___aldiv@divisor
  1339  01AD  3000               	movlw	0
  1340  01AE  00B6               	movwf	??_UART_Init+4
  1341  01AF  3012               	movlw	18
  1342  01B0  00B7               	movwf	??_UART_Init+5
  1343  01B1  307A               	movlw	122
  1344  01B2  00B8               	movwf	??_UART_Init+6
  1345  01B3  3000               	movlw	0
  1346  01B4  00B9               	movwf	??_UART_Init+7
  1347  01B5  082E               	movf	UART_Init@baudrate,w
  1348  01B6  00BA               	movwf	??_UART_Init+8
  1349  01B7  082F               	movf	UART_Init@baudrate+1,w
  1350  01B8  00BB               	movwf	??_UART_Init+9
  1351  01B9  0830               	movf	UART_Init@baudrate+2,w
  1352  01BA  00BC               	movwf	??_UART_Init+10
  1353  01BB  0831               	movf	UART_Init@baudrate+3,w
  1354  01BC  00BD               	movwf	??_UART_Init+11
  1355  01BD  3004               	movlw	4
  1356  01BE                     u1595:	
  1357  01BE  1003               	clrc
  1358  01BF  0DBA               	rlf	??_UART_Init+8,f
  1359  01C0  0DBB               	rlf	??_UART_Init+9,f
  1360  01C1  0DBC               	rlf	??_UART_Init+10,f
  1361  01C2  0DBD               	rlf	??_UART_Init+11,f
  1362  01C3  3EFF               	addlw	-1
  1363  01C4  1D03               	skipz
  1364  01C5  29BE               	goto	u1595
  1365  01C6  09BA               	comf	??_UART_Init+8,f
  1366  01C7  09BB               	comf	??_UART_Init+9,f
  1367  01C8  09BC               	comf	??_UART_Init+10,f
  1368  01C9  09BD               	comf	??_UART_Init+11,f
  1369  01CA  0ABA               	incf	??_UART_Init+8,f
  1370  01CB  1903               	skipnz
  1371  01CC  0ABB               	incf	??_UART_Init+9,f
  1372  01CD  1903               	skipnz
  1373  01CE  0ABC               	incf	??_UART_Init+10,f
  1374  01CF  1903               	skipnz
  1375  01D0  0ABD               	incf	??_UART_Init+11,f
  1376  01D1  083A               	movf	??_UART_Init+8,w
  1377  01D2  07B6               	addwf	??_UART_Init+4,f
  1378  01D3  083B               	movf	??_UART_Init+9,w
  1379  01D4  1803               	skipnc
  1380  01D5  0F3B               	incfsz	??_UART_Init+9,w
  1381  01D6  29D8               	goto	u1600
  1382  01D7  29D9               	goto	u1601
  1383  01D8                     u1600:	
  1384  01D8  07B7               	addwf	??_UART_Init+5,f
  1385  01D9                     u1601:	
  1386  01D9  083C               	movf	??_UART_Init+10,w
  1387  01DA  1803               	skipnc
  1388  01DB  0F3C               	incfsz	??_UART_Init+10,w
  1389  01DC  29DE               	goto	u1602
  1390  01DD  29DF               	goto	u1603
  1391  01DE                     u1602:	
  1392  01DE  07B8               	addwf	??_UART_Init+6,f
  1393  01DF                     u1603:	
  1394  01DF  083D               	movf	??_UART_Init+11,w
  1395  01E0  1803               	skipnc
  1396  01E1  0A3D               	incf	??_UART_Init+11,w
  1397  01E2  07B9               	addwf	??_UART_Init+7,f
  1398  01E3  0839               	movf	??_UART_Init+7,w
  1399  01E4  00A7               	movwf	___aldiv@dividend+3
  1400  01E5  0838               	movf	??_UART_Init+6,w
  1401  01E6  00A6               	movwf	___aldiv@dividend+2
  1402  01E7  0837               	movf	??_UART_Init+5,w
  1403  01E8  00A5               	movwf	___aldiv@dividend+1
  1404  01E9  0836               	movf	??_UART_Init+4,w
  1405  01EA  00A4               	movwf	___aldiv@dividend
  1406  01EB  118A  242A  118A   	fcall	___aldiv
  1407  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1408  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1409  01F0  0821               	movf	?___aldiv+1,w
  1410  01F1  00F6               	movwf	UART_Init@x+1
  1411  01F2  0820               	movf	?___aldiv,w
  1412  01F3  00F5               	movwf	UART_Init@x
  1413                           
  1414                           ;Uart.c: 10: BRGH = 1;
  1415  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  1416  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  1417  01F6  1518               	bsf	24,2	;volatile
  1418  01F7                     l1701:	
  1419                           
  1420                           ;Uart.c: 11: }
  1421                           ;Uart.c: 12: if(x<256)
  1422  01F7  3001               	movlw	1
  1423  01F8  0276               	subwf	UART_Init@x+1,w
  1424  01F9  3000               	movlw	0
  1425  01FA  1903               	skipnz
  1426  01FB  0275               	subwf	UART_Init@x,w
  1427  01FC  1803               	skipnc
  1428  01FD  0008               	return
  1429                           
  1430                           ;Uart.c: 13: {
  1431                           ;Uart.c: 14: SPBRG = x;
  1432  01FE  0875               	movf	UART_Init@x,w
  1433  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  1434  0200  1303               	bcf	3,6	;RP1=0, select bank1
  1435  0201  0099               	movwf	25	;volatile
  1436                           
  1437                           ;Uart.c: 15: SYNC = 0;
  1438  0202  1218               	bcf	24,4	;volatile
  1439                           
  1440                           ;Uart.c: 16: SPEN = 1;
  1441  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0205  1798               	bsf	24,7	;volatile
  1444                           
  1445                           ;Uart.c: 17: TRISC7 = 1;
  1446  0206  1683               	bsf	3,5	;RP0=1, select bank1
  1447  0207  1303               	bcf	3,6	;RP1=0, select bank1
  1448  0208  1787               	bsf	7,7	;volatile
  1449                           
  1450                           ;Uart.c: 18: TRISC6 = 1;
  1451  0209  1707               	bsf	7,6	;volatile
  1452                           
  1453                           ;Uart.c: 19: CREN = 1;
  1454  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1455  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1456  020C  1618               	bsf	24,4	;volatile
  1457                           
  1458                           ;Uart.c: 20: TXEN = 1;
  1459  020D  1683               	bsf	3,5	;RP0=1, select bank1
  1460  020E  1303               	bcf	3,6	;RP1=0, select bank1
  1461  020F  1698               	bsf	24,5	;volatile
  1462                           
  1463                           ;Uart.c: 21: return 1;
  1464                           ;	Return value of _UART_Init is never used
  1465  0210  0008               	return
  1466  0211                     __end_of_UART_Init:	
  1467                           ;Uart.c: 22: }
  1468                           ;Uart.c: 23: return 0;
  1469                           ;	Return value of _UART_Init is never used
  1470                           
  1471                           
  1472                           	psect	text2
  1473  042A                     __ptext2:	
  1474 ;; *************** function ___aldiv *****************
  1475 ;; Defined at:
  1476 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\aldiv.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  divisor         4    0[BANK0 ] long 
  1479 ;;  dividend        4    4[BANK0 ] long 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;  quotient        4   10[BANK0 ] long 
  1482 ;;  sign            1    9[BANK0 ] unsigned char 
  1483 ;;  counter         1    8[BANK0 ] unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  4    0[BANK0 ] long 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1493 ;;      Params:         0       8       0       0
  1494 ;;      Locals:         0       6       0       0
  1495 ;;      Temps:          1       0       0       0
  1496 ;;      Totals:         1      14       0       0
  1497 ;;Total ram usage:       15 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    1
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_UART_Init
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function ___aldiv
  1509  042A                     ___aldiv:	
  1510                           
  1511                           ;incstack = 0
  1512                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1513  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1514  042B  1303               	bcf	3,6	;RP1=0, select bank0
  1515  042C  01A9               	clrf	___aldiv@sign
  1516  042D  1FA3               	btfss	___aldiv@divisor+3,7
  1517  042E  2C3C               	goto	l506
  1518  042F  09A0               	comf	___aldiv@divisor,f
  1519  0430  09A1               	comf	___aldiv@divisor+1,f
  1520  0431  09A2               	comf	___aldiv@divisor+2,f
  1521  0432  09A3               	comf	___aldiv@divisor+3,f
  1522  0433  0AA0               	incf	___aldiv@divisor,f
  1523  0434  1903               	skipnz
  1524  0435  0AA1               	incf	___aldiv@divisor+1,f
  1525  0436  1903               	skipnz
  1526  0437  0AA2               	incf	___aldiv@divisor+2,f
  1527  0438  1903               	skipnz
  1528  0439  0AA3               	incf	___aldiv@divisor+3,f
  1529  043A  01A9               	clrf	___aldiv@sign
  1530  043B  0AA9               	incf	___aldiv@sign,f
  1531  043C                     l506:	
  1532  043C  1FA7               	btfss	___aldiv@dividend+3,7
  1533  043D  2C4D               	goto	l1663
  1534  043E  09A4               	comf	___aldiv@dividend,f
  1535  043F  09A5               	comf	___aldiv@dividend+1,f
  1536  0440  09A6               	comf	___aldiv@dividend+2,f
  1537  0441  09A7               	comf	___aldiv@dividend+3,f
  1538  0442  0AA4               	incf	___aldiv@dividend,f
  1539  0443  1903               	skipnz
  1540  0444  0AA5               	incf	___aldiv@dividend+1,f
  1541  0445  1903               	skipnz
  1542  0446  0AA6               	incf	___aldiv@dividend+2,f
  1543  0447  1903               	skipnz
  1544  0448  0AA7               	incf	___aldiv@dividend+3,f
  1545  0449  3001               	movlw	1
  1546  044A  00F4               	movwf	??___aldiv
  1547  044B  0874               	movf	??___aldiv,w
  1548  044C  06A9               	xorwf	___aldiv@sign,f
  1549  044D                     l1663:	
  1550  044D  3000               	movlw	0
  1551  044E  00AD               	movwf	___aldiv@quotient+3
  1552  044F  3000               	movlw	0
  1553  0450  00AC               	movwf	___aldiv@quotient+2
  1554  0451  3000               	movlw	0
  1555  0452  00AB               	movwf	___aldiv@quotient+1
  1556  0453  3000               	movlw	0
  1557  0454  00AA               	movwf	___aldiv@quotient
  1558  0455  0823               	movf	___aldiv@divisor+3,w
  1559  0456  0422               	iorwf	___aldiv@divisor+2,w
  1560  0457  0421               	iorwf	___aldiv@divisor+1,w
  1561  0458  0420               	iorwf	___aldiv@divisor,w
  1562  0459  1903               	skipnz
  1563  045A  2CA2               	goto	l1685
  1564  045B  01A8               	clrf	___aldiv@counter
  1565  045C  0AA8               	incf	___aldiv@counter,f
  1566  045D                     l1671:	
  1567  045D  1BA3               	btfsc	___aldiv@divisor+3,7
  1568  045E  2C6D               	goto	l1673
  1569  045F  3001               	movlw	1
  1570  0460  00F4               	movwf	??___aldiv
  1571  0461                     u1475:	
  1572  0461  1003               	clrc
  1573  0462  0DA0               	rlf	___aldiv@divisor,f
  1574  0463  0DA1               	rlf	___aldiv@divisor+1,f
  1575  0464  0DA2               	rlf	___aldiv@divisor+2,f
  1576  0465  0DA3               	rlf	___aldiv@divisor+3,f
  1577  0466  0BF4               	decfsz	??___aldiv,f
  1578  0467  2C61               	goto	u1475
  1579  0468  3001               	movlw	1
  1580  0469  00F4               	movwf	??___aldiv
  1581  046A  0874               	movf	??___aldiv,w
  1582  046B  07A8               	addwf	___aldiv@counter,f
  1583  046C  2C5D               	goto	l1671
  1584  046D                     l1673:	
  1585  046D  3001               	movlw	1
  1586  046E  00F4               	movwf	??___aldiv
  1587  046F                     u1495:	
  1588  046F  1003               	clrc
  1589  0470  0DAA               	rlf	___aldiv@quotient,f
  1590  0471  0DAB               	rlf	___aldiv@quotient+1,f
  1591  0472  0DAC               	rlf	___aldiv@quotient+2,f
  1592  0473  0DAD               	rlf	___aldiv@quotient+3,f
  1593  0474  0BF4               	decfsz	??___aldiv,f
  1594  0475  2C6F               	goto	u1495
  1595  0476  0823               	movf	___aldiv@divisor+3,w
  1596  0477  0227               	subwf	___aldiv@dividend+3,w
  1597  0478  1D03               	skipz
  1598  0479  2C84               	goto	u1505
  1599  047A  0822               	movf	___aldiv@divisor+2,w
  1600  047B  0226               	subwf	___aldiv@dividend+2,w
  1601  047C  1D03               	skipz
  1602  047D  2C84               	goto	u1505
  1603  047E  0821               	movf	___aldiv@divisor+1,w
  1604  047F  0225               	subwf	___aldiv@dividend+1,w
  1605  0480  1D03               	skipz
  1606  0481  2C84               	goto	u1505
  1607  0482  0820               	movf	___aldiv@divisor,w
  1608  0483  0224               	subwf	___aldiv@dividend,w
  1609  0484                     u1505:	
  1610  0484  1C03               	skipc
  1611  0485  2C95               	goto	l1681
  1612  0486  0820               	movf	___aldiv@divisor,w
  1613  0487  02A4               	subwf	___aldiv@dividend,f
  1614  0488  0821               	movf	___aldiv@divisor+1,w
  1615  0489  1C03               	skipc
  1616  048A  0F21               	incfsz	___aldiv@divisor+1,w
  1617  048B  02A5               	subwf	___aldiv@dividend+1,f
  1618  048C  0822               	movf	___aldiv@divisor+2,w
  1619  048D  1C03               	skipc
  1620  048E  0F22               	incfsz	___aldiv@divisor+2,w
  1621  048F  02A6               	subwf	___aldiv@dividend+2,f
  1622  0490  0823               	movf	___aldiv@divisor+3,w
  1623  0491  1C03               	skipc
  1624  0492  0F23               	incfsz	___aldiv@divisor+3,w
  1625  0493  02A7               	subwf	___aldiv@dividend+3,f
  1626  0494  142A               	bsf	___aldiv@quotient,0
  1627  0495                     l1681:	
  1628  0495  3001               	movlw	1
  1629  0496                     u1515:	
  1630  0496  1003               	clrc
  1631  0497  0CA3               	rrf	___aldiv@divisor+3,f
  1632  0498  0CA2               	rrf	___aldiv@divisor+2,f
  1633  0499  0CA1               	rrf	___aldiv@divisor+1,f
  1634  049A  0CA0               	rrf	___aldiv@divisor,f
  1635  049B  3EFF               	addlw	-1
  1636  049C  1D03               	skipz
  1637  049D  2C96               	goto	u1515
  1638  049E  3001               	movlw	1
  1639  049F  02A8               	subwf	___aldiv@counter,f
  1640  04A0  1D03               	btfss	3,2
  1641  04A1  2C6D               	goto	l1673
  1642  04A2                     l1685:	
  1643  04A2  0829               	movf	___aldiv@sign,w
  1644  04A3  1903               	btfsc	3,2
  1645  04A4  2CB0               	goto	l1689
  1646  04A5  09AA               	comf	___aldiv@quotient,f
  1647  04A6  09AB               	comf	___aldiv@quotient+1,f
  1648  04A7  09AC               	comf	___aldiv@quotient+2,f
  1649  04A8  09AD               	comf	___aldiv@quotient+3,f
  1650  04A9  0AAA               	incf	___aldiv@quotient,f
  1651  04AA  1903               	skipnz
  1652  04AB  0AAB               	incf	___aldiv@quotient+1,f
  1653  04AC  1903               	skipnz
  1654  04AD  0AAC               	incf	___aldiv@quotient+2,f
  1655  04AE  1903               	skipnz
  1656  04AF  0AAD               	incf	___aldiv@quotient+3,f
  1657  04B0                     l1689:	
  1658  04B0  082D               	movf	___aldiv@quotient+3,w
  1659  04B1  00A3               	movwf	?___aldiv+3
  1660  04B2  082C               	movf	___aldiv@quotient+2,w
  1661  04B3  00A2               	movwf	?___aldiv+2
  1662  04B4  082B               	movf	___aldiv@quotient+1,w
  1663  04B5  00A1               	movwf	?___aldiv+1
  1664  04B6  082A               	movf	___aldiv@quotient,w
  1665  04B7  00A0               	movwf	?___aldiv
  1666  04B8  0008               	return
  1667  04B9                     __end_of___aldiv:	
  1668                           
  1669                           	psect	text3
  1670  0527                     __ptext3:	
  1671 ;; *************** function _Trigger *****************
  1672 ;; Defined at:
  1673 ;;		line 31 in file "Funciones.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1687 ;;      Params:         0       0       0       0
  1688 ;;      Locals:         0       0       0       0
  1689 ;;      Temps:          2       0       0       0
  1690 ;;      Totals:         2       0       0       0
  1691 ;;Total ram usage:        2 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    1
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           
  1702                           ;psect for function _Trigger
  1703  0527                     _Trigger:	
  1704                           
  1705                           ;Funciones.c: 32: TRISB = 0b00010000;
  1706                           
  1707                           ;incstack = 0
  1708                           ; Regs used in _Trigger: [wreg]
  1709  0527  3010               	movlw	16
  1710  0528  1683               	bsf	3,5	;RP0=1, select bank1
  1711  0529  1303               	bcf	3,6	;RP1=0, select bank1
  1712  052A  0086               	movwf	6	;volatile
  1713                           
  1714                           ;Funciones.c: 33: RB0 = 1;
  1715  052B  1283               	bcf	3,5	;RP0=0, select bank0
  1716  052C  1303               	bcf	3,6	;RP1=0, select bank0
  1717  052D  1406               	bsf	6,0	;volatile
  1718                           
  1719                           ;Funciones.c: 34: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1720  052E  3006               	movlw	6
  1721  052F  00F4               	movwf	??_Trigger
  1722  0530                     u2497:	
  1723  0530  0BF4               	decfsz	??_Trigger,f
  1724  0531  2D30               	goto	u2497
  1725  0532  0000               	nop
  1726                           
  1727                           ;Funciones.c: 35: RB0 = 0;
  1728  0533  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0534  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0535  1006               	bcf	6,0	;volatile
  1731                           
  1732                           ;Funciones.c: 37: _delay((unsigned long)((50)*(8000000/4000.0)));
  1733  0536  3082               	movlw	130
  1734  0537  00F5               	movwf	??_Trigger+1
  1735  0538  30DD               	movlw	221
  1736  0539  00F4               	movwf	??_Trigger
  1737  053A                     u2507:	
  1738  053A  0BF4               	decfsz	??_Trigger,f
  1739  053B  2D3A               	goto	u2507
  1740  053C  0BF5               	decfsz	??_Trigger+1,f
  1741  053D  2D3A               	goto	u2507
  1742  053E  2D3F               	nop2
  1743                           
  1744                           ;Funciones.c: 39: TRISB = 0b00100000;
  1745  053F  3020               	movlw	32
  1746  0540  1683               	bsf	3,5	;RP0=1, select bank1
  1747  0541  1303               	bcf	3,6	;RP1=0, select bank1
  1748  0542  0086               	movwf	6	;volatile
  1749                           
  1750                           ;Funciones.c: 40: RB1 = 1;
  1751  0543  1283               	bcf	3,5	;RP0=0, select bank0
  1752  0544  1303               	bcf	3,6	;RP1=0, select bank0
  1753  0545  1486               	bsf	6,1	;volatile
  1754                           
  1755                           ;Funciones.c: 41: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1756  0546  3006               	movlw	6
  1757  0547  00F4               	movwf	??_Trigger
  1758  0548                     u2517:	
  1759  0548  0BF4               	decfsz	??_Trigger,f
  1760  0549  2D48               	goto	u2517
  1761  054A  0000               	nop
  1762                           
  1763                           ;Funciones.c: 42: RB1 = 0;
  1764  054B  1283               	bcf	3,5	;RP0=0, select bank0
  1765  054C  1303               	bcf	3,6	;RP1=0, select bank0
  1766  054D  1086               	bcf	6,1	;volatile
  1767                           
  1768                           ;Funciones.c: 44: _delay((unsigned long)((50)*(8000000/4000.0)));
  1769  054E  3082               	movlw	130
  1770  054F  00F5               	movwf	??_Trigger+1
  1771  0550  30DD               	movlw	221
  1772  0551  00F4               	movwf	??_Trigger
  1773  0552                     u2527:	
  1774  0552  0BF4               	decfsz	??_Trigger,f
  1775  0553  2D52               	goto	u2527
  1776  0554  0BF5               	decfsz	??_Trigger+1,f
  1777  0555  2D52               	goto	u2527
  1778  0556  2D57               	nop2
  1779                           
  1780                           ;Funciones.c: 46: TRISB = 0b01000000;
  1781  0557  3040               	movlw	64
  1782  0558  1683               	bsf	3,5	;RP0=1, select bank1
  1783  0559  1303               	bcf	3,6	;RP1=0, select bank1
  1784  055A  0086               	movwf	6	;volatile
  1785                           
  1786                           ;Funciones.c: 47: RB2 = 1;
  1787  055B  1283               	bcf	3,5	;RP0=0, select bank0
  1788  055C  1303               	bcf	3,6	;RP1=0, select bank0
  1789  055D  1506               	bsf	6,2	;volatile
  1790                           
  1791                           ;Funciones.c: 48: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1792  055E  3006               	movlw	6
  1793  055F  00F4               	movwf	??_Trigger
  1794  0560                     u2537:	
  1795  0560  0BF4               	decfsz	??_Trigger,f
  1796  0561  2D60               	goto	u2537
  1797  0562  0000               	nop
  1798                           
  1799                           ;Funciones.c: 49: RB2 = 0;
  1800  0563  1283               	bcf	3,5	;RP0=0, select bank0
  1801  0564  1303               	bcf	3,6	;RP1=0, select bank0
  1802  0565  1106               	bcf	6,2	;volatile
  1803                           
  1804                           ;Funciones.c: 51: _delay((unsigned long)((50)*(8000000/4000.0)));
  1805  0566  3082               	movlw	130
  1806  0567  00F5               	movwf	??_Trigger+1
  1807  0568  30DD               	movlw	221
  1808  0569  00F4               	movwf	??_Trigger
  1809  056A                     u2547:	
  1810  056A  0BF4               	decfsz	??_Trigger,f
  1811  056B  2D6A               	goto	u2547
  1812  056C  0BF5               	decfsz	??_Trigger+1,f
  1813  056D  2D6A               	goto	u2547
  1814  056E  2D6F               	nop2
  1815                           
  1816                           ;Funciones.c: 53: TRISB = 0b10000000;
  1817  056F  3080               	movlw	128
  1818  0570  1683               	bsf	3,5	;RP0=1, select bank1
  1819  0571  1303               	bcf	3,6	;RP1=0, select bank1
  1820  0572  0086               	movwf	6	;volatile
  1821                           
  1822                           ;Funciones.c: 54: RB3 = 1;
  1823  0573  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0574  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0575  1586               	bsf	6,3	;volatile
  1826                           
  1827                           ;Funciones.c: 55: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1828  0576  3006               	movlw	6
  1829  0577  00F4               	movwf	??_Trigger
  1830  0578                     u2557:	
  1831  0578  0BF4               	decfsz	??_Trigger,f
  1832  0579  2D78               	goto	u2557
  1833  057A  0000               	nop
  1834                           
  1835                           ;Funciones.c: 56: RB3= 0;
  1836  057B  1283               	bcf	3,5	;RP0=0, select bank0
  1837  057C  1303               	bcf	3,6	;RP1=0, select bank0
  1838  057D  1186               	bcf	6,3	;volatile
  1839                           
  1840                           ;Funciones.c: 58: _delay((unsigned long)((50)*(8000000/4000.0)));
  1841  057E  3082               	movlw	130
  1842  057F  00F5               	movwf	??_Trigger+1
  1843  0580  30DD               	movlw	221
  1844  0581  00F4               	movwf	??_Trigger
  1845  0582                     u2567:	
  1846  0582  0BF4               	decfsz	??_Trigger,f
  1847  0583  2D82               	goto	u2567
  1848  0584  0BF5               	decfsz	??_Trigger+1,f
  1849  0585  2D82               	goto	u2567
  1850  0586  2D87               	nop2
  1851  0587  0008               	return
  1852  0588                     __end_of_Trigger:	
  1853                           
  1854                           	psect	text4
  1855  0FE7                     __ptext4:	
  1856 ;; *************** function _ResetEcho *****************
  1857 ;; Defined at:
  1858 ;;		line 113 in file "Funciones.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1872 ;;      Params:         0       0       0       0
  1873 ;;      Locals:         0       0       0       0
  1874 ;;      Temps:          2       0       0       0
  1875 ;;      Totals:         2       0       0       0
  1876 ;;Total ram usage:        2 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    1
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_main
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function _ResetEcho
  1888  0FE7                     _ResetEcho:	
  1889                           
  1890                           ;Funciones.c: 115: TRISB = 0b00000000;
  1891                           
  1892                           ;incstack = 0
  1893                           ; Regs used in _ResetEcho: [wreg+status,2]
  1894  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  1895  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  1896  0FE9  0186               	clrf	6	;volatile
  1897                           
  1898                           ;Funciones.c: 116: _delay((unsigned long)((5)*(8000000/4000.0)));
  1899  0FEA  300D               	movlw	13
  1900  0FEB  00F5               	movwf	??_ResetEcho+1
  1901  0FEC  30FB               	movlw	251
  1902  0FED  00F4               	movwf	??_ResetEcho
  1903  0FEE                     u2577:	
  1904  0FEE  0BF4               	decfsz	??_ResetEcho,f
  1905  0FEF  2FEE               	goto	u2577
  1906  0FF0  0BF5               	decfsz	??_ResetEcho+1,f
  1907  0FF1  2FEE               	goto	u2577
  1908  0FF2  2FF3               	nop2
  1909                           
  1910                           ;Funciones.c: 117: PORTB = 0b00000000;
  1911  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0FF5  0186               	clrf	6	;volatile
  1914                           
  1915                           ;Funciones.c: 118: _delay((unsigned long)((5)*(8000000/4000.0)));
  1916  0FF6  300D               	movlw	13
  1917  0FF7  00F5               	movwf	??_ResetEcho+1
  1918  0FF8  30FB               	movlw	251
  1919  0FF9  00F4               	movwf	??_ResetEcho
  1920  0FFA                     u2587:	
  1921  0FFA  0BF4               	decfsz	??_ResetEcho,f
  1922  0FFB  2FFA               	goto	u2587
  1923  0FFC  0BF5               	decfsz	??_ResetEcho+1,f
  1924  0FFD  2FFA               	goto	u2587
  1925  0FFE  2FFF               	nop2
  1926  0FFF  0008               	return
  1927  1000                     __end_of_ResetEcho:	
  1928                           
  1929                           	psect	text5
  1930  0391                     __ptext5:	
  1931 ;; *************** function _PrintDistancias *****************
  1932 ;; Defined at:
  1933 ;;		line 88 in file "Funciones.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  dist1           1    wreg     PTR unsigned char 
  1936 ;;		 -> dist1(8), 
  1937 ;;  dist2           1    8[BANK0 ] PTR unsigned char 
  1938 ;;		 -> dist2(8), 
  1939 ;;  dist3           1    9[BANK0 ] PTR unsigned char 
  1940 ;;		 -> dist3(8), 
  1941 ;;  dist4           1   10[BANK0 ] PTR unsigned char 
  1942 ;;		 -> dist4(8), 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  dist1           1   13[BANK0 ] PTR unsigned char 
  1945 ;;		 -> dist1(8), 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1955 ;;      Params:         0       3       0       0
  1956 ;;      Locals:         0       1       0       0
  1957 ;;      Temps:          0       2       0       0
  1958 ;;      Totals:         0       6       0       0
  1959 ;;Total ram usage:        6 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    5
  1962 ;; This function calls:
  1963 ;;		_UART_Write_Text
  1964 ;;		_lcd_goto
  1965 ;;		_lcd_puts
  1966 ;; This function is called by:
  1967 ;;		_main
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           
  1972                           ;psect for function _PrintDistancias
  1973  0391                     _PrintDistancias:	
  1974                           
  1975                           ;incstack = 0
  1976                           ; Regs used in _PrintDistancias: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1977                           ;PrintDistancias@dist1 stored from wreg
  1978  0391  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0392  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0393  00AD               	movwf	PrintDistancias@dist1
  1981                           
  1982                           ;Funciones.c: 91: lcd_goto(0, 0);
  1983  0394  01A5               	clrf	lcd_goto@row
  1984  0395  3000               	movlw	0
  1985  0396  118A  27BA  118A   	fcall	_lcd_goto
  1986                           
  1987                           ;Funciones.c: 92: lcd_puts("Distancias:");
  1988  0399  300F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1989  039A  1283               	bcf	3,5	;RP0=0, select bank0
  1990  039B  1303               	bcf	3,6	;RP1=0, select bank0
  1991  039C  00A5               	movwf	lcd_puts@string
  1992  039D  3080               	movlw	128
  1993  039E  00A6               	movwf	lcd_puts@string+1
  1994  039F  118A  2799  118A   	fcall	_lcd_puts
  1995                           
  1996                           ;Funciones.c: 93: lcd_goto(12,0);
  1997  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  1998  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  1999  03A4  01A5               	clrf	lcd_goto@row
  2000  03A5  300C               	movlw	12
  2001  03A6  118A  27BA  118A   	fcall	_lcd_goto
  2002                           
  2003                           ;Funciones.c: 94: lcd_puts(dist1);
  2004  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2005  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2006  03AB  082D               	movf	PrintDistancias@dist1,w
  2007  03AC  00A5               	movwf	lcd_puts@string
  2008  03AD  3000               	movlw	0
  2009  03AE  00A6               	movwf	lcd_puts@string+1
  2010  03AF  118A  2799  118A   	fcall	_lcd_puts
  2011                           
  2012                           ;Funciones.c: 95: lcd_goto(0,1);
  2013  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2014  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2015  03B4  01A5               	clrf	lcd_goto@row
  2016  03B5  0AA5               	incf	lcd_goto@row,f
  2017  03B6  3000               	movlw	0
  2018  03B7  118A  27BA  118A   	fcall	_lcd_goto
  2019                           
  2020                           ;Funciones.c: 96: lcd_puts(dist2);
  2021  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2022  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2023  03BC  0828               	movf	PrintDistancias@dist2,w
  2024  03BD  00A5               	movwf	lcd_puts@string
  2025  03BE  3000               	movlw	0
  2026  03BF  00A6               	movwf	lcd_puts@string+1
  2027  03C0  118A  2799  118A   	fcall	_lcd_puts
  2028                           
  2029                           ;Funciones.c: 97: lcd_goto(6,1);
  2030  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2031  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2032  03C5  01A5               	clrf	lcd_goto@row
  2033  03C6  0AA5               	incf	lcd_goto@row,f
  2034  03C7  3006               	movlw	6
  2035  03C8  118A  27BA  118A   	fcall	_lcd_goto
  2036                           
  2037                           ;Funciones.c: 98: lcd_puts(dist3);
  2038  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2039  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2040  03CD  0829               	movf	PrintDistancias@dist3,w
  2041  03CE  00A5               	movwf	lcd_puts@string
  2042  03CF  3000               	movlw	0
  2043  03D0  00A6               	movwf	lcd_puts@string+1
  2044  03D1  118A  2799  118A   	fcall	_lcd_puts
  2045                           
  2046                           ;Funciones.c: 99: lcd_goto(12,1);
  2047  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2048  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2049  03D6  01A5               	clrf	lcd_goto@row
  2050  03D7  0AA5               	incf	lcd_goto@row,f
  2051  03D8  300C               	movlw	12
  2052  03D9  118A  27BA  118A   	fcall	_lcd_goto
  2053                           
  2054                           ;Funciones.c: 100: lcd_puts(dist4);
  2055  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2056  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2057  03DE  082A               	movf	PrintDistancias@dist4,w
  2058  03DF  00A5               	movwf	lcd_puts@string
  2059  03E0  3000               	movlw	0
  2060  03E1  00A6               	movwf	lcd_puts@string+1
  2061  03E2  118A  2799  118A   	fcall	_lcd_puts
  2062                           
  2063                           ;Funciones.c: 103: UART_Write_Text(dist1);
  2064  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2065  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2066  03E7  082D               	movf	PrintDistancias@dist1,w
  2067  03E8  118A  27DB  118A   	fcall	_UART_Write_Text
  2068                           
  2069                           ;Funciones.c: 104: _delay((unsigned long)((5)*(8000000/4000.0)));
  2070  03EB  300D               	movlw	13
  2071  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2072  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2073  03EE  00AC               	movwf	??_PrintDistancias+1
  2074  03EF  30FB               	movlw	251
  2075  03F0  00AB               	movwf	??_PrintDistancias
  2076  03F1                     u2597:	
  2077  03F1  0BAB               	decfsz	??_PrintDistancias,f
  2078  03F2  2BF1               	goto	u2597
  2079  03F3  0BAC               	decfsz	??_PrintDistancias+1,f
  2080  03F4  2BF1               	goto	u2597
  2081  03F5  2BF6               	nop2
  2082                           
  2083                           ;Funciones.c: 105: UART_Write_Text(dist2);
  2084  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2085  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2086  03F8  0828               	movf	PrintDistancias@dist2,w
  2087  03F9  118A  27DB  118A   	fcall	_UART_Write_Text
  2088                           
  2089                           ;Funciones.c: 106: _delay((unsigned long)((5)*(8000000/4000.0)));
  2090  03FC  300D               	movlw	13
  2091  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2092  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2093  03FF  00AC               	movwf	??_PrintDistancias+1
  2094  0400  30FB               	movlw	251
  2095  0401  00AB               	movwf	??_PrintDistancias
  2096  0402                     u2607:	
  2097  0402  0BAB               	decfsz	??_PrintDistancias,f
  2098  0403  2C02               	goto	u2607
  2099  0404  0BAC               	decfsz	??_PrintDistancias+1,f
  2100  0405  2C02               	goto	u2607
  2101  0406  2C07               	nop2
  2102                           
  2103                           ;Funciones.c: 107: UART_Write_Text(dist3);
  2104  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0408  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0409  0829               	movf	PrintDistancias@dist3,w
  2107  040A  118A  27DB  118A   	fcall	_UART_Write_Text
  2108                           
  2109                           ;Funciones.c: 108: _delay((unsigned long)((5)*(8000000/4000.0)));
  2110  040D  300D               	movlw	13
  2111  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2112  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0410  00AC               	movwf	??_PrintDistancias+1
  2114  0411  30FB               	movlw	251
  2115  0412  00AB               	movwf	??_PrintDistancias
  2116  0413                     u2617:	
  2117  0413  0BAB               	decfsz	??_PrintDistancias,f
  2118  0414  2C13               	goto	u2617
  2119  0415  0BAC               	decfsz	??_PrintDistancias+1,f
  2120  0416  2C13               	goto	u2617
  2121  0417  2C18               	nop2
  2122                           
  2123                           ;Funciones.c: 109: UART_Write_Text(dist4);
  2124  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2126  041A  082A               	movf	PrintDistancias@dist4,w
  2127  041B  118A  27DB  118A   	fcall	_UART_Write_Text
  2128                           
  2129                           ;Funciones.c: 110: _delay((unsigned long)((5)*(8000000/4000.0)));
  2130  041E  300D               	movlw	13
  2131  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2132  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2133  0421  00AC               	movwf	??_PrintDistancias+1
  2134  0422  30FB               	movlw	251
  2135  0423  00AB               	movwf	??_PrintDistancias
  2136  0424                     u2627:	
  2137  0424  0BAB               	decfsz	??_PrintDistancias,f
  2138  0425  2C24               	goto	u2627
  2139  0426  0BAC               	decfsz	??_PrintDistancias+1,f
  2140  0427  2C24               	goto	u2627
  2141  0428  2C29               	nop2
  2142  0429  0008               	return
  2143  042A                     __end_of_PrintDistancias:	
  2144                           
  2145                           	psect	text6
  2146  0799                     __ptext6:	
  2147 ;; *************** function _lcd_puts *****************
  2148 ;; Defined at:
  2149 ;;		line 178 in file "LCD.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  string          2    5[BANK0 ] PTR const unsigned char 
  2152 ;;		 -> dist4(8), dist3(8), dist2(8), dist1(8), 
  2153 ;;		 -> STR_13(12), 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2165 ;;      Params:         0       2       0       0
  2166 ;;      Locals:         0       0       0       0
  2167 ;;      Temps:          0       0       0       0
  2168 ;;      Totals:         0       2       0       0
  2169 ;;Total ram usage:        2 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    4
  2172 ;; This function calls:
  2173 ;;		_lcd_send
  2174 ;; This function is called by:
  2175 ;;		_PrintDistancias
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _lcd_puts
  2181  0799                     _lcd_puts:	
  2182  0799                     l2165:	
  2183                           ;LCD.c: 180: while (*string != '\0')
  2184                           
  2185                           ;incstack = 0
  2186                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2187                           
  2188  0799  1283               	bcf	3,5	;RP0=0, select bank0
  2189  079A  1303               	bcf	3,6	;RP1=0, select bank0
  2190  079B  0826               	movf	lcd_puts@string+1,w
  2191  079C  00FF               	movwf	127
  2192  079D  0825               	movf	lcd_puts@string,w
  2193  079E  0084               	movwf	4
  2194  079F  118A  26A8  118A   	fcall	stringtab
  2195  07A2  3A00               	xorlw	0
  2196  07A3  1903               	btfsc	3,2
  2197  07A4  0008               	return
  2198                           
  2199                           ;LCD.c: 181: lcd_send( *string++, 1 );
  2200  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  2201  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  2202  07A7  01A2               	clrf	lcd_send@rs
  2203  07A8  0AA2               	incf	lcd_send@rs,f
  2204  07A9  0826               	movf	lcd_puts@string+1,w
  2205  07AA  00FF               	movwf	127
  2206  07AB  0825               	movf	lcd_puts@string,w
  2207  07AC  0084               	movwf	4
  2208  07AD  118A  26A8  118A   	fcall	stringtab
  2209  07B0  118A  2718  118A   	fcall	_lcd_send
  2210  07B3  3001               	movlw	1
  2211  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  2212  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  2213  07B6  07A5               	addwf	lcd_puts@string,f
  2214  07B7  1803               	skipnc
  2215  07B8  0AA6               	incf	lcd_puts@string+1,f
  2216  07B9  2F99               	goto	l2165
  2217  07BA                     __end_of_lcd_puts:	
  2218                           
  2219                           	psect	text7
  2220  07BA                     __ptext7:	
  2221 ;; *************** function _lcd_goto *****************
  2222 ;; Defined at:
  2223 ;;		line 149 in file "LCD.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  col             1    wreg     unsigned char 
  2226 ;;  row             1    5[BANK0 ] unsigned char 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  col             1    7[BANK0 ] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2238 ;;      Params:         0       1       0       0
  2239 ;;      Locals:         0       1       0       0
  2240 ;;      Temps:          0       1       0       0
  2241 ;;      Totals:         0       3       0       0
  2242 ;;Total ram usage:        3 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    4
  2245 ;; This function calls:
  2246 ;;		_lcd_send
  2247 ;; This function is called by:
  2248 ;;		_PrintDistancias
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _lcd_goto
  2254  07BA                     _lcd_goto:	
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2258                           ;lcd_goto@col stored from wreg
  2259  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  2260  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  2261  07BC  00A7               	movwf	lcd_goto@col
  2262                           
  2263                           ;LCD.c: 152: if (row >= lcdrows)
  2264  07BD  086A               	movf	_lcdrows,w
  2265  07BE  0225               	subwf	lcd_goto@row,w
  2266  07BF  1C03               	skipc
  2267  07C0  2FC6               	goto	l2153
  2268                           
  2269                           ;LCD.c: 153: row = lcdrows - 1;
  2270  07C1  086A               	movf	_lcdrows,w
  2271  07C2  3EFF               	addlw	255
  2272  07C3  00A6               	movwf	??_lcd_goto
  2273  07C4  0826               	movf	??_lcd_goto,w
  2274  07C5  00A5               	movwf	lcd_goto@row
  2275  07C6                     l2153:	
  2276                           
  2277                           ;LCD.c: 154: if (col >= lcdcolumns)
  2278  07C6  0869               	movf	_lcdcolumns,w
  2279  07C7  0227               	subwf	lcd_goto@col,w
  2280  07C8  1C03               	skipc
  2281  07C9  2FCF               	goto	l2157
  2282                           
  2283                           ;LCD.c: 155: col = lcdcolumns - 1;
  2284  07CA  0869               	movf	_lcdcolumns,w
  2285  07CB  3EFF               	addlw	255
  2286  07CC  00A6               	movwf	??_lcd_goto
  2287  07CD  0826               	movf	??_lcd_goto,w
  2288  07CE  00A7               	movwf	lcd_goto@col
  2289  07CF                     l2157:	
  2290                           
  2291                           ;LCD.c: 157: lcd_send( E_SET_DDRAM_ADDR | (col + rowaddr[ row ]), 0 );
  2292  07CF  01A2               	clrf	lcd_send@rs
  2293  07D0  0825               	movf	lcd_goto@row,w
  2294  07D1  3E0B               	addlw	low ((_rowaddr-__stringbase)| (0+32768))
  2295  07D2  0084               	movwf	4
  2296  07D3  118A  26B2  118A   	fcall	stringdir
  2297  07D6  0727               	addwf	lcd_goto@col,w
  2298  07D7  3880               	iorlw	128
  2299  07D8  118A  2718         	fcall	_lcd_send
  2300  07DA  0008               	return
  2301  07DB                     __end_of_lcd_goto:	
  2302                           
  2303                           	psect	text8
  2304  07DB                     __ptext8:	
  2305 ;; *************** function _UART_Write_Text *****************
  2306 ;; Defined at:
  2307 ;;		line 48 in file "Uart.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  text            1    wreg     PTR unsigned char 
  2310 ;;		 -> dist4(8), dist3(8), dist2(8), dist1(8), 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  text            1    2[BANK0 ] PTR unsigned char 
  2313 ;;		 -> dist4(8), dist3(8), dist2(8), dist1(8), 
  2314 ;;  i               2    0[BANK0 ] int 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2324 ;;      Params:         0       0       0       0
  2325 ;;      Locals:         0       3       0       0
  2326 ;;      Temps:          1       0       0       0
  2327 ;;      Totals:         1       3       0       0
  2328 ;;Total ram usage:        4 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    2
  2331 ;; This function calls:
  2332 ;;		_UART_Write
  2333 ;; This function is called by:
  2334 ;;		_PrintDistancias
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           
  2339                           ;psect for function _UART_Write_Text
  2340  07DB                     _UART_Write_Text:	
  2341                           
  2342                           ;incstack = 0
  2343                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2344                           ;UART_Write_Text@text stored from wreg
  2345  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  2346  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  2347  07DD  00A2               	movwf	UART_Write_Text@text
  2348                           
  2349                           ;Uart.c: 50: int i;
  2350                           ;Uart.c: 51: for(i=0;text[i]!='\0';i++)
  2351  07DE  01A0               	clrf	UART_Write_Text@i
  2352  07DF  01A1               	clrf	UART_Write_Text@i+1
  2353  07E0                     l2173:	
  2354  07E0  0820               	movf	UART_Write_Text@i,w
  2355  07E1  0722               	addwf	UART_Write_Text@text,w
  2356  07E2  00F5               	movwf	??_UART_Write_Text
  2357  07E3  0875               	movf	??_UART_Write_Text,w
  2358  07E4  0084               	movwf	4
  2359  07E5  1383               	bcf	3,7	;select IRP bank0
  2360  07E6  0800               	movf	0,w
  2361  07E7  1903               	btfsc	3,2
  2362  07E8  0008               	return
  2363                           
  2364                           ;Uart.c: 52: UART_Write(text[i]);
  2365  07E9  0820               	movf	UART_Write_Text@i,w
  2366  07EA  0722               	addwf	UART_Write_Text@text,w
  2367  07EB  00F5               	movwf	??_UART_Write_Text
  2368  07EC  0875               	movf	??_UART_Write_Text,w
  2369  07ED  0084               	movwf	4
  2370  07EE  1383               	bcf	3,7	;select IRP bank0
  2371  07EF  0800               	movf	0,w
  2372  07F0  158A  27BA  118A   	fcall	_UART_Write
  2373  07F3  3001               	movlw	1
  2374  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  2375  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  2376  07F6  07A0               	addwf	UART_Write_Text@i,f
  2377  07F7  1803               	skipnc
  2378  07F8  0AA1               	incf	UART_Write_Text@i+1,f
  2379  07F9  3000               	movlw	0
  2380  07FA  07A1               	addwf	UART_Write_Text@i+1,f
  2381  07FB  2FE0               	goto	l2173
  2382  07FC                     __end_of_UART_Write_Text:	
  2383                           
  2384                           	psect	text9
  2385  0FBA                     __ptext9:	
  2386 ;; *************** function _UART_Write *****************
  2387 ;; Defined at:
  2388 ;;		line 42 in file "Uart.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  data            1    wreg     unsigned char 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  data            1    4[COMMON] unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2402 ;;      Params:         0       0       0       0
  2403 ;;      Locals:         1       0       0       0
  2404 ;;      Temps:          0       0       0       0
  2405 ;;      Totals:         1       0       0       0
  2406 ;;Total ram usage:        1 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    1
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_UART_Write_Text
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function _UART_Write
  2418  0FBA                     _UART_Write:	
  2419                           
  2420                           ;incstack = 0
  2421                           ; Regs used in _UART_Write: [wreg]
  2422                           ;UART_Write@data stored from wreg
  2423  0FBA  00F4               	movwf	UART_Write@data
  2424  0FBB                     l181:	
  2425                           ;Uart.c: 44: while(!TRMT);
  2426                           
  2427  0FBB  1683               	bsf	3,5	;RP0=1, select bank1
  2428  0FBC  1303               	bcf	3,6	;RP1=0, select bank1
  2429  0FBD  1C98               	btfss	24,1	;volatile
  2430  0FBE  2FBB               	goto	l181
  2431                           
  2432                           ;Uart.c: 45: TXREG = data;
  2433  0FBF  0874               	movf	UART_Write@data,w
  2434  0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  2435  0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  2436  0FC2  0099               	movwf	25	;volatile
  2437  0FC3  0008               	return
  2438  0FC4                     __end_of_UART_Write:	
  2439                           
  2440                           	psect	text10
  2441  0749                     __ptext10:	
  2442 ;; *************** function _Inicializaciones *****************
  2443 ;; Defined at:
  2444 ;;		line 6 in file "Funciones.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2458 ;;      Params:         0       0       0       0
  2459 ;;      Locals:         0       0       0       0
  2460 ;;      Temps:          0       2       0       0
  2461 ;;      Totals:         0       2       0       0
  2462 ;;Total ram usage:        2 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    5
  2465 ;; This function calls:
  2466 ;;		_lcd_clear
  2467 ;;		_lcd_init
  2468 ;;		_lcd_on
  2469 ;; This function is called by:
  2470 ;;		_main
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           
  2475                           ;psect for function _Inicializaciones
  2476  0749                     _Inicializaciones:	
  2477                           
  2478                           ;Funciones.c: 7: OSCCON = 0b01110101;
  2479                           
  2480                           ;incstack = 0
  2481                           ; Regs used in _Inicializaciones: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2482  0749  3075               	movlw	117
  2483  074A  1683               	bsf	3,5	;RP0=1, select bank1
  2484  074B  1303               	bcf	3,6	;RP1=0, select bank1
  2485  074C  008F               	movwf	15	;volatile
  2486                           
  2487                           ;Funciones.c: 10: TRISB = 0b11110000;
  2488  074D  30F0               	movlw	240
  2489  074E  0086               	movwf	6	;volatile
  2490                           
  2491                           ;Funciones.c: 11: PORTB = 0b00000000;
  2492  074F  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0750  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0751  0186               	clrf	6	;volatile
  2495                           
  2496                           ;Funciones.c: 12: ANSELH = 0b00000000;
  2497  0752  1683               	bsf	3,5	;RP0=1, select bank3
  2498  0753  1703               	bsf	3,6	;RP1=1, select bank3
  2499  0754  0189               	clrf	9	;volatile
  2500                           
  2501                           ;Funciones.c: 17: TMR1 = 0;
  2502  0755  1283               	bcf	3,5	;RP0=0, select bank0
  2503  0756  1303               	bcf	3,6	;RP1=0, select bank0
  2504  0757  018E               	clrf	14	;volatile
  2505  0758  018F               	clrf	15	;volatile
  2506                           
  2507                           ;Funciones.c: 18: T1CON = 0b00010000;
  2508  0759  3010               	movlw	16
  2509  075A  0090               	movwf	16	;volatile
  2510                           
  2511                           ;Funciones.c: 21: INTCON = 0b00001000;
  2512  075B  3008               	movlw	8
  2513  075C  008B               	movwf	11	;volatile
  2514                           
  2515                           ;Funciones.c: 22: IOCB = 0b11110000;
  2516  075D  30F0               	movlw	240
  2517  075E  1683               	bsf	3,5	;RP0=1, select bank1
  2518  075F  1303               	bcf	3,6	;RP1=0, select bank1
  2519  0760  0096               	movwf	22	;volatile
  2520                           
  2521                           ;Funciones.c: 23: GIE = 1;
  2522  0761  178B               	bsf	11,7	;volatile
  2523                           
  2524                           ;Funciones.c: 25: lcd_init(0, 16, 2);
  2525  0762  3010               	movlw	16
  2526  0763  1283               	bcf	3,5	;RP0=0, select bank0
  2527  0764  1303               	bcf	3,6	;RP1=0, select bank0
  2528  0765  00AB               	movwf	??_Inicializaciones
  2529  0766  082B               	movf	??_Inicializaciones,w
  2530  0767  00A5               	movwf	lcd_init@cols
  2531  0768  3002               	movlw	2
  2532  0769  00AC               	movwf	??_Inicializaciones+1
  2533  076A  082C               	movf	??_Inicializaciones+1,w
  2534  076B  00A6               	movwf	lcd_init@rows
  2535  076C  3000               	movlw	0
  2536  076D  118A  2211  118A   	fcall	_lcd_init
  2537                           
  2538                           ;Funciones.c: 26: lcd_clear();
  2539  0770  158A  27D4  118A   	fcall	_lcd_clear
  2540                           
  2541                           ;Funciones.c: 27: lcd_on();
  2542  0773  158A  27C4         	fcall	_lcd_on
  2543  0775  0008               	return
  2544  0776                     __end_of_Inicializaciones:	
  2545                           
  2546                           	psect	text11
  2547  0FC4                     __ptext11:	
  2548 ;; *************** function _lcd_on *****************
  2549 ;; Defined at:
  2550 ;;		line 91 in file "LCD.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2564 ;;      Params:         0       0       0       0
  2565 ;;      Locals:         0       0       0       0
  2566 ;;      Temps:          0       1       0       0
  2567 ;;      Totals:         0       1       0       0
  2568 ;;Total ram usage:        1 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    4
  2571 ;; This function calls:
  2572 ;;		_lcd_send
  2573 ;; This function is called by:
  2574 ;;		_Inicializaciones
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           
  2579                           ;psect for function _lcd_on
  2580  0FC4                     _lcd_on:	
  2581                           
  2582                           ;LCD.c: 93: dispctrl |= (1<<2);
  2583                           
  2584                           ;incstack = 0
  2585                           ; Regs used in _lcd_on: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2586  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2587  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2588  0FC6  1558               	bsf	_dispctrl,2
  2589                           
  2590                           ;LCD.c: 94: lcd_send( E_DISPLAY_ON_OFF_CTRL | dispctrl, 0 );
  2591  0FC7  01A2               	clrf	lcd_send@rs
  2592  0FC8  0858               	movf	_dispctrl,w
  2593  0FC9  3808               	iorlw	8
  2594  0FCA  118A  2718  158A   	fcall	_lcd_send
  2595                           
  2596                           ;LCD.c: 95: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2597  0FCD  3021               	movlw	33
  2598  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0FD0  00A5               	movwf	??_lcd_on
  2601  0FD1                     u2637:	
  2602  0FD1  0BA5               	decfsz	??_lcd_on,f
  2603  0FD2  2FD1               	goto	u2637
  2604  0FD3  0008               	return
  2605  0FD4                     __end_of_lcd_on:	
  2606                           
  2607                           	psect	text12
  2608  0211                     __ptext12:	
  2609 ;; *************** function _lcd_init *****************
  2610 ;; Defined at:
  2611 ;;		line 33 in file "LCD.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  iodata          1    wreg     PTR void 
  2614 ;;		 -> NULL(0), 
  2615 ;;  cols            1    5[BANK0 ] unsigned char 
  2616 ;;  rows            1    6[BANK0 ] unsigned char 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  iodata          1   10[BANK0 ] PTR void 
  2619 ;;		 -> NULL(0), 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      unsigned char 
  2622 ;; Registers used:
  2623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2629 ;;      Params:         0       2       0       0
  2630 ;;      Locals:         0       1       0       0
  2631 ;;      Temps:          0       3       0       0
  2632 ;;      Totals:         0       6       0       0
  2633 ;;Total ram usage:        6 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    4
  2636 ;; This function calls:
  2637 ;;		_lcd_ioinit
  2638 ;;		_lcd_iowrite4
  2639 ;;		_lcd_send
  2640 ;; This function is called by:
  2641 ;;		_Inicializaciones
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           
  2646                           ;psect for function _lcd_init
  2647  0211                     _lcd_init:	
  2648                           
  2649                           ;incstack = 0
  2650                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2651                           ;lcd_init@iodata stored from wreg
  2652  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2653  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2654  0213  00AA               	movwf	lcd_init@iodata
  2655                           
  2656                           ;LCD.c: 36: iomode = lcd_ioinit(iodata);
  2657  0214  082A               	movf	lcd_init@iodata,w
  2658  0215  118A  2776  118A   	fcall	_lcd_ioinit
  2659  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2660  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2661  021A  00A7               	movwf	??_lcd_init
  2662  021B  0827               	movf	??_lcd_init,w
  2663  021C  00EF               	movwf	_iomode
  2664                           
  2665                           ;LCD.c: 37: lcdrows = rows;
  2666  021D  0826               	movf	lcd_init@rows,w
  2667  021E  00A7               	movwf	??_lcd_init
  2668  021F  0827               	movf	??_lcd_init,w
  2669  0220  00EA               	movwf	_lcdrows
  2670                           
  2671                           ;LCD.c: 38: lcdcolumns = cols;
  2672  0221  0825               	movf	lcd_init@cols,w
  2673  0222  00A7               	movwf	??_lcd_init
  2674  0223  0827               	movf	??_lcd_init,w
  2675  0224  00E9               	movwf	_lcdcolumns
  2676                           
  2677                           ;LCD.c: 41: _delay((unsigned long)((100)*(8000000/4000.0)));
  2678  0225  3002               	movlw	2
  2679  0226  00A9               	movwf	??_lcd_init+2
  2680  0227  3004               	movlw	4
  2681  0228  00A8               	movwf	??_lcd_init+1
  2682  0229  30BA               	movlw	186
  2683  022A  00A7               	movwf	??_lcd_init
  2684  022B                     u2647:	
  2685  022B  0BA7               	decfsz	??_lcd_init,f
  2686  022C  2A2B               	goto	u2647
  2687  022D  0BA8               	decfsz	??_lcd_init+1,f
  2688  022E  2A2B               	goto	u2647
  2689  022F  0BA9               	decfsz	??_lcd_init+2,f
  2690  0230  2A2B               	goto	u2647
  2691  0231  0000               	nop
  2692                           
  2693                           ;LCD.c: 44: if (iomode == 4) {
  2694  0232  3004               	movlw	4
  2695  0233  1283               	bcf	3,5	;RP0=0, select bank0
  2696  0234  1303               	bcf	3,6	;RP1=0, select bank0
  2697  0235  066F               	xorwf	_iomode,w
  2698  0236  1D03               	btfss	3,2
  2699  0237  2A76               	goto	l2115
  2700                           
  2701                           ;LCD.c: 47: lcd_iowrite4(0x03);
  2702  0238  3003               	movlw	3
  2703  0239  118A  262C  118A   	fcall	_lcd_iowrite4
  2704                           
  2705                           ;LCD.c: 48: _delay((unsigned long)((5)*(8000000/4000.0)));
  2706  023C  300D               	movlw	13
  2707  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2708  023E  1303               	bcf	3,6	;RP1=0, select bank0
  2709  023F  00A8               	movwf	??_lcd_init+1
  2710  0240  30FB               	movlw	251
  2711  0241  00A7               	movwf	??_lcd_init
  2712  0242                     u2657:	
  2713  0242  0BA7               	decfsz	??_lcd_init,f
  2714  0243  2A42               	goto	u2657
  2715  0244  0BA8               	decfsz	??_lcd_init+1,f
  2716  0245  2A42               	goto	u2657
  2717  0246  2A47               	nop2
  2718                           
  2719                           ;LCD.c: 49: lcd_iowrite4(0x03);
  2720  0247  3003               	movlw	3
  2721  0248  118A  262C  118A   	fcall	_lcd_iowrite4
  2722                           
  2723                           ;LCD.c: 50: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2724  024B  304F               	movlw	79
  2725  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2726  024D  1303               	bcf	3,6	;RP1=0, select bank0
  2727  024E  00A7               	movwf	??_lcd_init
  2728  024F                     u2667:	
  2729  024F  0BA7               	decfsz	??_lcd_init,f
  2730  0250  2A4F               	goto	u2667
  2731  0251  2A52               	nop2	;nop
  2732                           
  2733                           ;LCD.c: 51: lcd_iowrite4(0x03);
  2734  0252  3003               	movlw	3
  2735  0253  118A  262C  118A   	fcall	_lcd_iowrite4
  2736                           
  2737                           ;LCD.c: 52: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2738  0256  304F               	movlw	79
  2739  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0258  1303               	bcf	3,6	;RP1=0, select bank0
  2741  0259  00A7               	movwf	??_lcd_init
  2742  025A                     u2677:	
  2743  025A  0BA7               	decfsz	??_lcd_init,f
  2744  025B  2A5A               	goto	u2677
  2745  025C  2A5D               	nop2	;nop
  2746                           
  2747                           ;LCD.c: 53: lcd_iowrite4(0x02);
  2748  025D  3002               	movlw	2
  2749  025E  118A  262C  118A   	fcall	_lcd_iowrite4
  2750                           
  2751                           ;LCD.c: 54: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2752  0261  304F               	movlw	79
  2753  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0263  1303               	bcf	3,6	;RP1=0, select bank0
  2755  0264  00A7               	movwf	??_lcd_init
  2756  0265                     u2687:	
  2757  0265  0BA7               	decfsz	??_lcd_init,f
  2758  0266  2A65               	goto	u2687
  2759  0267  2A68               	nop2	;nop
  2760                           
  2761                           ;LCD.c: 55: lcd_send( E_FUNCTION_SET | 0 | (1<<3) | (1<<2), 0 );
  2762  0268  1283               	bcf	3,5	;RP0=0, select bank0
  2763  0269  1303               	bcf	3,6	;RP1=0, select bank0
  2764  026A  01A2               	clrf	lcd_send@rs
  2765  026B  302C               	movlw	44
  2766  026C  118A  2718  118A   	fcall	_lcd_send
  2767                           
  2768                           ;LCD.c: 56: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2769  026F  3021               	movlw	33
  2770  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2771  0271  1303               	bcf	3,6	;RP1=0, select bank0
  2772  0272  00A7               	movwf	??_lcd_init
  2773  0273                     u2697:	
  2774  0273  0BA7               	decfsz	??_lcd_init,f
  2775  0274  2A73               	goto	u2697
  2776                           
  2777                           ;LCD.c: 57: } else if (iomode == 8) {
  2778  0275  2AB5               	goto	l2129
  2779  0276                     l2115:	
  2780  0276  3008               	movlw	8
  2781  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2782  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2783  0279  066F               	xorwf	_iomode,w
  2784  027A  1D03               	btfss	3,2
  2785  027B  2AB5               	goto	l2129
  2786                           
  2787                           ;LCD.c: 59: lcd_send( E_FUNCTION_SET, 0 );
  2788  027C  01A2               	clrf	lcd_send@rs
  2789  027D  3020               	movlw	32
  2790  027E  118A  2718  118A   	fcall	_lcd_send
  2791                           
  2792                           ;LCD.c: 60: _delay((unsigned long)((5)*(8000000/4000.0)));
  2793  0281  300D               	movlw	13
  2794  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0284  00A8               	movwf	??_lcd_init+1
  2797  0285  30FB               	movlw	251
  2798  0286  00A7               	movwf	??_lcd_init
  2799  0287                     u2707:	
  2800  0287  0BA7               	decfsz	??_lcd_init,f
  2801  0288  2A87               	goto	u2707
  2802  0289  0BA8               	decfsz	??_lcd_init+1,f
  2803  028A  2A87               	goto	u2707
  2804  028B  2A8C               	nop2
  2805                           
  2806                           ;LCD.c: 61: lcd_send( E_FUNCTION_SET, 0 );
  2807  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2808  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2809  028E  01A2               	clrf	lcd_send@rs
  2810  028F  3020               	movlw	32
  2811  0290  118A  2718  118A   	fcall	_lcd_send
  2812                           
  2813                           ;LCD.c: 62: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2814  0293  304F               	movlw	79
  2815  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0295  1303               	bcf	3,6	;RP1=0, select bank0
  2817  0296  00A7               	movwf	??_lcd_init
  2818  0297                     u2717:	
  2819  0297  0BA7               	decfsz	??_lcd_init,f
  2820  0298  2A97               	goto	u2717
  2821  0299  2A9A               	nop2	;nop
  2822                           
  2823                           ;LCD.c: 63: lcd_send( E_FUNCTION_SET, 0 );
  2824  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2825  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2826  029C  01A2               	clrf	lcd_send@rs
  2827  029D  3020               	movlw	32
  2828  029E  118A  2718  118A   	fcall	_lcd_send
  2829                           
  2830                           ;LCD.c: 64: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2831  02A1  304F               	movlw	79
  2832  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2833  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  2834  02A4  00A7               	movwf	??_lcd_init
  2835  02A5                     u2727:	
  2836  02A5  0BA7               	decfsz	??_lcd_init,f
  2837  02A6  2AA5               	goto	u2727
  2838  02A7  2AA8               	nop2	;nop
  2839                           
  2840                           ;LCD.c: 65: lcd_send( E_FUNCTION_SET | (1<<4) | (1<<3) | (1<<2), 0 );
  2841  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2842  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2843  02AA  01A2               	clrf	lcd_send@rs
  2844  02AB  303C               	movlw	60
  2845  02AC  118A  2718  118A   	fcall	_lcd_send
  2846                           
  2847                           ;LCD.c: 66: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2848  02AF  3021               	movlw	33
  2849  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2850  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2851  02B2  00A7               	movwf	??_lcd_init
  2852  02B3                     u2737:	
  2853  02B3  0BA7               	decfsz	??_lcd_init,f
  2854  02B4  2AB3               	goto	u2737
  2855  02B5                     l2129:	
  2856                           
  2857                           ;LCD.c: 67: }
  2858                           ;LCD.c: 69: lcd_send( E_DISPLAY_ON_OFF_CTRL | 0, 0 );
  2859  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2860  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  2861  02B7  01A2               	clrf	lcd_send@rs
  2862  02B8  3008               	movlw	8
  2863  02B9  118A  2718  118A   	fcall	_lcd_send
  2864                           
  2865                           ;LCD.c: 70: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2866  02BC  3021               	movlw	33
  2867  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2868  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2869  02BF  00A7               	movwf	??_lcd_init
  2870  02C0                     u2747:	
  2871  02C0  0BA7               	decfsz	??_lcd_init,f
  2872  02C1  2AC0               	goto	u2747
  2873                           
  2874                           ;LCD.c: 71: lcd_send( E_CLEAR_DISPLAY, 0 );
  2875  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2876  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2877  02C4  01A2               	clrf	lcd_send@rs
  2878  02C5  3001               	movlw	1
  2879  02C6  118A  2718  118A   	fcall	_lcd_send
  2880                           
  2881                           ;LCD.c: 72: _delay((unsigned long)((2)*(8000000/4000.0)));
  2882  02C9  3006               	movlw	6
  2883  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2884  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2885  02CC  00A8               	movwf	??_lcd_init+1
  2886  02CD  3030               	movlw	48
  2887  02CE  00A7               	movwf	??_lcd_init
  2888  02CF                     u2757:	
  2889  02CF  0BA7               	decfsz	??_lcd_init,f
  2890  02D0  2ACF               	goto	u2757
  2891  02D1  0BA8               	decfsz	??_lcd_init+1,f
  2892  02D2  2ACF               	goto	u2757
  2893  02D3  0000               	nop
  2894                           
  2895                           ;LCD.c: 73: lcd_send( E_ENTRY_MODE_SET | 0 | (1<<1), 0 );
  2896  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2897  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2898  02D6  01A2               	clrf	lcd_send@rs
  2899  02D7  3006               	movlw	6
  2900  02D8  118A  2718  118A   	fcall	_lcd_send
  2901                           
  2902                           ;LCD.c: 74: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2903  02DB  3021               	movlw	33
  2904  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2905  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2906  02DE  00A7               	movwf	??_lcd_init
  2907  02DF                     u2767:	
  2908  02DF  0BA7               	decfsz	??_lcd_init,f
  2909  02E0  2ADF               	goto	u2767
  2910  02E1  0008               	return
  2911  02E2                     __end_of_lcd_init:	
  2912                           ;LCD.c: 76: return 1;
  2913                           ;	Return value of _lcd_init is never used
  2914                           
  2915                           
  2916                           	psect	text13
  2917  0776                     __ptext13:	
  2918 ;; *************** function _lcd_ioinit *****************
  2919 ;; Defined at:
  2920 ;;		line 48 in file "LCD-PIC16.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  iodata          1    wreg     PTR void 
  2923 ;;		 -> NULL(0), 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  iodata          1    0[BANK0 ] PTR void 
  2926 ;;		 -> NULL(0), 
  2927 ;;  i               1    1[BANK0 ] unsigned char 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      unsigned char 
  2930 ;; Registers used:
  2931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2937 ;;      Params:         0       0       0       0
  2938 ;;      Locals:         0       2       0       0
  2939 ;;      Temps:          1       0       0       0
  2940 ;;      Totals:         1       2       0       0
  2941 ;;Total ram usage:        3 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; Hardware stack levels required when called:    2
  2944 ;; This function calls:
  2945 ;;		_lcd_ioset
  2946 ;; This function is called by:
  2947 ;;		_lcd_init
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           
  2952                           ;psect for function _lcd_ioinit
  2953  0776                     _lcd_ioinit:	
  2954                           
  2955                           ;LCD-PIC16.c: 50: uint8_t i = 0;
  2956                           
  2957                           ;incstack = 0
  2958                           ; Regs used in _lcd_ioinit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2959  0776  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0777  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0778  01A1               	clrf	lcd_ioinit@i
  2962                           
  2963                           ;LCD-PIC16.c: 53: TRISC5 = 0;
  2964  0779  1683               	bsf	3,5	;RP0=1, select bank1
  2965  077A  1303               	bcf	3,6	;RP1=0, select bank1
  2966  077B  1287               	bcf	7,5	;volatile
  2967                           
  2968                           ;LCD-PIC16.c: 54: TRISC4 = 0;
  2969  077C  1207               	bcf	7,4	;volatile
  2970                           
  2971                           ;LCD-PIC16.c: 60: TRISC0 = 0;
  2972  077D  1007               	bcf	7,0	;volatile
  2973                           
  2974                           ;LCD-PIC16.c: 61: TRISC1 = 0;
  2975  077E  1087               	bcf	7,1	;volatile
  2976                           
  2977                           ;LCD-PIC16.c: 62: TRISC2 = 0;
  2978  077F  1107               	bcf	7,2	;volatile
  2979                           
  2980                           ;LCD-PIC16.c: 63: TRISC3 = 0;
  2981  0780  1187               	bcf	7,3	;volatile
  2982                           
  2983                           ;LCD-PIC16.c: 75: for (i = 0; i < 11; i++)
  2984  0781  1283               	bcf	3,5	;RP0=0, select bank0
  2985  0782  1303               	bcf	3,6	;RP1=0, select bank0
  2986  0783  01A1               	clrf	lcd_ioinit@i
  2987  0784  300B               	movlw	11
  2988  0785  0221               	subwf	lcd_ioinit@i,w
  2989  0786  1803               	btfsc	3,0
  2990  0787  2F97               	goto	l2023
  2991  0788                     l2017:	
  2992                           
  2993                           ;LCD-PIC16.c: 76: lcd_ioset(i, 0);
  2994  0788  01F4               	clrf	lcd_ioset@out
  2995  0789  0821               	movf	lcd_ioinit@i,w
  2996  078A  118A  2588  118A   	fcall	_lcd_ioset
  2997  078D  3001               	movlw	1
  2998  078E  00F6               	movwf	??_lcd_ioinit
  2999  078F  0876               	movf	??_lcd_ioinit,w
  3000  0790  1283               	bcf	3,5	;RP0=0, select bank0
  3001  0791  1303               	bcf	3,6	;RP1=0, select bank0
  3002  0792  07A1               	addwf	lcd_ioinit@i,f
  3003  0793  300B               	movlw	11
  3004  0794  0221               	subwf	lcd_ioinit@i,w
  3005  0795  1C03               	skipc
  3006  0796  2F88               	goto	l2017
  3007  0797                     l2023:	
  3008                           
  3009                           ;LCD-PIC16.c: 80: return 4;
  3010  0797  3004               	movlw	4
  3011  0798  0008               	return
  3012  0799                     __end_of_lcd_ioinit:	
  3013                           
  3014                           	psect	text14
  3015  0FD4                     __ptext14:	
  3016 ;; *************** function _lcd_clear *****************
  3017 ;; Defined at:
  3018 ;;		line 79 in file "LCD.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3032 ;;      Params:         0       0       0       0
  3033 ;;      Locals:         0       0       0       0
  3034 ;;      Temps:          0       2       0       0
  3035 ;;      Totals:         0       2       0       0
  3036 ;;Total ram usage:        2 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    4
  3039 ;; This function calls:
  3040 ;;		_lcd_send
  3041 ;; This function is called by:
  3042 ;;		_Inicializaciones
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function _lcd_clear
  3048  0FD4                     _lcd_clear:	
  3049                           
  3050                           ;LCD.c: 81: lcd_send( E_CLEAR_DISPLAY, 0 );
  3051                           
  3052                           ;incstack = 0
  3053                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3054  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0FD6  01A2               	clrf	lcd_send@rs
  3057  0FD7  3001               	movlw	1
  3058  0FD8  118A  2718  158A   	fcall	_lcd_send
  3059                           
  3060                           ;LCD.c: 82: _delay((unsigned long)((2)*(8000000/4000.0)));
  3061  0FDB  3006               	movlw	6
  3062  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  3064  0FDE  00A6               	movwf	??_lcd_clear+1
  3065  0FDF  3030               	movlw	48
  3066  0FE0  00A5               	movwf	??_lcd_clear
  3067  0FE1                     u2777:	
  3068  0FE1  0BA5               	decfsz	??_lcd_clear,f
  3069  0FE2  2FE1               	goto	u2777
  3070  0FE3  0BA6               	decfsz	??_lcd_clear+1,f
  3071  0FE4  2FE1               	goto	u2777
  3072  0FE5  0000               	nop
  3073  0FE6  0008               	return
  3074  0FE7                     __end_of_lcd_clear:	
  3075                           
  3076                           	psect	text15
  3077  0718                     __ptext15:	
  3078 ;; *************** function _lcd_send *****************
  3079 ;; Defined at:
  3080 ;;		line 160 in file "LCD.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  data            1    wreg     unsigned char 
  3083 ;;  rs              1    2[BANK0 ] unsigned char 
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;  data            1    4[BANK0 ] unsigned char 
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3095 ;;      Params:         0       1       0       0
  3096 ;;      Locals:         0       1       0       0
  3097 ;;      Temps:          0       1       0       0
  3098 ;;      Totals:         0       3       0       0
  3099 ;;Total ram usage:        3 bytes
  3100 ;; Hardware stack levels used:    1
  3101 ;; Hardware stack levels required when called:    3
  3102 ;; This function calls:
  3103 ;;		_lcd_ioset
  3104 ;;		_lcd_iowrite4
  3105 ;;		_lcd_iowrite8
  3106 ;; This function is called by:
  3107 ;;		_lcd_init
  3108 ;;		_lcd_clear
  3109 ;;		_lcd_on
  3110 ;;		_lcd_goto
  3111 ;;		_lcd_puts
  3112 ;;		_lcd_home
  3113 ;;		_lcd_off
  3114 ;;		_lcd_cursor
  3115 ;;		_lcd_cursor_left
  3116 ;;		_lcd_cursor_right
  3117 ;;		_lcd_scroll_left
  3118 ;;		_lcd_scroll_right
  3119 ;;		_lcd_autoscroll_on
  3120 ;;		_lcd_autoscroll_off
  3121 ;;		_lcd_create_char
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           
  3126                           ;psect for function _lcd_send
  3127  0718                     _lcd_send:	
  3128                           
  3129                           ;incstack = 0
  3130                           ; Regs used in _lcd_send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3131                           ;lcd_send@data stored from wreg
  3132  0718  1283               	bcf	3,5	;RP0=0, select bank0
  3133  0719  1303               	bcf	3,6	;RP1=0, select bank0
  3134  071A  00A4               	movwf	lcd_send@data
  3135                           
  3136                           ;LCD.c: 163: if (rs)
  3137  071B  0822               	movf	lcd_send@rs,w
  3138  071C  1903               	btfsc	3,2
  3139  071D  2F21               	goto	l2031
  3140                           
  3141                           ;LCD.c: 164: lcd_ioset(E_RS_PIN,1);
  3142  071E  01F4               	clrf	lcd_ioset@out
  3143  071F  0AF4               	incf	lcd_ioset@out,f
  3144  0720  2F22               	goto	L1
  3145  0721                     l2031:	
  3146                           
  3147                           ;LCD.c: 165: else
  3148                           ;LCD.c: 166: lcd_ioset(E_RS_PIN,0);
  3149  0721  01F4               	clrf	lcd_ioset@out
  3150  0722                     L1:	
  3151  0722  3009               	movlw	9
  3152  0723  118A  2588  118A   	fcall	_lcd_ioset
  3153                           
  3154                           ;LCD.c: 168: lcd_ioset(E_RW_PIN,0);
  3155  0726  01F4               	clrf	lcd_ioset@out
  3156  0727  300A               	movlw	10
  3157  0728  118A  2588  118A   	fcall	_lcd_ioset
  3158                           
  3159                           ;LCD.c: 170: if (iomode == 4) {
  3160  072B  3004               	movlw	4
  3161  072C  1283               	bcf	3,5	;RP0=0, select bank0
  3162  072D  1303               	bcf	3,6	;RP1=0, select bank0
  3163  072E  066F               	xorwf	_iomode,w
  3164  072F  1D03               	btfss	3,2
  3165  0730  2F43               	goto	l2037
  3166                           
  3167                           ;LCD.c: 171: lcd_iowrite4(data >> 4);
  3168  0731  0824               	movf	lcd_send@data,w
  3169  0732  00A3               	movwf	??_lcd_send
  3170  0733  3004               	movlw	4
  3171  0734                     u2115:	
  3172  0734  1003               	clrc
  3173  0735  0CA3               	rrf	??_lcd_send,f
  3174  0736  3EFF               	addlw	-1
  3175  0737  1D03               	skipz
  3176  0738  2F34               	goto	u2115
  3177  0739  0823               	movf	??_lcd_send,w
  3178  073A  118A  262C  118A   	fcall	_lcd_iowrite4
  3179                           
  3180                           ;LCD.c: 172: lcd_iowrite4(data);
  3181  073D  1283               	bcf	3,5	;RP0=0, select bank0
  3182  073E  1303               	bcf	3,6	;RP1=0, select bank0
  3183  073F  0824               	movf	lcd_send@data,w
  3184  0740  118A  262C         	fcall	_lcd_iowrite4
  3185                           
  3186                           ;LCD.c: 173: } else {
  3187  0742  0008               	return
  3188  0743                     l2037:	
  3189                           
  3190                           ;LCD.c: 174: lcd_iowrite8(data);
  3191  0743  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0744  1303               	bcf	3,6	;RP1=0, select bank0
  3193  0745  0824               	movf	lcd_send@data,w
  3194  0746  118A  27FC         	fcall	_lcd_iowrite8
  3195  0748  0008               	return
  3196  0749                     __end_of_lcd_send:	
  3197                           
  3198                           	psect	text16
  3199  07FC                     __ptext16:	
  3200 ;; *************** function _lcd_iowrite8 *****************
  3201 ;; Defined at:
  3202 ;;		line 143 in file "LCD-PIC16.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  data            1    wreg     unsigned char 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  data            1    0[COMMON] unsigned char 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3216 ;;      Params:         0       0       0       0
  3217 ;;      Locals:         0       0       0       0
  3218 ;;      Temps:          0       0       0       0
  3219 ;;      Totals:         0       0       0       0
  3220 ;;Total ram usage:        0 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    1
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_lcd_send
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           
  3231                           ;psect for function _lcd_iowrite8
  3232  07FC                     _lcd_iowrite8:	
  3233                           
  3234                           ;incstack = 0
  3235                           ; Regs used in _lcd_iowrite8: [wreg]
  3236  07FC  0008               	return
  3237  07FD                     __end_of_lcd_iowrite8:	
  3238                           
  3239                           	psect	text17
  3240  062C                     __ptext17:	
  3241 ;; *************** function _lcd_iowrite4 *****************
  3242 ;; Defined at:
  3243 ;;		line 129 in file "LCD-PIC16.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  data            1    wreg     unsigned char 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  data            1    0[BANK0 ] unsigned char 
  3248 ;;  i               1    1[BANK0 ] unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3258 ;;      Params:         0       0       0       0
  3259 ;;      Locals:         0       2       0       0
  3260 ;;      Temps:          2       0       0       0
  3261 ;;      Totals:         2       2       0       0
  3262 ;;Total ram usage:        4 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    2
  3265 ;; This function calls:
  3266 ;;		_lcd_ioset
  3267 ;; This function is called by:
  3268 ;;		_lcd_init
  3269 ;;		_lcd_send
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           
  3274                           ;psect for function _lcd_iowrite4
  3275  062C                     _lcd_iowrite4:	
  3276                           
  3277                           ;incstack = 0
  3278                           ; Regs used in _lcd_iowrite4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3279                           ;lcd_iowrite4@data stored from wreg
  3280  062C  1283               	bcf	3,5	;RP0=0, select bank0
  3281  062D  1303               	bcf	3,6	;RP1=0, select bank0
  3282  062E  00A0               	movwf	lcd_iowrite4@data
  3283                           
  3284                           ;LCD-PIC16.c: 132: uint8_t i;
  3285                           ;LCD-PIC16.c: 134: for (i = 4; i < 8; i++)
  3286  062F  3004               	movlw	4
  3287  0630  00F6               	movwf	??_lcd_iowrite4
  3288  0631  0876               	movf	??_lcd_iowrite4,w
  3289  0632  00A1               	movwf	lcd_iowrite4@i
  3290  0633  3008               	movlw	8
  3291  0634  0221               	subwf	lcd_iowrite4@i,w
  3292  0635  1803               	btfsc	3,0
  3293  0636  2E5A               	goto	l1993
  3294  0637                     l1987:	
  3295                           
  3296                           ;LCD-PIC16.c: 135: lcd_ioset(i, (data & (1 << i - 4)) ? 1 : 0);
  3297  0637  3001               	movlw	1
  3298  0638  00F6               	movwf	??_lcd_iowrite4
  3299  0639  0821               	movf	lcd_iowrite4@i,w
  3300  063A  3EFC               	addlw	-4
  3301  063B  3E01               	addlw	1
  3302  063C  2E3F               	goto	u2034
  3303  063D                     u2035:	
  3304  063D  1003               	clrc
  3305  063E  0DF6               	rlf	??_lcd_iowrite4,f
  3306  063F                     u2034:	
  3307  063F  3EFF               	addlw	-1
  3308  0640  1D03               	skipz
  3309  0641  2E3D               	goto	u2035
  3310  0642  0876               	movf	??_lcd_iowrite4,w
  3311  0643  0520               	andwf	lcd_iowrite4@data,w
  3312  0644  1903               	btfsc	3,2
  3313  0645  2E48               	goto	u2040
  3314  0646  3001               	movlw	1
  3315  0647  2E49               	goto	u2050
  3316  0648                     u2040:	
  3317  0648  3000               	movlw	0
  3318  0649                     u2050:	
  3319  0649  00F7               	movwf	??_lcd_iowrite4+1
  3320  064A  0877               	movf	??_lcd_iowrite4+1,w
  3321  064B  00F4               	movwf	lcd_ioset@out
  3322  064C  0821               	movf	lcd_iowrite4@i,w
  3323  064D  118A  2588  118A   	fcall	_lcd_ioset
  3324  0650  3001               	movlw	1
  3325  0651  00F6               	movwf	??_lcd_iowrite4
  3326  0652  0876               	movf	??_lcd_iowrite4,w
  3327  0653  1283               	bcf	3,5	;RP0=0, select bank0
  3328  0654  1303               	bcf	3,6	;RP1=0, select bank0
  3329  0655  07A1               	addwf	lcd_iowrite4@i,f
  3330  0656  3008               	movlw	8
  3331  0657  0221               	subwf	lcd_iowrite4@i,w
  3332  0658  1C03               	skipc
  3333  0659  2E37               	goto	l1987
  3334  065A                     l1993:	
  3335                           
  3336                           ;LCD-PIC16.c: 137: lcd_ioset(E_EN_PIN,1);
  3337  065A  01F4               	clrf	lcd_ioset@out
  3338  065B  0AF4               	incf	lcd_ioset@out,f
  3339  065C  3008               	movlw	8
  3340  065D  118A  2588  118A   	fcall	_lcd_ioset
  3341                           
  3342                           ;LCD-PIC16.c: 138: _delay((unsigned long)((10)*(8000000/4000000.0)));
  3343  0660  3006               	movlw	6
  3344  0661  00F6               	movwf	??_lcd_iowrite4
  3345  0662                     u2787:	
  3346  0662  0BF6               	decfsz	??_lcd_iowrite4,f
  3347  0663  2E62               	goto	u2787
  3348  0664  0000               	nop
  3349                           
  3350                           ;LCD-PIC16.c: 139: lcd_ioset(E_EN_PIN,0);
  3351  0665  01F4               	clrf	lcd_ioset@out
  3352  0666  3008               	movlw	8
  3353  0667  118A  2588         	fcall	_lcd_ioset
  3354  0669  0008               	return
  3355  066A                     __end_of_lcd_iowrite4:	
  3356                           
  3357                           	psect	text18
  3358  0588                     __ptext18:	
  3359 ;; *************** function _lcd_ioset *****************
  3360 ;; Defined at:
  3361 ;;		line 86 in file "LCD-PIC16.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  pin             1    wreg     enum E42
  3364 ;;  out             1    4[COMMON] unsigned char 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  pin             1    5[COMMON] enum E42
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3376 ;;      Params:         1       0       0       0
  3377 ;;      Locals:         1       0       0       0
  3378 ;;      Temps:          0       0       0       0
  3379 ;;      Totals:         2       0       0       0
  3380 ;;Total ram usage:        2 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    1
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_lcd_ioinit
  3387 ;;		_lcd_iowrite4
  3388 ;;		_lcd_send
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           
  3393                           ;psect for function _lcd_ioset
  3394  0588                     _lcd_ioset:	
  3395                           
  3396                           ;incstack = 0
  3397                           ; Regs used in _lcd_ioset: [wreg-fsr0h+status,2+status,0]
  3398                           ;lcd_ioset@pin stored from wreg
  3399  0588  00F5               	movwf	lcd_ioset@pin
  3400                           
  3401                           ;LCD-PIC16.c: 88: switch (pin) {
  3402  0589  2DC6               	goto	l1981
  3403  058A                     l37:	
  3404                           ;LCD-PIC16.c: 103: case E_D4_PIN:
  3405                           
  3406                           
  3407                           ;LCD-PIC16.c: 104: RC0 = out;
  3408  058A  1C74               	btfss	lcd_ioset@out,0
  3409  058B  2D90               	goto	u1900
  3410  058C  1283               	bcf	3,5	;RP0=0, select bank0
  3411  058D  1303               	bcf	3,6	;RP1=0, select bank0
  3412  058E  1407               	bsf	7,0	;volatile
  3413  058F  0008               	return
  3414  0590                     u1900:	
  3415  0590  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0591  1303               	bcf	3,6	;RP1=0, select bank0
  3417  0592  1007               	bcf	7,0	;volatile
  3418                           
  3419                           ;LCD-PIC16.c: 105: break;
  3420  0593  0008               	return
  3421  0594                     l39:	
  3422                           ;LCD-PIC16.c: 106: case E_D5_PIN:
  3423                           
  3424                           
  3425                           ;LCD-PIC16.c: 107: RC1 = out;
  3426  0594  1C74               	btfss	lcd_ioset@out,0
  3427  0595  2D9A               	goto	u1920
  3428  0596  1283               	bcf	3,5	;RP0=0, select bank0
  3429  0597  1303               	bcf	3,6	;RP1=0, select bank0
  3430  0598  1487               	bsf	7,1	;volatile
  3431  0599  0008               	return
  3432  059A                     u1920:	
  3433  059A  1283               	bcf	3,5	;RP0=0, select bank0
  3434  059B  1303               	bcf	3,6	;RP1=0, select bank0
  3435  059C  1087               	bcf	7,1	;volatile
  3436                           
  3437                           ;LCD-PIC16.c: 108: break;
  3438  059D  0008               	return
  3439  059E                     l40:	
  3440                           ;LCD-PIC16.c: 109: case E_D6_PIN:
  3441                           
  3442                           
  3443                           ;LCD-PIC16.c: 110: RC2 = out;
  3444  059E  1C74               	btfss	lcd_ioset@out,0
  3445  059F  2DA4               	goto	u1940
  3446  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3447  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  3448  05A2  1507               	bsf	7,2	;volatile
  3449  05A3  0008               	return
  3450  05A4                     u1940:	
  3451  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  3452  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  3453  05A6  1107               	bcf	7,2	;volatile
  3454                           
  3455                           ;LCD-PIC16.c: 111: break;
  3456  05A7  0008               	return
  3457  05A8                     l41:	
  3458                           ;LCD-PIC16.c: 112: case E_D7_PIN:
  3459                           
  3460                           
  3461                           ;LCD-PIC16.c: 113: RC3 = out;
  3462  05A8  1C74               	btfss	lcd_ioset@out,0
  3463  05A9  2DAE               	goto	u1960
  3464  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  3465  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  3466  05AC  1587               	bsf	7,3	;volatile
  3467  05AD  0008               	return
  3468  05AE                     u1960:	
  3469  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  3470  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  3471  05B0  1187               	bcf	7,3	;volatile
  3472                           
  3473                           ;LCD-PIC16.c: 114: break;
  3474  05B1  0008               	return
  3475  05B2                     l42:	
  3476                           ;LCD-PIC16.c: 115: case E_RS_PIN:
  3477                           
  3478                           
  3479                           ;LCD-PIC16.c: 116: RC4 = out;
  3480  05B2  1C74               	btfss	lcd_ioset@out,0
  3481  05B3  2DB8               	goto	u1980
  3482  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  3483  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  3484  05B6  1607               	bsf	7,4	;volatile
  3485  05B7  0008               	return
  3486  05B8                     u1980:	
  3487  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3488  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3489  05BA  1207               	bcf	7,4	;volatile
  3490                           
  3491                           ;LCD-PIC16.c: 117: break;
  3492  05BB  0008               	return
  3493  05BC                     l43:	
  3494                           ;LCD-PIC16.c: 118: case E_EN_PIN:
  3495                           
  3496                           
  3497                           ;LCD-PIC16.c: 119: RC5 = out;
  3498  05BC  1C74               	btfss	lcd_ioset@out,0
  3499  05BD  2DC2               	goto	u2000
  3500  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  3501  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  3502  05C0  1687               	bsf	7,5	;volatile
  3503  05C1  0008               	return
  3504  05C2                     u2000:	
  3505  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  3506  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  3507  05C4  1287               	bcf	7,5	;volatile
  3508                           
  3509                           ;LCD-PIC16.c: 126: }
  3510                           
  3511                           ;LCD-PIC16.c: 125: break;
  3512                           
  3513                           ;LCD-PIC16.c: 121: case E_RW_PIN:
  3514                           
  3515                           ;LCD-PIC16.c: 120: break;
  3516  05C5  0008               	return
  3517  05C6                     l1981:	
  3518  05C6  0875               	movf	lcd_ioset@pin,w
  3519                           
  3520                           ; Switch size 1, requested type "space"
  3521                           ; Number of cases is 7, Range of values is 4 to 10
  3522                           ; switch strategies available:
  3523                           ; Name         Instructions Cycles
  3524                           ; simple_byte           22    12 (average)
  3525                           ; direct_byte           24    10 (fixed)
  3526                           ; jumptable            263     9 (fixed)
  3527                           ;	Chosen strategy is simple_byte
  3528  05C7  3A04               	xorlw	4	; case 4
  3529  05C8  1903               	skipnz
  3530  05C9  2D8A               	goto	l37
  3531  05CA  3A01               	xorlw	1	; case 5
  3532  05CB  1903               	skipnz
  3533  05CC  2D94               	goto	l39
  3534  05CD  3A03               	xorlw	3	; case 6
  3535  05CE  1903               	skipnz
  3536  05CF  2D9E               	goto	l40
  3537  05D0  3A01               	xorlw	1	; case 7
  3538  05D1  1903               	skipnz
  3539  05D2  2DA8               	goto	l41
  3540  05D3  3A0F               	xorlw	15	; case 8
  3541  05D4  1903               	skipnz
  3542  05D5  2DBC               	goto	l43
  3543  05D6  3A01               	xorlw	1	; case 9
  3544  05D7  1903               	skipnz
  3545  05D8  2DB2               	goto	l42
  3546  05D9  3A03               	xorlw	3	; case 10
  3547  05DA  1903               	skipnz
  3548  05DB  2DDD               	goto	l45
  3549  05DC  2DDD               	goto	l45
  3550  05DD                     l45:	
  3551  05DD  0008               	return
  3552  05DE                     __end_of_lcd_ioset:	
  3553                           
  3554                           	psect	text19
  3555  003C                     __ptext19:	
  3556 ;; *************** function _CalcularDistancia *****************
  3557 ;; Defined at:
  3558 ;;		line 61 in file "Funciones.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  t0              2   23[BANK0 ] unsigned int 
  3561 ;;  t1              2   25[BANK0 ] unsigned int 
  3562 ;;  t2              2   27[BANK0 ] unsigned int 
  3563 ;;  t3              2   29[BANK0 ] unsigned int 
  3564 ;;  distancia1      1   31[BANK0 ] PTR PTR unsigned char 
  3565 ;;		 -> distancia1(1), 
  3566 ;;  distancia2      1   32[BANK0 ] PTR PTR unsigned char 
  3567 ;;		 -> distancia2(1), 
  3568 ;;  distancia3      1   33[BANK0 ] PTR PTR unsigned char 
  3569 ;;		 -> distancia3(1), 
  3570 ;;  distancia4      1   34[BANK0 ] PTR PTR unsigned char 
  3571 ;;		 -> distancia4(1), 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  d3              2   42[BANK0 ] unsigned int 
  3574 ;;  d2              2   40[BANK0 ] unsigned int 
  3575 ;;  d1              2   38[BANK0 ] unsigned int 
  3576 ;;  d0              2   36[BANK0 ] unsigned int 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3586 ;;      Params:         0      12       0       0
  3587 ;;      Locals:         0       8       0       0
  3588 ;;      Temps:          0       1       0       0
  3589 ;;      Totals:         0      21       0       0
  3590 ;;Total ram usage:       21 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    3
  3593 ;; This function calls:
  3594 ;;		___lwdiv
  3595 ;;		_sprintf
  3596 ;; This function is called by:
  3597 ;;		_main
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           
  3602                           ;psect for function _CalcularDistancia
  3603  003C                     _CalcularDistancia:	
  3604                           
  3605                           ;Funciones.c: 64: unsigned int d0,d1,d2,d3;
  3606                           ;Funciones.c: 66: d0 = ( t0 ) / 58;
  3607                           
  3608                           ;incstack = 0
  3609                           ; Regs used in _CalcularDistancia: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3610  003C  303A               	movlw	58
  3611  003D  00F4               	movwf	___lwdiv@divisor
  3612  003E  3000               	movlw	0
  3613  003F  00F5               	movwf	___lwdiv@divisor+1
  3614  0040  1283               	bcf	3,5	;RP0=0, select bank0
  3615  0041  1303               	bcf	3,6	;RP1=0, select bank0
  3616  0042  0838               	movf	CalcularDistancia@t0+1,w
  3617  0043  00F7               	movwf	___lwdiv@dividend+1
  3618  0044  0837               	movf	CalcularDistancia@t0,w
  3619  0045  00F6               	movwf	___lwdiv@dividend
  3620  0046  118A  266A  118A   	fcall	___lwdiv
  3621  0049  0875               	movf	?___lwdiv+1,w
  3622  004A  1283               	bcf	3,5	;RP0=0, select bank0
  3623  004B  1303               	bcf	3,6	;RP1=0, select bank0
  3624  004C  00C5               	movwf	CalcularDistancia@d0+1
  3625  004D  0874               	movf	?___lwdiv,w
  3626  004E  00C4               	movwf	CalcularDistancia@d0
  3627                           
  3628                           ;Funciones.c: 67: d1 = ( t1 ) / 58;
  3629  004F  303A               	movlw	58
  3630  0050  00F4               	movwf	___lwdiv@divisor
  3631  0051  3000               	movlw	0
  3632  0052  00F5               	movwf	___lwdiv@divisor+1
  3633  0053  083A               	movf	CalcularDistancia@t1+1,w
  3634  0054  00F7               	movwf	___lwdiv@dividend+1
  3635  0055  0839               	movf	CalcularDistancia@t1,w
  3636  0056  00F6               	movwf	___lwdiv@dividend
  3637  0057  118A  266A  118A   	fcall	___lwdiv
  3638  005A  0875               	movf	?___lwdiv+1,w
  3639  005B  1283               	bcf	3,5	;RP0=0, select bank0
  3640  005C  1303               	bcf	3,6	;RP1=0, select bank0
  3641  005D  00C7               	movwf	CalcularDistancia@d1+1
  3642  005E  0874               	movf	?___lwdiv,w
  3643  005F  00C6               	movwf	CalcularDistancia@d1
  3644                           
  3645                           ;Funciones.c: 68: d2 = ( t2 ) / 58;
  3646  0060  303A               	movlw	58
  3647  0061  00F4               	movwf	___lwdiv@divisor
  3648  0062  3000               	movlw	0
  3649  0063  00F5               	movwf	___lwdiv@divisor+1
  3650  0064  083C               	movf	CalcularDistancia@t2+1,w
  3651  0065  00F7               	movwf	___lwdiv@dividend+1
  3652  0066  083B               	movf	CalcularDistancia@t2,w
  3653  0067  00F6               	movwf	___lwdiv@dividend
  3654  0068  118A  266A  118A   	fcall	___lwdiv
  3655  006B  0875               	movf	?___lwdiv+1,w
  3656  006C  1283               	bcf	3,5	;RP0=0, select bank0
  3657  006D  1303               	bcf	3,6	;RP1=0, select bank0
  3658  006E  00C9               	movwf	CalcularDistancia@d2+1
  3659  006F  0874               	movf	?___lwdiv,w
  3660  0070  00C8               	movwf	CalcularDistancia@d2
  3661                           
  3662                           ;Funciones.c: 69: d3 = ( t3 ) / 58;
  3663  0071  303A               	movlw	58
  3664  0072  00F4               	movwf	___lwdiv@divisor
  3665  0073  3000               	movlw	0
  3666  0074  00F5               	movwf	___lwdiv@divisor+1
  3667  0075  083E               	movf	CalcularDistancia@t3+1,w
  3668  0076  00F7               	movwf	___lwdiv@dividend+1
  3669  0077  083D               	movf	CalcularDistancia@t3,w
  3670  0078  00F6               	movwf	___lwdiv@dividend
  3671  0079  118A  266A  118A   	fcall	___lwdiv
  3672  007C  0875               	movf	?___lwdiv+1,w
  3673  007D  1283               	bcf	3,5	;RP0=0, select bank0
  3674  007E  1303               	bcf	3,6	;RP1=0, select bank0
  3675  007F  00CB               	movwf	CalcularDistancia@d3+1
  3676  0080  0874               	movf	?___lwdiv,w
  3677  0081  00CA               	movwf	CalcularDistancia@d3
  3678                           
  3679                           ;Funciones.c: 71: if(d0 == 0){ sprintf(*distancia1,"NOPE\0"); }
  3680  0082  0844               	movf	CalcularDistancia@d0,w
  3681  0083  0445               	iorwf	CalcularDistancia@d0+1,w
  3682  0084  1D03               	btfss	3,2
  3683  0085  2888               	goto	l2251
  3684  0086  3022               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3685  0087  2892               	goto	L5
  3686  0088                     l2251:	
  3687                           
  3688                           ;Funciones.c: 72: else if(d0 > 400){ sprintf(*distancia1,"OUT\0"); }
  3689  0088  3001               	movlw	1
  3690  0089  1283               	bcf	3,5	;RP0=0, select bank0
  3691  008A  1303               	bcf	3,6	;RP1=0, select bank0
  3692  008B  0245               	subwf	CalcularDistancia@d0+1,w
  3693  008C  3091               	movlw	145
  3694  008D  1903               	skipnz
  3695  008E  0244               	subwf	CalcularDistancia@d0,w
  3696  008F  1C03               	skipc
  3697  0090  2896               	goto	l2255
  3698  0091  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3699  0092                     L5:	
  3700  0092  00C3               	movwf	??_CalcularDistancia
  3701  0093  0843               	movf	??_CalcularDistancia,w
  3702  0094  00AA               	movwf	sprintf@f
  3703  0095  28A0               	goto	L2
  3704  0096                     l2255:	
  3705                           
  3706                           ;Funciones.c: 73: else { sprintf(*distancia1,"%u   \0", d0); }
  3707  0096  301B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3708  0097  1283               	bcf	3,5	;RP0=0, select bank0
  3709  0098  1303               	bcf	3,6	;RP1=0, select bank0
  3710  0099  00C3               	movwf	??_CalcularDistancia
  3711  009A  0843               	movf	??_CalcularDistancia,w
  3712  009B  00AA               	movwf	sprintf@f
  3713  009C  0845               	movf	CalcularDistancia@d0+1,w
  3714  009D  00AC               	movwf	?_sprintf+2
  3715  009E  0844               	movf	CalcularDistancia@d0,w
  3716  009F  00AB               	movwf	?_sprintf+1
  3717  00A0                     L2:	
  3718  00A0  083F               	movf	CalcularDistancia@distancia1,w
  3719  00A1  0084               	movwf	4
  3720  00A2  1383               	bcf	3,7	;select IRP bank0
  3721  00A3  0800               	movf	0,w
  3722  00A4  118A  22E2  118A   	fcall	_sprintf
  3723                           
  3724                           ;Funciones.c: 75: if(d1 == 0){ sprintf(*distancia2,"NOPE\0"); }
  3725  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  3726  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  3727  00A9  0846               	movf	CalcularDistancia@d1,w
  3728  00AA  0447               	iorwf	CalcularDistancia@d1+1,w
  3729  00AB  1D03               	btfss	3,2
  3730  00AC  28AF               	goto	l2261
  3731  00AD  3022               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3732  00AE  28B9               	goto	L6
  3733  00AF                     l2261:	
  3734                           
  3735                           ;Funciones.c: 76: else if(d1 > 400){ sprintf(*distancia2,"OUT\0"); }
  3736  00AF  3001               	movlw	1
  3737  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  3738  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  3739  00B2  0247               	subwf	CalcularDistancia@d1+1,w
  3740  00B3  3091               	movlw	145
  3741  00B4  1903               	skipnz
  3742  00B5  0246               	subwf	CalcularDistancia@d1,w
  3743  00B6  1C03               	skipc
  3744  00B7  28BD               	goto	l2265
  3745  00B8  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3746  00B9                     L6:	
  3747  00B9  00C3               	movwf	??_CalcularDistancia
  3748  00BA  0843               	movf	??_CalcularDistancia,w
  3749  00BB  00AA               	movwf	sprintf@f
  3750  00BC  28C7               	goto	L3
  3751  00BD                     l2265:	
  3752                           
  3753                           ;Funciones.c: 77: else{ sprintf(*distancia2,"%u   \0", d1); }
  3754  00BD  301B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3755  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  3756  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  3757  00C0  00C3               	movwf	??_CalcularDistancia
  3758  00C1  0843               	movf	??_CalcularDistancia,w
  3759  00C2  00AA               	movwf	sprintf@f
  3760  00C3  0847               	movf	CalcularDistancia@d1+1,w
  3761  00C4  00AC               	movwf	?_sprintf+2
  3762  00C5  0846               	movf	CalcularDistancia@d1,w
  3763  00C6  00AB               	movwf	?_sprintf+1
  3764  00C7                     L3:	
  3765  00C7  0840               	movf	CalcularDistancia@distancia2,w
  3766  00C8  0084               	movwf	4
  3767  00C9  1383               	bcf	3,7	;select IRP bank0
  3768  00CA  0800               	movf	0,w
  3769  00CB  118A  22E2  118A   	fcall	_sprintf
  3770                           
  3771                           ;Funciones.c: 79: if(d2 == 0){ sprintf(*distancia3,"NOPE\0"); }
  3772  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  3773  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  3774  00D0  0848               	movf	CalcularDistancia@d2,w
  3775  00D1  0449               	iorwf	CalcularDistancia@d2+1,w
  3776  00D2  1D03               	btfss	3,2
  3777  00D3  28D6               	goto	l2271
  3778  00D4  3022               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3779  00D5  28E0               	goto	L7
  3780  00D6                     l2271:	
  3781                           
  3782                           ;Funciones.c: 80: else if(d2 > 400){ sprintf(*distancia3,"OUT\0"); }
  3783  00D6  3001               	movlw	1
  3784  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  3785  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  3786  00D9  0249               	subwf	CalcularDistancia@d2+1,w
  3787  00DA  3091               	movlw	145
  3788  00DB  1903               	skipnz
  3789  00DC  0248               	subwf	CalcularDistancia@d2,w
  3790  00DD  1C03               	skipc
  3791  00DE  28E4               	goto	l2275
  3792  00DF  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3793  00E0                     L7:	
  3794  00E0  00C3               	movwf	??_CalcularDistancia
  3795  00E1  0843               	movf	??_CalcularDistancia,w
  3796  00E2  00AA               	movwf	sprintf@f
  3797  00E3  28EE               	goto	L4
  3798  00E4                     l2275:	
  3799                           
  3800                           ;Funciones.c: 81: else{ sprintf(*distancia3,"%u   \0", d2); }
  3801  00E4  301B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3802  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  3803  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  3804  00E7  00C3               	movwf	??_CalcularDistancia
  3805  00E8  0843               	movf	??_CalcularDistancia,w
  3806  00E9  00AA               	movwf	sprintf@f
  3807  00EA  0849               	movf	CalcularDistancia@d2+1,w
  3808  00EB  00AC               	movwf	?_sprintf+2
  3809  00EC  0848               	movf	CalcularDistancia@d2,w
  3810  00ED  00AB               	movwf	?_sprintf+1
  3811  00EE                     L4:	
  3812  00EE  0841               	movf	CalcularDistancia@distancia3,w
  3813  00EF  0084               	movwf	4
  3814  00F0  1383               	bcf	3,7	;select IRP bank0
  3815  00F1  0800               	movf	0,w
  3816  00F2  118A  22E2  118A   	fcall	_sprintf
  3817                           
  3818                           ;Funciones.c: 83: if(d3 == 0){ sprintf(*distancia4,"NOPE\0"); }
  3819  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  3820  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  3821  00F7  084A               	movf	CalcularDistancia@d3,w
  3822  00F8  044B               	iorwf	CalcularDistancia@d3+1,w
  3823  00F9  1D03               	btfss	3,2
  3824  00FA  2906               	goto	l2281
  3825  00FB  3022               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3826  00FC  00C3               	movwf	??_CalcularDistancia
  3827  00FD  0843               	movf	??_CalcularDistancia,w
  3828  00FE  00AA               	movwf	sprintf@f
  3829  00FF  0842               	movf	CalcularDistancia@distancia4,w
  3830  0100  0084               	movwf	4
  3831  0101  1383               	bcf	3,7	;select IRP bank0
  3832  0102  0800               	movf	0,w
  3833  0103  118A  22E2         	fcall	_sprintf
  3834  0105  0008               	return
  3835  0106                     l2281:	
  3836                           
  3837                           ;Funciones.c: 84: else if(d3 > 400){ sprintf(*distancia4,"OUT\0"); }
  3838  0106  3001               	movlw	1
  3839  0107  1283               	bcf	3,5	;RP0=0, select bank0
  3840  0108  1303               	bcf	3,6	;RP1=0, select bank0
  3841  0109  024B               	subwf	CalcularDistancia@d3+1,w
  3842  010A  3091               	movlw	145
  3843  010B  1903               	skipnz
  3844  010C  024A               	subwf	CalcularDistancia@d3,w
  3845  010D  1C03               	skipc
  3846  010E  291A               	goto	l2285
  3847  010F  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3848  0110  00C3               	movwf	??_CalcularDistancia
  3849  0111  0843               	movf	??_CalcularDistancia,w
  3850  0112  00AA               	movwf	sprintf@f
  3851  0113  0842               	movf	CalcularDistancia@distancia4,w
  3852  0114  0084               	movwf	4
  3853  0115  1383               	bcf	3,7	;select IRP bank0
  3854  0116  0800               	movf	0,w
  3855  0117  118A  22E2         	fcall	_sprintf
  3856  0119  0008               	return
  3857  011A                     l2285:	
  3858                           
  3859                           ;Funciones.c: 85: else{ sprintf(*distancia4,"%u   \0", d3); }
  3860  011A  301B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3861  011B  1283               	bcf	3,5	;RP0=0, select bank0
  3862  011C  1303               	bcf	3,6	;RP1=0, select bank0
  3863  011D  00C3               	movwf	??_CalcularDistancia
  3864  011E  0843               	movf	??_CalcularDistancia,w
  3865  011F  00AA               	movwf	sprintf@f
  3866  0120  084B               	movf	CalcularDistancia@d3+1,w
  3867  0121  00AC               	movwf	?_sprintf+2
  3868  0122  084A               	movf	CalcularDistancia@d3,w
  3869  0123  00AB               	movwf	?_sprintf+1
  3870  0124  0842               	movf	CalcularDistancia@distancia4,w
  3871  0125  0084               	movwf	4
  3872  0126  1383               	bcf	3,7	;select IRP bank0
  3873  0127  0800               	movf	0,w
  3874  0128  118A  22E2         	fcall	_sprintf
  3875  012A  0008               	return
  3876  012B                     __end_of_CalcularDistancia:	
  3877                           
  3878                           	psect	text20
  3879  02E2                     __ptext20:	
  3880 ;; *************** function _sprintf *****************
  3881 ;; Defined at:
  3882 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  sp              1    wreg     PTR unsigned char 
  3885 ;;		 -> dist4(8), dist3(8), dist2(8), dist1(8), 
  3886 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  3887 ;;		 -> STR_12(7), STR_11(5), STR_10(6), STR_9(7), 
  3888 ;;		 -> STR_8(5), STR_7(6), STR_6(7), STR_5(5), 
  3889 ;;		 -> STR_4(6), STR_3(7), STR_2(5), STR_1(6), 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  3892 ;;		 -> dist4(8), dist3(8), dist2(8), dist1(8), 
  3893 ;;  tmpval          4    0        struct .
  3894 ;;  val             2   18[BANK0 ] unsigned int 
  3895 ;;  cp              2    0        PTR const unsigned char 
  3896 ;;  len             2    0        unsigned int 
  3897 ;;  c               1   22[BANK0 ] char 
  3898 ;;  prec            1   20[BANK0 ] char 
  3899 ;;  ap              1   17[BANK0 ] PTR void [1]
  3900 ;;		 -> ?_sprintf(2), 
  3901 ;;  flag            1   16[BANK0 ] unsigned char 
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  2   10[BANK0 ] int 
  3904 ;; Registers used:
  3905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3911 ;;      Params:         0       3       0       0
  3912 ;;      Locals:         0       7       0       0
  3913 ;;      Temps:          0       3       0       0
  3914 ;;      Totals:         0      13       0       0
  3915 ;;Total ram usage:       13 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    2
  3918 ;; This function calls:
  3919 ;;		___lwdiv
  3920 ;;		___lwmod
  3921 ;; This function is called by:
  3922 ;;		_CalcularDistancia
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           
  3927                           ;psect for function _sprintf
  3928  02E2                     _sprintf:	
  3929                           
  3930                           ;incstack = 0
  3931                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3932                           ;sprintf@sp stored from wreg
  3933  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  3934  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  3935  02E4  00B5               	movwf	sprintf@sp
  3936                           
  3937                           ;doprnt.c: 494: va_list ap;
  3938                           ;doprnt.c: 499: signed char c;
  3939                           ;doprnt.c: 506: signed char prec;
  3940                           ;doprnt.c: 508: unsigned char flag;
  3941                           ;doprnt.c: 523: union {
  3942                           ;doprnt.c: 524: unsigned long vd;
  3943                           ;doprnt.c: 525: double integ;
  3944                           ;doprnt.c: 526: } tmpval;
  3945                           ;doprnt.c: 528: unsigned int val;
  3946                           ;doprnt.c: 529: unsigned len;
  3947                           ;doprnt.c: 530: const char * cp;
  3948                           ;doprnt.c: 533: *ap = __va_start();
  3949  02E5  302B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3950  02E6  00AD               	movwf	??_sprintf
  3951  02E7  082D               	movf	??_sprintf,w
  3952  02E8  00B1               	movwf	sprintf@ap
  3953  02E9                     l2217:	
  3954                           ;doprnt.c: 536: while(c = *f++) {
  3955                           
  3956  02E9  3001               	movlw	1
  3957  02EA  07AA               	addwf	sprintf@f,f
  3958  02EB  30FF               	movlw	-1
  3959  02EC  072A               	addwf	sprintf@f,w
  3960  02ED  0084               	movwf	4
  3961  02EE  118A  26B2  118A   	fcall	stringdir
  3962  02F1  00AD               	movwf	??_sprintf
  3963  02F2  082D               	movf	??_sprintf,w
  3964  02F3  00B6               	movwf	sprintf@c
  3965  02F4  0836               	movf	sprintf@c,w
  3966  02F5  1903               	btfsc	3,2
  3967  02F6  2B8C               	goto	l2219
  3968                           
  3969                           ;doprnt.c: 538: if(c != '%')
  3970  02F7  3025               	movlw	37
  3971  02F8  0636               	xorwf	sprintf@c,w
  3972  02F9  1903               	btfsc	3,2
  3973  02FA  2B07               	goto	l2183
  3974                           
  3975                           ;doprnt.c: 540: {
  3976                           ;doprnt.c: 541: ((*sp++ = (c)));
  3977  02FB  0836               	movf	sprintf@c,w
  3978  02FC  00AD               	movwf	??_sprintf
  3979  02FD  0835               	movf	sprintf@sp,w
  3980  02FE  0084               	movwf	4
  3981  02FF  082D               	movf	??_sprintf,w
  3982  0300  1383               	bcf	3,7	;select IRP bank0
  3983  0301  0080               	movwf	0
  3984  0302  3001               	movlw	1
  3985  0303  00AD               	movwf	??_sprintf
  3986  0304  082D               	movf	??_sprintf,w
  3987  0305  07B5               	addwf	sprintf@sp,f
  3988                           
  3989                           ;doprnt.c: 542: continue;
  3990  0306  2AE9               	goto	l2217
  3991  0307                     l2183:	
  3992                           
  3993                           ;doprnt.c: 543: }
  3994                           ;doprnt.c: 548: flag = 0;
  3995  0307  01B0               	clrf	sprintf@flag
  3996                           
  3997                           ;doprnt.c: 635: switch(c = *f++) {
  3998  0308  2B0E               	goto	l2189
  3999  0309                     l2185:	
  4000                           ;doprnt.c: 817: case 'u':
  4001                           
  4002                           ;doprnt.c: 813: continue;
  4003                           
  4004                           ;doprnt.c: 802: default:
  4005                           
  4006                           ;doprnt.c: 638: goto alldone;
  4007                           
  4008                           ;doprnt.c: 637: case 0:
  4009                           
  4010                           
  4011                           ;doprnt.c: 818: flag |= 0xC0;
  4012  0309  30C0               	movlw	192
  4013  030A  00AD               	movwf	??_sprintf
  4014  030B  082D               	movf	??_sprintf,w
  4015  030C  04B0               	iorwf	sprintf@flag,f
  4016                           
  4017                           ;doprnt.c: 822: }
  4018                           
  4019                           ;doprnt.c: 819: break;
  4020  030D  2B1E               	goto	l2191
  4021  030E                     l2189:	
  4022  030E  3001               	movlw	1
  4023  030F  07AA               	addwf	sprintf@f,f
  4024  0310  30FF               	movlw	-1
  4025  0311  072A               	addwf	sprintf@f,w
  4026  0312  0084               	movwf	4
  4027  0313  118A  26B2  118A   	fcall	stringdir
  4028  0316  00B6               	movwf	sprintf@c
  4029                           
  4030                           ; Switch size 1, requested type "space"
  4031                           ; Number of cases is 2, Range of values is 0 to 117
  4032                           ; switch strategies available:
  4033                           ; Name         Instructions Cycles
  4034                           ; simple_byte            7     4 (average)
  4035                           ; direct_byte          243     7 (fixed)
  4036                           ; jumptable            260     6 (fixed)
  4037                           ;	Chosen strategy is simple_byte
  4038  0317  3A00               	xorlw	0	; case 0
  4039  0318  1903               	skipnz
  4040  0319  2B8C               	goto	l2219
  4041  031A  3A75               	xorlw	117	; case 117
  4042  031B  1903               	skipnz
  4043  031C  2B09               	goto	l2185
  4044  031D  2AE9               	goto	l2217
  4045  031E                     l2191:	
  4046                           
  4047                           ;doprnt.c: 1273: {
  4048                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4049  031E  0831               	movf	sprintf@ap,w
  4050  031F  0084               	movwf	4
  4051  0320  1383               	bcf	3,7	;select IRP bank0
  4052  0321  0800               	movf	0,w
  4053  0322  00B2               	movwf	sprintf@val
  4054  0323  0A84               	incf	4,f
  4055  0324  0800               	movf	0,w
  4056  0325  00B3               	movwf	sprintf@val+1
  4057  0326  3002               	movlw	2
  4058  0327  00AD               	movwf	??_sprintf
  4059  0328  082D               	movf	??_sprintf,w
  4060  0329  07B1               	addwf	sprintf@ap,f
  4061                           
  4062                           ;doprnt.c: 1287: }
  4063                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4064  032A  01B6               	clrf	sprintf@c
  4065  032B  0AB6               	incf	sprintf@c,f
  4066  032C  3005               	movlw	5
  4067  032D  0636               	xorwf	sprintf@c,w
  4068  032E  1903               	btfsc	3,2
  4069  032F  2B4D               	goto	l2207
  4070  0330                     l2201:	
  4071                           
  4072                           ;doprnt.c: 1306: if(val < dpowers[c])
  4073  0330  0836               	movf	sprintf@c,w
  4074  0331  00AD               	movwf	??_sprintf
  4075  0332  072D               	addwf	??_sprintf,w
  4076  0333  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4077  0334  0084               	movwf	4
  4078  0335  118A  26B2  118A   	fcall	stringdir
  4079  0338  00AE               	movwf	??_sprintf+1
  4080  0339  118A  26B2  118A   	fcall	stringdir
  4081  033C  00AF               	movwf	??_sprintf+2
  4082  033D  082F               	movf	??_sprintf+2,w
  4083  033E  0233               	subwf	sprintf@val+1,w
  4084  033F  1D03               	skipz
  4085  0340  2B43               	goto	u2345
  4086  0341  082E               	movf	??_sprintf+1,w
  4087  0342  0232               	subwf	sprintf@val,w
  4088  0343                     u2345:	
  4089  0343  1C03               	btfss	3,0
  4090  0344  2B4D               	goto	l2207
  4091                           
  4092                           ;doprnt.c: 1307: break;
  4093  0345  3001               	movlw	1
  4094  0346  00AD               	movwf	??_sprintf
  4095  0347  082D               	movf	??_sprintf,w
  4096  0348  07B6               	addwf	sprintf@c,f
  4097  0349  3005               	movlw	5
  4098  034A  0636               	xorwf	sprintf@c,w
  4099  034B  1D03               	btfss	3,2
  4100  034C  2B30               	goto	l2201
  4101  034D                     l2207:	
  4102                           
  4103                           ;doprnt.c: 1422: {
  4104                           ;doprnt.c: 1469: }
  4105                           ;doprnt.c: 1472: prec = c;
  4106  034D  0836               	movf	sprintf@c,w
  4107  034E  00AD               	movwf	??_sprintf
  4108  034F  082D               	movf	??_sprintf,w
  4109  0350  00B4               	movwf	sprintf@prec
  4110  0351                     l2215:	
  4111                           ;doprnt.c: 1474: while(prec--) {
  4112                           
  4113  0351  30FF               	movlw	255
  4114  0352  00AD               	movwf	??_sprintf
  4115  0353  082D               	movf	??_sprintf,w
  4116  0354  07B4               	addwf	sprintf@prec,f
  4117  0355  0A34               	incf	sprintf@prec,w
  4118  0356  1903               	btfsc	3,2
  4119  0357  2AE9               	goto	l2217
  4120                           
  4121                           ;doprnt.c: 1478: {
  4122                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4123  0358  300A               	movlw	10
  4124  0359  00A4               	movwf	___lwmod@divisor
  4125  035A  3000               	movlw	0
  4126  035B  00A5               	movwf	___lwmod@divisor+1
  4127  035C  0834               	movf	sprintf@prec,w
  4128  035D  00AD               	movwf	??_sprintf
  4129  035E  072D               	addwf	??_sprintf,w
  4130  035F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4131  0360  0084               	movwf	4
  4132  0361  118A  26B2  118A   	fcall	stringdir
  4133  0364  00F4               	movwf	___lwdiv@divisor
  4134  0365  118A  26B2  118A   	fcall	stringdir
  4135  0368  00F5               	movwf	___lwdiv@divisor+1
  4136  0369  0833               	movf	sprintf@val+1,w
  4137  036A  00F7               	movwf	___lwdiv@dividend+1
  4138  036B  0832               	movf	sprintf@val,w
  4139  036C  00F6               	movwf	___lwdiv@dividend
  4140  036D  118A  266A  118A   	fcall	___lwdiv
  4141  0370  0875               	movf	?___lwdiv+1,w
  4142  0371  1283               	bcf	3,5	;RP0=0, select bank0
  4143  0372  1303               	bcf	3,6	;RP1=0, select bank0
  4144  0373  00A7               	movwf	___lwmod@dividend+1
  4145  0374  0874               	movf	?___lwdiv,w
  4146  0375  00A6               	movwf	___lwmod@dividend
  4147  0376  118A  26E4  118A   	fcall	___lwmod
  4148  0379  1283               	bcf	3,5	;RP0=0, select bank0
  4149  037A  1303               	bcf	3,6	;RP1=0, select bank0
  4150  037B  0824               	movf	?___lwmod,w
  4151  037C  3E30               	addlw	48
  4152  037D  00AE               	movwf	??_sprintf+1
  4153  037E  082E               	movf	??_sprintf+1,w
  4154  037F  00B6               	movwf	sprintf@c
  4155                           
  4156                           ;doprnt.c: 1523: }
  4157                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4158  0380  0836               	movf	sprintf@c,w
  4159  0381  00AD               	movwf	??_sprintf
  4160  0382  0835               	movf	sprintf@sp,w
  4161  0383  0084               	movwf	4
  4162  0384  082D               	movf	??_sprintf,w
  4163  0385  1383               	bcf	3,7	;select IRP bank0
  4164  0386  0080               	movwf	0
  4165  0387  3001               	movlw	1
  4166  0388  00AD               	movwf	??_sprintf
  4167  0389  082D               	movf	??_sprintf,w
  4168  038A  07B5               	addwf	sprintf@sp,f
  4169  038B  2B51               	goto	l2215
  4170  038C                     l2219:	
  4171                           ;doprnt.c: 1525: }
  4172                           ;doprnt.c: 1533: }
  4173                           ;doprnt.c: 1535: alldone:
  4174                           
  4175                           
  4176                           ;doprnt.c: 1538: *sp = 0;
  4177  038C  0835               	movf	sprintf@sp,w
  4178  038D  0084               	movwf	4
  4179  038E  1383               	bcf	3,7	;select IRP bank0
  4180  038F  0180               	clrf	0
  4181  0390  0008               	return
  4182  0391                     __end_of_sprintf:	
  4183                           ;doprnt.c: 1540: return 0;
  4184                           ;	Return value of _sprintf is never used
  4185                           
  4186                           
  4187                           	psect	text21
  4188  06E4                     __ptext21:	
  4189 ;; *************** function ___lwmod *****************
  4190 ;; Defined at:
  4191 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  divisor         2    4[BANK0 ] unsigned int 
  4194 ;;  dividend        2    6[BANK0 ] unsigned int 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  counter         1    9[BANK0 ] unsigned char 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  2    4[BANK0 ] unsigned int 
  4199 ;; Registers used:
  4200 ;;		wreg, status,2, status,0
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4206 ;;      Params:         0       4       0       0
  4207 ;;      Locals:         0       1       0       0
  4208 ;;      Temps:          0       1       0       0
  4209 ;;      Totals:         0       6       0       0
  4210 ;;Total ram usage:        6 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; Hardware stack levels required when called:    1
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_sprintf
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           
  4221                           ;psect for function ___lwmod
  4222  06E4                     ___lwmod:	
  4223                           
  4224                           ;incstack = 0
  4225                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4226  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  4227  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  4228  06E6  0824               	movf	___lwmod@divisor,w
  4229  06E7  0425               	iorwf	___lwmod@divisor+1,w
  4230  06E8  1903               	btfsc	3,2
  4231  06E9  2F13               	goto	l2087
  4232  06EA  01A9               	clrf	___lwmod@counter
  4233  06EB  0AA9               	incf	___lwmod@counter,f
  4234  06EC                     l2077:	
  4235  06EC  1BA5               	btfsc	___lwmod@divisor+1,7
  4236  06ED  2EFA               	goto	l2079
  4237  06EE  3001               	movlw	1
  4238  06EF                     u2215:	
  4239  06EF  1003               	clrc
  4240  06F0  0DA4               	rlf	___lwmod@divisor,f
  4241  06F1  0DA5               	rlf	___lwmod@divisor+1,f
  4242  06F2  3EFF               	addlw	-1
  4243  06F3  1D03               	skipz
  4244  06F4  2EEF               	goto	u2215
  4245  06F5  3001               	movlw	1
  4246  06F6  00A8               	movwf	??___lwmod
  4247  06F7  0828               	movf	??___lwmod,w
  4248  06F8  07A9               	addwf	___lwmod@counter,f
  4249  06F9  2EEC               	goto	l2077
  4250  06FA                     l2079:	
  4251  06FA  0825               	movf	___lwmod@divisor+1,w
  4252  06FB  0227               	subwf	___lwmod@dividend+1,w
  4253  06FC  1D03               	skipz
  4254  06FD  2F00               	goto	u2235
  4255  06FE  0824               	movf	___lwmod@divisor,w
  4256  06FF  0226               	subwf	___lwmod@dividend,w
  4257  0700                     u2235:	
  4258  0700  1C03               	skipc
  4259  0701  2F08               	goto	l2083
  4260  0702  0824               	movf	___lwmod@divisor,w
  4261  0703  02A6               	subwf	___lwmod@dividend,f
  4262  0704  0825               	movf	___lwmod@divisor+1,w
  4263  0705  1C03               	skipc
  4264  0706  03A7               	decf	___lwmod@dividend+1,f
  4265  0707  02A7               	subwf	___lwmod@dividend+1,f
  4266  0708                     l2083:	
  4267  0708  3001               	movlw	1
  4268  0709                     u2245:	
  4269  0709  1003               	clrc
  4270  070A  0CA5               	rrf	___lwmod@divisor+1,f
  4271  070B  0CA4               	rrf	___lwmod@divisor,f
  4272  070C  3EFF               	addlw	-1
  4273  070D  1D03               	skipz
  4274  070E  2F09               	goto	u2245
  4275  070F  3001               	movlw	1
  4276  0710  02A9               	subwf	___lwmod@counter,f
  4277  0711  1D03               	btfss	3,2
  4278  0712  2EFA               	goto	l2079
  4279  0713                     l2087:	
  4280  0713  0827               	movf	___lwmod@dividend+1,w
  4281  0714  00A5               	movwf	?___lwmod+1
  4282  0715  0826               	movf	___lwmod@dividend,w
  4283  0716  00A4               	movwf	?___lwmod
  4284  0717  0008               	return
  4285  0718                     __end_of___lwmod:	
  4286                           
  4287                           	psect	text22
  4288  066A                     __ptext22:	
  4289 ;; *************** function ___lwdiv *****************
  4290 ;; Defined at:
  4291 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  divisor         2    4[COMMON] unsigned int 
  4294 ;;  dividend        2    6[COMMON] unsigned int 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  quotient        2    2[BANK0 ] unsigned int 
  4297 ;;  counter         1    1[BANK0 ] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  2    4[COMMON] unsigned int 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4307 ;;      Params:         4       0       0       0
  4308 ;;      Locals:         0       3       0       0
  4309 ;;      Temps:          0       1       0       0
  4310 ;;      Totals:         4       4       0       0
  4311 ;;Total ram usage:        8 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    1
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_CalcularDistancia
  4318 ;;		_sprintf
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           
  4323                           ;psect for function ___lwdiv
  4324  066A                     ___lwdiv:	
  4325                           
  4326                           ;incstack = 0
  4327                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4328  066A  1283               	bcf	3,5	;RP0=0, select bank0
  4329  066B  1303               	bcf	3,6	;RP1=0, select bank0
  4330  066C  01A2               	clrf	___lwdiv@quotient
  4331  066D  01A3               	clrf	___lwdiv@quotient+1
  4332  066E  0874               	movf	___lwdiv@divisor,w
  4333  066F  0475               	iorwf	___lwdiv@divisor+1,w
  4334  0670  1903               	btfsc	3,2
  4335  0671  2EA3               	goto	l2065
  4336  0672  01A1               	clrf	___lwdiv@counter
  4337  0673  0AA1               	incf	___lwdiv@counter,f
  4338  0674                     l2053:	
  4339  0674  1BF5               	btfsc	___lwdiv@divisor+1,7
  4340  0675  2E82               	goto	l2055
  4341  0676  3001               	movlw	1
  4342  0677                     u2145:	
  4343  0677  1003               	clrc
  4344  0678  0DF4               	rlf	___lwdiv@divisor,f
  4345  0679  0DF5               	rlf	___lwdiv@divisor+1,f
  4346  067A  3EFF               	addlw	-1
  4347  067B  1D03               	skipz
  4348  067C  2E77               	goto	u2145
  4349  067D  3001               	movlw	1
  4350  067E  00A0               	movwf	??___lwdiv
  4351  067F  0820               	movf	??___lwdiv,w
  4352  0680  07A1               	addwf	___lwdiv@counter,f
  4353  0681  2E74               	goto	l2053
  4354  0682                     l2055:	
  4355  0682  3001               	movlw	1
  4356  0683                     u2165:	
  4357  0683  1003               	clrc
  4358  0684  0DA2               	rlf	___lwdiv@quotient,f
  4359  0685  0DA3               	rlf	___lwdiv@quotient+1,f
  4360  0686  3EFF               	addlw	-1
  4361  0687  1D03               	skipz
  4362  0688  2E83               	goto	u2165
  4363  0689  0875               	movf	___lwdiv@divisor+1,w
  4364  068A  0277               	subwf	___lwdiv@dividend+1,w
  4365  068B  1D03               	skipz
  4366  068C  2E8F               	goto	u2175
  4367  068D  0874               	movf	___lwdiv@divisor,w
  4368  068E  0276               	subwf	___lwdiv@dividend,w
  4369  068F                     u2175:	
  4370  068F  1C03               	skipc
  4371  0690  2E98               	goto	l2061
  4372  0691  0874               	movf	___lwdiv@divisor,w
  4373  0692  02F6               	subwf	___lwdiv@dividend,f
  4374  0693  0875               	movf	___lwdiv@divisor+1,w
  4375  0694  1C03               	skipc
  4376  0695  03F7               	decf	___lwdiv@dividend+1,f
  4377  0696  02F7               	subwf	___lwdiv@dividend+1,f
  4378  0697  1422               	bsf	___lwdiv@quotient,0
  4379  0698                     l2061:	
  4380  0698  3001               	movlw	1
  4381  0699                     u2185:	
  4382  0699  1003               	clrc
  4383  069A  0CF5               	rrf	___lwdiv@divisor+1,f
  4384  069B  0CF4               	rrf	___lwdiv@divisor,f
  4385  069C  3EFF               	addlw	-1
  4386  069D  1D03               	skipz
  4387  069E  2E99               	goto	u2185
  4388  069F  3001               	movlw	1
  4389  06A0  02A1               	subwf	___lwdiv@counter,f
  4390  06A1  1D03               	btfss	3,2
  4391  06A2  2E82               	goto	l2055
  4392  06A3                     l2065:	
  4393  06A3  0823               	movf	___lwdiv@quotient+1,w
  4394  06A4  00F5               	movwf	?___lwdiv+1
  4395  06A5  0822               	movf	___lwdiv@quotient,w
  4396  06A6  00F4               	movwf	?___lwdiv
  4397  06A7  0008               	return
  4398  06A8                     __end_of___lwdiv:	
  4399                           
  4400                           	psect	text23
  4401  04B9                     __ptext23:	
  4402 ;; *************** function _echo *****************
  4403 ;; Defined at:
  4404 ;;		line 71 in file "main.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;		None
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;		None
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  1    wreg      void 
  4411 ;; Registers used:
  4412 ;;		wreg, status,2, status,0
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4418 ;;      Params:         0       0       0       0
  4419 ;;      Locals:         0       0       0       0
  4420 ;;      Temps:          4       0       0       0
  4421 ;;      Totals:         4       0       0       0
  4422 ;;Total ram usage:        4 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		Interrupt level 1
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           
  4432                           ;psect for function _echo
  4433  04B9                     _echo:	
  4434                           
  4435                           ;main.c: 73: if(RBIF == 1)
  4436  04B9  1C0B               	btfss	11,0	;volatile
  4437  04BA  2D1C               	goto	i1l342
  4438                           
  4439                           ;main.c: 74: {
  4440                           ;main.c: 75: RBIE = 0;
  4441  04BB  118B               	bcf	11,3	;volatile
  4442                           
  4443                           ;main.c: 81: if ( (RB4 == 1) && (rbon == 0) )
  4444  04BC  1E06               	btfss	6,4	;volatile
  4445  04BD  2CC6               	goto	i1l327
  4446  04BE  0878               	movf	_rbon,w
  4447  04BF  0479               	iorwf	_rbon+1,w
  4448  04C0  1D03               	btfss	3,2
  4449  04C1  2CC6               	goto	i1l327
  4450                           
  4451                           ;main.c: 82: {
  4452                           ;main.c: 83: TMR1 = 0;
  4453  04C2  018E               	clrf	14	;volatile
  4454  04C3  018F               	clrf	15	;volatile
  4455                           
  4456                           ;main.c: 84: rbon = 4;
  4457  04C4  3004               	movlw	4
  4458  04C5  2D07               	goto	L8
  4459  04C6                     i1l327:	
  4460                           ;main.c: 86: }
  4461                           
  4462                           ;main.c: 85: TMR1ON = 1;
  4463                           
  4464                           
  4465                           ;main.c: 88: else if( (RB4 == 0) && (rbon == 4) )
  4466  04C6  1A06               	btfsc	6,4	;volatile
  4467  04C7  2CD2               	goto	i1l329
  4468  04C8  3004               	movlw	4
  4469  04C9  0678               	xorwf	_rbon,w
  4470  04CA  0479               	iorwf	_rbon+1,w
  4471  04CB  1D03               	btfss	3,2
  4472  04CC  2CD2               	goto	i1l329
  4473                           
  4474                           ;main.c: 89: {
  4475                           ;main.c: 90: t4 = TMR1;
  4476  04CD  080F               	movf	15,w	;volatile
  4477  04CE  00D1               	movwf	_t4+1
  4478  04CF  080E               	movf	14,w	;volatile
  4479  04D0  00D0               	movwf	_t4
  4480  04D1  2D17               	goto	L9
  4481  04D2                     i1l329:	
  4482                           ;main.c: 93: }
  4483                           
  4484                           ;main.c: 92: TMR1ON = 0;
  4485                           
  4486                           ;main.c: 91: rbon = 0;
  4487                           
  4488                           
  4489                           ;main.c: 95: else if ( (RB5 == 1) && (rbon == 0) )
  4490  04D2  1E86               	btfss	6,5	;volatile
  4491  04D3  2CDC               	goto	i1l331
  4492  04D4  0878               	movf	_rbon,w
  4493  04D5  0479               	iorwf	_rbon+1,w
  4494  04D6  1D03               	btfss	3,2
  4495  04D7  2CDC               	goto	i1l331
  4496                           
  4497                           ;main.c: 96: {
  4498                           ;main.c: 97: TMR1 = 0;
  4499  04D8  018E               	clrf	14	;volatile
  4500  04D9  018F               	clrf	15	;volatile
  4501                           
  4502                           ;main.c: 98: rbon = 5;
  4503  04DA  3005               	movlw	5
  4504  04DB  2D07               	goto	L8
  4505  04DC                     i1l331:	
  4506                           ;main.c: 100: }
  4507                           
  4508                           ;main.c: 99: TMR1ON = 1;
  4509                           
  4510                           
  4511                           ;main.c: 102: else if( (RB5 == 0) && (rbon == 5) )
  4512  04DC  1A86               	btfsc	6,5	;volatile
  4513  04DD  2CE8               	goto	i1l333
  4514  04DE  3005               	movlw	5
  4515  04DF  0678               	xorwf	_rbon,w
  4516  04E0  0479               	iorwf	_rbon+1,w
  4517  04E1  1D03               	btfss	3,2
  4518  04E2  2CE8               	goto	i1l333
  4519                           
  4520                           ;main.c: 103: {
  4521                           ;main.c: 104: t5 = TMR1;
  4522  04E3  080F               	movf	15,w	;volatile
  4523  04E4  00D3               	movwf	_t5+1
  4524  04E5  080E               	movf	14,w	;volatile
  4525  04E6  00D2               	movwf	_t5
  4526  04E7  2D17               	goto	L9
  4527  04E8                     i1l333:	
  4528                           ;main.c: 107: }
  4529                           
  4530                           ;main.c: 106: TMR1ON = 0;
  4531                           
  4532                           ;main.c: 105: rbon = 0;
  4533                           
  4534                           
  4535                           ;main.c: 109: else if ( (RB6 == 1) && (rbon == 0) )
  4536  04E8  1F06               	btfss	6,6	;volatile
  4537  04E9  2CF2               	goto	i1l335
  4538  04EA  0878               	movf	_rbon,w
  4539  04EB  0479               	iorwf	_rbon+1,w
  4540  04EC  1D03               	btfss	3,2
  4541  04ED  2CF2               	goto	i1l335
  4542                           
  4543                           ;main.c: 110: {
  4544                           ;main.c: 111: TMR1 = 0;
  4545  04EE  018E               	clrf	14	;volatile
  4546  04EF  018F               	clrf	15	;volatile
  4547                           
  4548                           ;main.c: 112: rbon = 6;
  4549  04F0  3006               	movlw	6
  4550  04F1  2D07               	goto	L8
  4551  04F2                     i1l335:	
  4552                           ;main.c: 114: }
  4553                           
  4554                           ;main.c: 113: TMR1ON = 1;
  4555                           
  4556                           
  4557                           ;main.c: 116: else if( (RB6 == 0) && (rbon == 6) )
  4558  04F2  1B06               	btfsc	6,6	;volatile
  4559  04F3  2CFE               	goto	i1l337
  4560  04F4  3006               	movlw	6
  4561  04F5  0678               	xorwf	_rbon,w
  4562  04F6  0479               	iorwf	_rbon+1,w
  4563  04F7  1D03               	btfss	3,2
  4564  04F8  2CFE               	goto	i1l337
  4565                           
  4566                           ;main.c: 117: {
  4567                           ;main.c: 118: t6 = TMR1;
  4568  04F9  080F               	movf	15,w	;volatile
  4569  04FA  00D5               	movwf	_t6+1
  4570  04FB  080E               	movf	14,w	;volatile
  4571  04FC  00D4               	movwf	_t6
  4572  04FD  2D17               	goto	L9
  4573  04FE                     i1l337:	
  4574                           ;main.c: 121: }
  4575                           
  4576                           ;main.c: 120: TMR1ON = 0;
  4577                           
  4578                           ;main.c: 119: rbon = 0;
  4579                           
  4580                           
  4581                           ;main.c: 123: else if ( (RB7 == 1) && (rbon == 0) )
  4582  04FE  1F86               	btfss	6,7	;volatile
  4583  04FF  2D0C               	goto	i1l339
  4584  0500  0878               	movf	_rbon,w
  4585  0501  0479               	iorwf	_rbon+1,w
  4586  0502  1D03               	btfss	3,2
  4587  0503  2D0C               	goto	i1l339
  4588                           
  4589                           ;main.c: 124: {
  4590                           ;main.c: 125: TMR1 = 0;
  4591  0504  018E               	clrf	14	;volatile
  4592  0505  018F               	clrf	15	;volatile
  4593                           
  4594                           ;main.c: 126: rbon = 7;
  4595  0506  3007               	movlw	7
  4596  0507                     L8:	
  4597  0507  00F8               	movwf	_rbon
  4598  0508  3000               	movlw	0
  4599  0509  00F9               	movwf	_rbon+1
  4600                           
  4601                           ;main.c: 127: TMR1ON = 1;
  4602  050A  1410               	bsf	16,0	;volatile
  4603                           
  4604                           ;main.c: 128: }
  4605  050B  2D1A               	goto	i1l1973
  4606  050C                     i1l339:	
  4607                           
  4608                           ;main.c: 130: else if( (RB7 == 0) && (rbon == 7) )
  4609  050C  1B86               	btfsc	6,7	;volatile
  4610  050D  2D1A               	goto	i1l1973
  4611  050E  3007               	movlw	7
  4612  050F  0678               	xorwf	_rbon,w
  4613  0510  0479               	iorwf	_rbon+1,w
  4614  0511  1D03               	btfss	3,2
  4615  0512  2D1A               	goto	i1l1973
  4616                           
  4617                           ;main.c: 131: {
  4618                           ;main.c: 132: t7 = TMR1;
  4619  0513  080F               	movf	15,w	;volatile
  4620  0514  00D7               	movwf	_t7+1
  4621  0515  080E               	movf	14,w	;volatile
  4622  0516  00D6               	movwf	_t7
  4623  0517                     L9:	
  4624                           
  4625                           ;main.c: 133: rbon = 0;
  4626  0517  01F8               	clrf	_rbon
  4627  0518  01F9               	clrf	_rbon+1
  4628                           
  4629                           ;main.c: 134: TMR1ON = 0;
  4630  0519  1010               	bcf	16,0	;volatile
  4631  051A                     i1l1973:	
  4632                           
  4633                           ;main.c: 135: }
  4634                           ;main.c: 137: RBIF = 0;
  4635  051A  100B               	bcf	11,0	;volatile
  4636                           
  4637                           ;main.c: 138: RBIE = 1;
  4638  051B  158B               	bsf	11,3	;volatile
  4639  051C                     i1l342:	
  4640  051C  0873               	movf	??_echo+3,w
  4641  051D  00FF               	movwf	127
  4642  051E  0872               	movf	??_echo+2,w
  4643  051F  008A               	movwf	10
  4644  0520  0871               	movf	??_echo+1,w
  4645  0521  0084               	movwf	4
  4646  0522  0E70               	swapf	??_echo^(0+-128),w
  4647  0523  0083               	movwf	3
  4648  0524  0EFE               	swapf	126,f
  4649  0525  0E7E               	swapf	126,w
  4650  0526  0009               	retfie
  4651  0527                     __end_of_echo:	
  4652  007E                     btemp	set	126	;btemp
  4653  007E                     wtemp	set	126
  4654  007E                     wtemp0	set	126
  4655  0080                     wtemp1	set	128
  4656  0082                     wtemp2	set	130
  4657  0084                     wtemp3	set	132
  4658  0086                     wtemp4	set	134
  4659  0088                     wtemp5	set	136
  4660  007F                     wtemp6	set	127
  4661  007E                     ttemp	set	126
  4662  007E                     ttemp0	set	126
  4663  0081                     ttemp1	set	129
  4664  0084                     ttemp2	set	132
  4665  0087                     ttemp3	set	135
  4666  007F                     ttemp4	set	127
  4667  007E                     ltemp	set	126
  4668  007E                     ltemp0	set	126
  4669  0082                     ltemp1	set	130
  4670  0086                     ltemp2	set	134
  4671  0080                     ltemp3	set	128
  4672                           
  4673                           	psect	intentry
  4674  0004                     __pintentry:	
  4675                           ;incstack = 0
  4676                           ; Regs used in _echo: [wreg+status,2+status,0]
  4677                           
  4678  0004                     interrupt_function:	
  4679  007E                     saved_w	set	btemp
  4680  0004  00FE               	movwf	btemp
  4681  0005  0E03               	swapf	3,w
  4682  0006  00F0               	movwf	??_echo
  4683  0007  0804               	movf	4,w
  4684  0008  00F1               	movwf	??_echo+1
  4685  0009  080A               	movf	10,w
  4686  000A  00F2               	movwf	??_echo+2
  4687  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4688  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4689  000D  087F               	movf	btemp+1,w
  4690  000E  00F3               	movwf	??_echo+3
  4691  000F  118A  2CB9         	ljmp	_echo


Data Sizes:
    Strings     30
    Constant    14
    Data        6
    BSS         43
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     48      80
    BANK1            80      0      16
    BANK2            80      0       0

Pointer List with Targets:

    lcd_ioinit@iodata	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_12(CODE[7]), STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[7]), 
		 -> STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[7]), STR_5(CODE[5]), 
		 -> STR_4(CODE[6]), STR_3(CODE[7]), STR_2(CODE[5]), STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> dist4(BANK1[8]), dist3(BANK1[8]), dist2(BANK0[8]), dist1(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    distancia4	PTR unsigned char  size(1) Largest target is 8
		 -> dist4(BANK1[8]), 

    distancia3	PTR unsigned char  size(1) Largest target is 8
		 -> dist3(BANK1[8]), 

    distancia2	PTR unsigned char  size(1) Largest target is 8
		 -> dist2(BANK0[8]), 

    distancia1	PTR unsigned char  size(1) Largest target is 8
		 -> dist1(BANK0[8]), 

    PrintDistancias@dist4	PTR unsigned char  size(1) Largest target is 8
		 -> dist4(BANK1[8]), 

    PrintDistancias@dist3	PTR unsigned char  size(1) Largest target is 8
		 -> dist3(BANK1[8]), 

    PrintDistancias@dist2	PTR unsigned char  size(1) Largest target is 8
		 -> dist2(BANK0[8]), 

    PrintDistancias@dist1	PTR unsigned char  size(1) Largest target is 8
		 -> dist1(BANK0[8]), 

    CalcularDistancia@distancia4	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia4(BANK0[1]), 

    CalcularDistancia@distancia3	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia3(BANK0[1]), 

    CalcularDistancia@distancia2	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia2(BANK0[1]), 

    CalcularDistancia@distancia1	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia1(BANK0[1]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 8
		 -> dist4(BANK1[8]), dist3(BANK1[8]), dist2(BANK0[8]), dist1(BANK0[8]), 

    lcd_puts@string	PTR const unsigned char  size(2) Largest target is 12
		 -> dist4(BANK1[8]), dist3(BANK1[8]), dist2(BANK0[8]), dist1(BANK0[8]), 
		 -> STR_13(CODE[12]), 

    lcd_init@iodata	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _UART_Init->___aldiv
    _UART_Write_Text->_UART_Write
    _lcd_init->_lcd_iowrite4
    _lcd_ioinit->_lcd_ioset
    _lcd_send->_lcd_iowrite4
    _lcd_iowrite4->_lcd_ioset
    _CalcularDistancia->___lwdiv
    _sprintf->___lwdiv
    ___lwmod->___lwdiv

Critical Paths under _echo in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_CalcularDistancia
    _UART_Init->___aldiv
    _PrintDistancias->_lcd_goto
    _lcd_puts->_lcd_send
    _lcd_goto->_lcd_send
    _Inicializaciones->_lcd_init
    _lcd_on->_lcd_send
    _lcd_init->_lcd_send
    _lcd_clear->_lcd_send
    _lcd_send->_lcd_iowrite4
    _CalcularDistancia->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _echo in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _echo in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _echo in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   25080
                                             44 BANK0      4     4      0
                  _CalcularDistancia
                   _Inicializaciones
                    _PrintDistancias
                          _ResetEcho
                            _Trigger
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     721
                                              5 COMMON     2     2      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Trigger                                              2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ResetEcho                                            2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _PrintDistancias                                      6     3      3    7847
                                              8 BANK0      6     3      3
                    _UART_Write_Text
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2    3514
                                              5 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             3     2      1    3579
                                              5 BANK0      3     2      1
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      4     4      0     281
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Inicializaciones                                     2     2      0   11262
                                             11 BANK0      2     2      0
                          _lcd_clear
                           _lcd_init
                             _lcd_on
 ---------------------------------------------------------------------------------
 (2) _lcd_on                                               1     1      0    3124
                                              5 BANK0      1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             6     4      2    5014
                                              5 BANK0      6     4      2
                         _lcd_ioinit
                       _lcd_iowrite4
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_ioinit                                           3     3      0     804
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                          _lcd_ioset
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            2     2      0    3124
                                              5 BANK0      2     2      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_send                                             3     2      1    3124
                                              2 BANK0      3     2      1
                          _lcd_ioset
                       _lcd_iowrite4
                       _lcd_iowrite8
 ---------------------------------------------------------------------------------
 (4) _lcd_iowrite8                                         1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_iowrite4                                         4     4      0     833
                                              6 COMMON     2     2      0
                                              0 BANK0      2     2      0
                          _lcd_ioset
 ---------------------------------------------------------------------------------
 (5) _lcd_ioset                                            2     1      1     672
                                              4 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _CalcularDistancia                                   21     9     12    5250
                                             23 BANK0     21     9     12
                            ___lwdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    2959
                                             10 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     362
                                              4 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     891
                                              4 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _echo                                                 4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcularDistancia
     ___lwdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _Inicializaciones
     _lcd_clear
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
     _lcd_init
       _lcd_ioinit
         _lcd_ioset
       _lcd_iowrite4
         _lcd_ioset
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
     _lcd_on
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
   _PrintDistancias
     _UART_Write_Text
       _UART_Write
     _lcd_goto
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
     _lcd_puts
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
   _ResetEcho
   _Trigger
   _UART_Init
     ___aldiv

 _echo (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       5       20.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     30      50       3      100.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6A      10        0.0%
ABS                  0      0      6A       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue Mar 15 10:52:09 2016

  __size_of_Inicializaciones 002D                ?_lcd_iowrite4 0070                ?_lcd_iowrite8 0070  
                          pc 0002                  __CFG_CP$OFF 0000                           l40 059E  
                         l41 05A8                           l42 05B2                           l43 05BC  
                         l45 05DD                           l37 058A                           l39 0594  
                         _t4 0050                           _t5 0052                           _t6 0054  
                         _t7 0056                           fsr 0004                          l181 0FBB  
                        l506 043C                          _GIE 005F                          _RB0 0030  
                        _RB1 0031                          _RC0 0038                          _RB2 0032  
                        _RC1 0039                          _RB3 0033                          _RC2 003A  
                        _RB4 0034                          _RC3 003B                          _RB5 0035  
                        _RC4 003C                          _RB6 0036                          _RC5 003D  
                        _RB7 0037                 __CFG_CPD$OFF 0000             lcd_ioinit@iodata 0020  
                        fsr0 0004                          indf 0000                  lcd_goto@col 0027  
                lcd_goto@row 0025                 __CFG_IESO$ON 0000                  lcd_ioinit@i 0021  
               __CFG_LVP$OFF 0000                         l2031 0721                         l2023 0797  
                       l2201 0330                         l2017 0788                         l2115 0276  
                       l2061 0698                         l2053 0674                         l2037 0743  
                       l2055 0682                         l2215 0351                         l2207 034D  
                       l2065 06A3                         l2217 02E9                         l2129 02B5  
                       l2153 07C6                         l2083 0708                         l2219 038C  
                       l2251 0088                         l2077 06EC                         l2261 00AF  
                       l2173 07E0                         l2157 07CF                         l2165 0799  
                       l1701 01F7                         l2079 06FA                         l2087 0713  
                       l2191 031E                         l2183 0307                         l2271 00D6  
                       l2255 0096                         l2185 0309                         l2281 0106  
                       l2265 00BD                         l2275 00E4                         l2189 030E  
                       l2285 011A                         l1671 045D                         l1663 044D  
                       l1681 0495                         l1673 046D                         l2377 05EE  
                       l1685 04A2                         l1689 04B0                         l1981 05C6  
                       l1993 065A                         l1987 0637                         STR_1 06D9  
                       STR_2 06DF                         STR_3 06D2                         STR_4 06D9  
                       STR_5 06DF                         STR_6 06D2                         STR_7 06D9  
                       STR_8 06DF                         STR_9 06D2                         _BRGH 04C2  
                       _CREN 00C4                         u2000 05C2                         u2040 0648  
                       u2050 0649                         u2034 063F                         u2035 063D  
                       u2115 0734                         _IOCB 0096                         u2215 06EF  
                       u1600 01D8                         u2145 0677                         u1505 0484  
                       u1601 01D9                         u1602 01DE                         u2235 0700  
                       u1515 0496                         u1603 01DF                         u2165 0683  
                       u2245 0709                         u2175 068F                         u1560 0171  
                       u2185 0699                         u2345 0343                         u1561 0172  
                       u1545 0136                         u1562 0177                         u2507 053A  
                       u1475 0461                         u1563 0178                         u1555 0157  
                       u1900 0590                         u2517 0548                         u2607 0402  
                       u2527 0552                         u1495 046F                         u1920 059A  
                       u2617 0413                         u2537 0560                         u1585 019D  
                       u2707 0287                         u2627 0424                         u2547 056A  
                       u1595 01BE                         u1940 05A4                         u2717 0297  
                       u2637 0FD1                         u2557 0578                         u2727 02A5  
                       u2647 022B                         u2567 0582                         u1960 05AE  
                       u2737 02B3                         u2657 0242                         u2577 0FEE  
                       u2497 0530                         u2747 02C0                         u2667 024F  
                       u2587 0FFA                         u1980 05B8                         u2757 02CF  
                       u2677 025A                         u2597 03F1                         u2767 02DF  
                       u2687 0265                         _RBIE 005B                         _RBIF 0058  
                       u2777 0FE1                         u2697 0273                         u2787 0662  
                       _RCIF 0065                         _TMR1 000E                         _SPEN 00C7  
                       _TRMT 04C1                         _TXEN 04C5                         _SYNC 04C4  
               __CFG_WRT$OFF 0000                __CFG_FCMEN$ON 0000                         _echo 04B9  
                       _main 05DE                         _rbon 0078                         btemp 007E  
               lcd_init@cols 0025                __CFG_BOREN$ON 0000                 lcd_init@rows 0026  
                       ltemp 007E                         start 0011                         ttemp 007E  
                       wtemp 007E                __CFG_MCLRE$ON 0000               ??_lcd_iowrite4 0076  
             ??_lcd_iowrite8 0074                 lcd_ioset@pin 0075                 lcd_ioset@out 0074  
    __end_of_UART_Write_Text 07FC                 lcd_send@data 0024                        ?_echo 0070  
            __end_of_Trigger 0588              __end_of___aldiv 04B9                        ?_main 0070  
                      STR_10 06D9                        STR_11 06DF                        STR_12 06D2  
                      STR_13 06C6                __CFG_WDTE$OFF 0000                        _T1CON 0010  
            __end_of___lwdiv 06A8                        i1l331 04DC                        i1l333 04E8  
                      i1l342 051C                        i1l335 04F2                        i1l327 04C6  
                      i1l337 04FE                        i1l329 04D2              __end_of___lwmod 0718  
                      i1l339 050C                        _RCREG 001A                        _SPBRG 0099  
                      _PORTB 0006                        _TRISB 0086                        _TXREG 0019  
                ?_UART_Write 0070           __size_of_UART_Init 00E6                        _dist1 0059  
                      _dist2 0061                        _dist3 00A0                        _dist4 00A8  
            __end_of_dpowers 06C2             ?_PrintDistancias 0028                        pclath 000A  
                      ltemp0 007E                        ltemp1 0082                        ltemp2 0086  
                      ltemp3 0080              __end_of_rowaddr 06C6                        ttemp0 007E  
                      ttemp1 0081                        ttemp2 0084                        ttemp3 0087  
                      ttemp4 007F                        status 0003                        wtemp0 007E  
                      wtemp1 0080                        wtemp2 0082                        wtemp3 0084  
                      wtemp4 0086                        wtemp5 0088                        wtemp6 007F  
            __end_of_sprintf 0391              __initialization 0013                 __end_of_echo 0527  
               __end_of_main 062C                       ??_echo 0070                       ??_main 004C  
              lcd_iowrite4@i 0021                       _ANSELH 0189                       i1l1973 051A  
                     _INTCON 000B                       _OSCCON 008F                       _TMR1ON 0080  
                     _TRISC0 0438                       _TRISC1 0439                       _TRISC2 043A  
                     _TRISC3 043B                       _TRISC4 043C                       _TRISC5 043D  
                     _TRISC6 043E                       _TRISC7 043F               __CFG_PWRTE$OFF 0000  
           __end_of_lcd_init 02E2             __end_of_lcd_goto 07DB            __end_of_UART_Init 0211  
           __end_of_lcd_send 0749             _Inicializaciones 0749             __end_of_lcd_puts 07BA  
        __size_of_UART_Write 000A                    ??_Trigger 0074                    ??___aldiv 0074  
           ?_UART_Write_Text 0070                    ??___lwdiv 0020                    ??___lwmod 0028  
                     _lcd_on 0FC4           __size_of_ResetEcho 0019                       _iomode 006F  
             lcd_init@iodata 002A                       saved_w 007E         __end_of_lcd_iowrite4 066A  
       __end_of_lcd_iowrite8 07FD                    ??_sprintf 002D      __end_of__initialization 0039  
             __pcstackCOMMON 0070                 __pidataBANK0 0FAC             lcd_iowrite4@data 0020  
           lcd_iowrite8@data 0070           __size_of_lcd_clear 0013           __size_of_lcd_ioset 0056  
       PrintDistancias@dist1 002D         PrintDistancias@dist2 0028         PrintDistancias@dist3 0029  
       PrintDistancias@dist4 002A                   __pbssBANK0 0050                   __pbssBANK1 00A0  
          __end_of_ResetEcho 1000                   __pmaintext 05DE                   __pintentry 0004  
                    ?_lcd_on 0070                 ??_UART_Write 0074                   _lcd_ioinit 0776  
                 _distancia1 006B                   _distancia2 006C                   _distancia3 006D  
                 _distancia4 006E                   _lcdcolumns 0069                    ?_lcd_init 0025  
                  ?_lcd_goto 0025                    ?_lcd_send 0022                    ?_lcd_puts 0025  
                 __stringtab 06A8            __end_of_lcd_clear 0FE7            __end_of_lcd_ioset 05DE  
                    _Trigger 0527                      ___aldiv 042A           __end_of_UART_Write 0FC4  
                    ___lwdiv 066A                      ___lwmod 06E4              __size_of_lcd_on 0010  
                    __ptext1 012B                      __ptext2 042A                      __ptext3 0527  
                    __ptext4 0FE7                      __ptext5 0391                      __ptext6 0799  
                    __ptext7 07BA                      __ptext8 07DB                      __ptext9 0FBA  
      __size_of_lcd_iowrite4 003E        __size_of_lcd_iowrite8 0001                      _lcdrows 006A  
                    _dpowers 06B8             ___aldiv@dividend 0024     __end_of_Inicializaciones 0776  
                    _rowaddr 06C2                      _sprintf 02E2                      clrloop0 0FB3  
                 ??_lcd_init 0027                   ??_lcd_goto 0026                   ??_lcd_send 0023  
                 ??_lcd_puts 0078         end_of_initialization 0039               lcd_puts@string 0025  
   __size_of_PrintDistancias 0099             ___aldiv@quotient 002A                 _lcd_iowrite4 062C  
               _lcd_iowrite8 07FC                    _UART_Init 012B               UART_Write@data 0074  
                ?_lcd_ioinit 0070                   lcd_send@rs 0022                   ?_UART_Init 002E  
             __end_of_lcd_on 0FD4            _CalcularDistancia 003C     __size_of_UART_Write_Text 0021  
        start_initialization 0013           ?_CalcularDistancia 0037          ??_CalcularDistancia 0043  
                  _ResetEcho 0FE7          __size_of_lcd_ioinit 0023                     ??_lcd_on 0025  
                __pdataBANK0 0069            ??_PrintDistancias 002B    __end_of_CalcularDistancia 012B  
                __pbssCOMMON 0078                    ___latbits 0001                __pcstackBANK0 0020  
     __CFG_FOSC$INTRC_CLKOUT 0000            __size_of_lcd_init 00D1            __size_of_lcd_goto 0021  
          __size_of_lcd_send 0031                  sprintf@flag 0030            __size_of_lcd_puts 0021  
                sprintf@prec 0034                    __pnvBANK0 006F                   ?_ResetEcho 0070  
           ___lwdiv@dividend 0076                     ?_Trigger 0070                     ?___aldiv 0020  
                   ?___lwdiv 0074                     ?___lwmod 0024                    _lcd_clear 0FD4  
                ??_UART_Init 0032                    _lcd_ioset 0588                    __pstrings 06A8  
           ___lwdiv@quotient 0022            ?_Inicializaciones 0070                     ?_sprintf 002A  
CalcularDistancia@distancia1 003F  CalcularDistancia@distancia2 0040  CalcularDistancia@distancia3 0041  
CalcularDistancia@distancia4 0042                   UART_Init@x 0075            ??_UART_Write_Text 0075  
         ??_Inicializaciones 002B              ___aldiv@divisor 0020            interrupt_function 0004  
            ___aldiv@counter 0028                    clear_ram0 0FB2          CalcularDistancia@d0 0044  
        CalcularDistancia@d1 0046          CalcularDistancia@d2 0048          CalcularDistancia@d3 004A  
        CalcularDistancia@t0 0037          CalcularDistancia@t1 0039          CalcularDistancia@t2 003B  
        CalcularDistancia@t3 003D                   ?_lcd_clear 0070            UART_Init@baudrate 002E  
 __size_of_CalcularDistancia 00EF                   ?_lcd_ioset 0074                  __stringbase 06B7  
               ??_lcd_ioinit 0076                  ??_ResetEcho 0074           __end_of_lcd_ioinit 0799  
           __size_of_Trigger 0061             __size_of___aldiv 008F             __size_of___lwdiv 003E  
           __size_of___lwmod 0034           __end_of__stringtab 06B8                   sprintf@val 0032  
            ___lwdiv@divisor 0074              ___lwdiv@counter 0021                     __ptext10 0749  
                   __ptext11 0FC4                     __ptext20 02E2                     __ptext12 0211  
                   __ptext21 06E4                     __ptext13 0776                     __ptext22 066A  
                   __ptext14 0FD4                     __ptext23 04B9                     __ptext15 0718  
                   __ptext16 07FC                     __ptext17 062C                     __ptext18 0588  
                   __ptext19 003C            __CFG_BOR4V$BOR21V 0000                     _lcd_init 0211  
                   _lcd_goto 07BA                     _lcd_send 0718                     _dispctrl 0058  
                   _lcd_puts 0799             __size_of_sprintf 00AF                __size_of_echo 006E  
        UART_Write_Text@text 0022                __size_of_main 004E              _PrintDistancias 0391  
                ??_lcd_clear 0025                  ??_lcd_ioset 0075                     intlevel1 0000  
                  sprintf@ap 0031                    sprintf@sp 0035             ___lwmod@dividend 0026  
                  stringcode 06B2              _UART_Write_Text 07DB                     sprintf@c 0036  
                   sprintf@f 002A              ___lwmod@divisor 0024              ___lwmod@counter 0029  
                   stringdir 06B2                     stringtab 06A8                 ___aldiv@sign 0029  
                 _UART_Write 0FBA      __end_of_PrintDistancias 042A             UART_Write_Text@i 0020  
