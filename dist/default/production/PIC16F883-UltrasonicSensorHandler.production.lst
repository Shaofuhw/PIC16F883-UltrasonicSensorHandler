

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue Mar 15 20:46:22 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F883
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     	;# 
    43  0001                     	;# 
    44  0002                     	;# 
    45  0003                     	;# 
    46  0004                     	;# 
    47  0005                     	;# 
    48  0006                     	;# 
    49  0007                     	;# 
    50  0009                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000D                     	;# 
    55  000E                     	;# 
    56  000E                     	;# 
    57  000F                     	;# 
    58  0010                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0013                     	;# 
    62  0014                     	;# 
    63  0015                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001B                     	;# 
    71  001B                     	;# 
    72  001C                     	;# 
    73  001D                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  0087                     	;# 
    80  0089                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  008E                     	;# 
    84  008F                     	;# 
    85  0090                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0093                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  0105                     	;# 
   104  0107                     	;# 
   105  0108                     	;# 
   106  0109                     	;# 
   107  010C                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  0185                     	;# 
   113  0187                     	;# 
   114  0188                     	;# 
   115  0189                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  0000                     	;# 
   119  0001                     	;# 
   120  0002                     	;# 
   121  0003                     	;# 
   122  0004                     	;# 
   123  0005                     	;# 
   124  0006                     	;# 
   125  0007                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0089                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  008F                     	;# 
   161  0090                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0093                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0095                     	;# 
   169  0096                     	;# 
   170  0097                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009A                     	;# 
   174  009B                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  0105                     	;# 
   180  0107                     	;# 
   181  0108                     	;# 
   182  0109                     	;# 
   183  010C                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  0185                     	;# 
   189  0187                     	;# 
   190  0188                     	;# 
   191  0189                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0009                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000D                     	;# 
   207  000E                     	;# 
   208  000E                     	;# 
   209  000F                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0013                     	;# 
   214  0014                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001B                     	;# 
   223  001B                     	;# 
   224  001C                     	;# 
   225  001D                     	;# 
   226  001E                     	;# 
   227  001F                     	;# 
   228  0081                     	;# 
   229  0085                     	;# 
   230  0086                     	;# 
   231  0087                     	;# 
   232  0089                     	;# 
   233  008C                     	;# 
   234  008D                     	;# 
   235  008E                     	;# 
   236  008F                     	;# 
   237  0090                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0093                     	;# 
   242  0093                     	;# 
   243  0094                     	;# 
   244  0095                     	;# 
   245  0096                     	;# 
   246  0097                     	;# 
   247  0098                     	;# 
   248  0099                     	;# 
   249  009A                     	;# 
   250  009B                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  009F                     	;# 
   255  0105                     	;# 
   256  0107                     	;# 
   257  0108                     	;# 
   258  0109                     	;# 
   259  010C                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  0185                     	;# 
   265  0187                     	;# 
   266  0188                     	;# 
   267  0189                     	;# 
   268  018C                     	;# 
   269  018D                     	;# 
   270  0000                     	;# 
   271  0001                     	;# 
   272  0002                     	;# 
   273  0003                     	;# 
   274  0004                     	;# 
   275  0005                     	;# 
   276  0006                     	;# 
   277  0007                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000D                     	;# 
   283  000E                     	;# 
   284  000E                     	;# 
   285  000F                     	;# 
   286  0010                     	;# 
   287  0011                     	;# 
   288  0012                     	;# 
   289  0013                     	;# 
   290  0014                     	;# 
   291  0015                     	;# 
   292  0015                     	;# 
   293  0016                     	;# 
   294  0017                     	;# 
   295  0018                     	;# 
   296  0019                     	;# 
   297  001A                     	;# 
   298  001B                     	;# 
   299  001B                     	;# 
   300  001C                     	;# 
   301  001D                     	;# 
   302  001E                     	;# 
   303  001F                     	;# 
   304  0081                     	;# 
   305  0085                     	;# 
   306  0086                     	;# 
   307  0087                     	;# 
   308  0089                     	;# 
   309  008C                     	;# 
   310  008D                     	;# 
   311  008E                     	;# 
   312  008F                     	;# 
   313  0090                     	;# 
   314  0091                     	;# 
   315  0092                     	;# 
   316  0093                     	;# 
   317  0093                     	;# 
   318  0093                     	;# 
   319  0094                     	;# 
   320  0095                     	;# 
   321  0096                     	;# 
   322  0097                     	;# 
   323  0098                     	;# 
   324  0099                     	;# 
   325  009A                     	;# 
   326  009B                     	;# 
   327  009C                     	;# 
   328  009D                     	;# 
   329  009E                     	;# 
   330  009F                     	;# 
   331  0105                     	;# 
   332  0107                     	;# 
   333  0108                     	;# 
   334  0109                     	;# 
   335  010C                     	;# 
   336  010C                     	;# 
   337  010D                     	;# 
   338  010E                     	;# 
   339  010F                     	;# 
   340  0185                     	;# 
   341  0187                     	;# 
   342  0188                     	;# 
   343  0189                     	;# 
   344  018C                     	;# 
   345  018D                     	;# 
   346  0000                     	;# 
   347  0001                     	;# 
   348  0002                     	;# 
   349  0003                     	;# 
   350  0004                     	;# 
   351  0005                     	;# 
   352  0006                     	;# 
   353  0007                     	;# 
   354  0009                     	;# 
   355  000A                     	;# 
   356  000B                     	;# 
   357  000C                     	;# 
   358  000D                     	;# 
   359  000E                     	;# 
   360  000E                     	;# 
   361  000F                     	;# 
   362  0010                     	;# 
   363  0011                     	;# 
   364  0012                     	;# 
   365  0013                     	;# 
   366  0014                     	;# 
   367  0015                     	;# 
   368  0015                     	;# 
   369  0016                     	;# 
   370  0017                     	;# 
   371  0018                     	;# 
   372  0019                     	;# 
   373  001A                     	;# 
   374  001B                     	;# 
   375  001B                     	;# 
   376  001C                     	;# 
   377  001D                     	;# 
   378  001E                     	;# 
   379  001F                     	;# 
   380  0081                     	;# 
   381  0085                     	;# 
   382  0086                     	;# 
   383  0087                     	;# 
   384  0089                     	;# 
   385  008C                     	;# 
   386  008D                     	;# 
   387  008E                     	;# 
   388  008F                     	;# 
   389  0090                     	;# 
   390  0091                     	;# 
   391  0092                     	;# 
   392  0093                     	;# 
   393  0093                     	;# 
   394  0093                     	;# 
   395  0094                     	;# 
   396  0095                     	;# 
   397  0096                     	;# 
   398  0097                     	;# 
   399  0098                     	;# 
   400  0099                     	;# 
   401  009A                     	;# 
   402  009B                     	;# 
   403  009C                     	;# 
   404  009D                     	;# 
   405  009E                     	;# 
   406  009F                     	;# 
   407  0105                     	;# 
   408  0107                     	;# 
   409  0108                     	;# 
   410  0109                     	;# 
   411  010C                     	;# 
   412  010C                     	;# 
   413  010D                     	;# 
   414  010E                     	;# 
   415  010F                     	;# 
   416  0185                     	;# 
   417  0187                     	;# 
   418  0188                     	;# 
   419  0189                     	;# 
   420  018C                     	;# 
   421  018D                     	;# 
   422                           
   423                           	psect	idataBANK0
   424  0F26                     __pidataBANK0:	
   425                           
   426                           ;initializer for _lcdcolumns
   427  0F26  3410               	retlw	16
   428                           
   429                           ;initializer for _lcdrows
   430  0F27  3402               	retlw	2
   431                           
   432                           ;initializer for _distancia1
   433  0F28  34A6               	retlw	low (_dist1| 0)
   434                           
   435                           ;initializer for _distancia2
   436  0F29  34AE               	retlw	low (_dist2| 0)
   437                           
   438                           ;initializer for _distancia3
   439  0F2A  34B6               	retlw	low (_dist3| 0)
   440                           
   441                           ;initializer for _distancia4
   442  0F2B  34BE               	retlw	low (_dist4| 0)
   443                           
   444                           	psect	strings
   445  0699                     __pstrings:	
   446  0699                     stringtab:	
   447  0699                     __stringtab:	
   448                           
   449                           ;	String table - string pointers are 1 byte each
   450  0699  1BFF               	btfsc	btemp+1,7
   451  069A  2EA3               	ljmp	stringcode
   452  069B  1383               	bcf	3,7
   453  069C  187F               	btfsc	btemp+1,0
   454  069D  1783               	bsf	3,7
   455  069E  0800               	movf	0,w
   456  069F  0A84               	incf	4,f
   457  06A0  1903               	skipnz
   458  06A1  0AFF               	incf	btemp+1,f
   459  06A2  0008               	return
   460  06A3                     stringcode:	
   461  06A3                     stringdir:	
   462  06A3  3006               	movlw	high stringdir
   463  06A4  008A               	movwf	10
   464  06A5  0804               	movf	4,w
   465  06A6  0A84               	incf	4,f
   466  06A7  0782               	addwf	2,f
   467  06A8                     __stringbase:	
   468  06A8  3400               	retlw	0
   469  06A9                     __end_of__stringtab:	
   470  06A9                     _dpowers:	
   471  06A9  3401               	retlw	1
   472  06AA  3400               	retlw	0
   473  06AB  340A               	retlw	10
   474  06AC  3400               	retlw	0
   475  06AD  3464               	retlw	100
   476  06AE  3400               	retlw	0
   477  06AF  34E8               	retlw	232
   478  06B0  3403               	retlw	3
   479  06B1  3410               	retlw	16
   480  06B2  3427               	retlw	39
   481  06B3                     __end_of_dpowers:	
   482  06B3                     _rowaddr:	
   483  06B3  3400               	retlw	0
   484  06B4  3440               	retlw	64
   485  06B5  3414               	retlw	20
   486  06B6  3454               	retlw	84
   487  06B7                     __end_of_rowaddr:	
   488  06B7                     STR_14:	
   489  06B7  3425               	retlw	37	;'%'
   490  06B8  3473               	retlw	115	;'s'
   491  06B9  342C               	retlw	44	;','
   492  06BA  3420               	retlw	32	;' '
   493  06BB  3425               	retlw	37	;'%'
   494  06BC  3473               	retlw	115	;'s'
   495  06BD  342C               	retlw	44	;','
   496  06BE  3420               	retlw	32	;' '
   497  06BF  3425               	retlw	37	;'%'
   498  06C0  3473               	retlw	115	;'s'
   499  06C1  342C               	retlw	44	;','
   500  06C2  3420               	retlw	32	;' '
   501  06C3  3425               	retlw	37	;'%'
   502  06C4  3473               	retlw	115	;'s'
   503  06C5  342E               	retlw	46	;'.'
   504  06C6  3400               	retlw	0
   505  06C7  3400               	retlw	0
   506  06C8                     STR_13:	
   507  06C8  3444               	retlw	68	;'D'
   508  06C9  3469               	retlw	105	;'i'
   509  06CA  3473               	retlw	115	;'s'
   510  06CB  3474               	retlw	116	;'t'
   511  06CC  3461               	retlw	97	;'a'
   512  06CD  346E               	retlw	110	;'n'
   513  06CE  3463               	retlw	99	;'c'
   514  06CF  3469               	retlw	105	;'i'
   515  06D0  3461               	retlw	97	;'a'
   516  06D1  3473               	retlw	115	;'s'
   517  06D2  343A               	retlw	58	;':'
   518  06D3  3400               	retlw	0
   519  06D4                     STR_15:	
   520  06D4  3428               	retlw	40	;'('
   521  06D5  346E               	retlw	110	;'n'
   522  06D6  3475               	retlw	117	;'u'
   523  06D7  346C               	retlw	108	;'l'
   524  06D8  346C               	retlw	108	;'l'
   525  06D9  3429               	retlw	41	;')'
   526  06DA  3400               	retlw	0
   527  06DB                     STR_3:	
   528  06DB  3425               	retlw	37	;'%'
   529  06DC  3475               	retlw	117	;'u'
   530  06DD  3420               	retlw	32	;' '
   531  06DE  3420               	retlw	32	;' '
   532  06DF  3420               	retlw	32	;' '
   533  06E0  3400               	retlw	0
   534  06E1  3400               	retlw	0
   535  06E2                     STR_1:	
   536  06E2  344E               	retlw	78	;'N'
   537  06E3  344F               	retlw	79	;'O'
   538  06E4  3450               	retlw	80	;'P'
   539  06E5  3445               	retlw	69	;'E'
   540  06E6  3400               	retlw	0
   541  06E7  3400               	retlw	0
   542  06E8                     STR_2:	
   543  06E8  344F               	retlw	79	;'O'
   544  06E9  3455               	retlw	85	;'U'
   545  06EA  3454               	retlw	84	;'T'
   546  06EB  3400               	retlw	0
   547  06EC  3400               	retlw	0
   548  06DB                     
   549                           ; #config settings
   550  0000                     
   551                           	psect	nvBANK1
   552  00CA                     __pnvBANK1:	
   553  00CA                     _iomode:	
   554  00CA                     	ds	1
   555  000E                     _TMR1	set	14
   556  000B                     _INTCON	set	11
   557  0006                     _PORTB	set	6
   558  001A                     _RCREG	set	26
   559  0010                     _T1CON	set	16
   560  0019                     _TXREG	set	25
   561  00C4                     _CREN	set	196
   562  005F                     _GIE	set	95
   563  0030                     _RB0	set	48
   564  0031                     _RB1	set	49
   565  0032                     _RB2	set	50
   566  0033                     _RB3	set	51
   567  0034                     _RB4	set	52
   568  0035                     _RB5	set	53
   569  0036                     _RB6	set	54
   570  0037                     _RB7	set	55
   571  005B                     _RBIE	set	91
   572  0058                     _RBIF	set	88
   573  0038                     _RC0	set	56
   574  0039                     _RC1	set	57
   575  003A                     _RC2	set	58
   576  003B                     _RC3	set	59
   577  003C                     _RC4	set	60
   578  003D                     _RC5	set	61
   579  0065                     _RCIF	set	101
   580  00C7                     _SPEN	set	199
   581  0080                     _TMR1ON	set	128
   582  0096                     _IOCB	set	150
   583  008F                     _OSCCON	set	143
   584  0099                     _SPBRG	set	153
   585  0086                     _TRISB	set	134
   586  04C2                     _BRGH	set	1218
   587  04C4                     _SYNC	set	1220
   588  0438                     _TRISC0	set	1080
   589  0439                     _TRISC1	set	1081
   590  043A                     _TRISC2	set	1082
   591  043B                     _TRISC3	set	1083
   592  043C                     _TRISC4	set	1084
   593  043D                     _TRISC5	set	1085
   594  043E                     _TRISC6	set	1086
   595  043F                     _TRISC7	set	1087
   596  04C1                     _TRMT	set	1217
   597  04C6                     _TX9	set	1222
   598  04C5                     _TXEN	set	1221
   599  0189                     _ANSELH	set	393
   600                           
   601                           	psect	cinit
   602  0013                     start_initialization:	
   603  0013                     __initialization:	
   604                           
   605                           ; Clear objects allocated to COMMON
   606  0013  01F6               	clrf	__pbssCOMMON& (0+127)
   607  0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   608  0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   609  0016  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   610                           
   611                           ; Clear objects allocated to BANK0
   612  0017  01EF               	clrf	__pbssBANK0& (0+127)
   613                           
   614                           ; Clear objects allocated to BANK1
   615  0018  1383               	bcf	3,7	;select IRP bank0
   616  0019  30A0               	movlw	low __pbssBANK1
   617  001A  0084               	movwf	4
   618  001B  30C6               	movlw	low (__pbssBANK1+38)
   619  001C  158A  272C  118A   	fcall	clear_ram0
   620                           
   621                           ; Initialize objects allocated to BANK0
   622  001F  158A  2726  118A   	fcall	__pidataBANK0	;fetch initializer
   623  0022  00E9               	movwf	__pdataBANK0& (0+127)
   624  0023  158A  2727  118A   	fcall	__pidataBANK0+1	;fetch initializer
   625  0026  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   626  0027  158A  2728  118A   	fcall	__pidataBANK0+2	;fetch initializer
   627  002A  00EB               	movwf	(__pdataBANK0+2)& (0+127)
   628  002B  158A  2729  118A   	fcall	__pidataBANK0+3	;fetch initializer
   629  002E  00EC               	movwf	(__pdataBANK0+3)& (0+127)
   630  002F  158A  272A  118A   	fcall	__pidataBANK0+4	;fetch initializer
   631  0032  00ED               	movwf	(__pdataBANK0+4)& (0+127)
   632  0033  158A  272B         	fcall	__pidataBANK0+5	;fetch initializer
   633  0035  00EE               	movwf	(__pdataBANK0+5)& (0+127)
   634  0036                     end_of_initialization:	
   635                           ;End of C runtime variable initialization code
   636                           
   637  0036                     __end_of__initialization:	
   638  0036  0183               	clrf	3
   639  0037  118A  2CE4         	ljmp	_main	;jump to C main() function
   640                           
   641                           	psect	bssCOMMON
   642  0076                     __pbssCOMMON:	
   643  0076                     _rbon:	
   644  0076                     	ds	2
   645  0078                     _t4:	
   646  0078                     	ds	2
   647                           
   648                           	psect	bssBANK0
   649  006F                     __pbssBANK0:	
   650  006F                     _dispctrl:	
   651  006F                     	ds	1
   652                           
   653                           	psect	dataBANK0
   654  0069                     __pdataBANK0:	
   655  0069                     _lcdcolumns:	
   656  0069                     	ds	1
   657  006A                     _lcdrows:	
   658  006A                     	ds	1
   659  006B                     _distancia1:	
   660  006B                     	ds	1
   661  006C                     _distancia2:	
   662  006C                     	ds	1
   663  006D                     _distancia3:	
   664  006D                     	ds	1
   665  006E                     _distancia4:	
   666  006E                     	ds	1
   667                           
   668                           	psect	bssBANK1
   669  00A0                     __pbssBANK1:	
   670  00A0                     _t5:	
   671  00A0                     	ds	2
   672  00A2                     _t6:	
   673  00A2                     	ds	2
   674  00A4                     _t7:	
   675  00A4                     	ds	2
   676  00A6                     _dist1:	
   677  00A6                     	ds	8
   678  00AE                     _dist2:	
   679  00AE                     	ds	8
   680  00B6                     _dist3:	
   681  00B6                     	ds	8
   682  00BE                     _dist4:	
   683  00BE                     	ds	8
   684                           
   685                           	psect	clrtext
   686  0F2C                     clear_ram0:	
   687                           ;	Called with FSR containing the base address, and
   688                           ;	W with the last address+1
   689                           
   690  0F2C  0064               	clrwdt	;clear the watchdog before getting into this loop
   691  0F2D                     clrloop0:	
   692  0F2D  0180               	clrf	0	;clear RAM location pointed to by FSR
   693  0F2E  0A84               	incf	4,f	;increment pointer
   694  0F2F  0604               	xorwf	4,w	;XOR with final address
   695  0F30  1903               	btfsc	3,2	;have we reached the end yet?
   696  0F31  3400               	retlw	0	;all done for this memory range, return
   697  0F32  0604               	xorwf	4,w	;XOR again to restore value
   698  0F33  2F2D               	goto	clrloop0	;do the next byte
   699                           
   700                           	psect	cstackBANK1
   701  00C6                     __pcstackBANK1:	
   702  00C6                     ??_main:	
   703                           
   704                           ; 1 bytes @ 0x0
   705  00C6                     	ds	4
   706                           
   707                           	psect	cstackCOMMON
   708  0070                     __pcstackCOMMON:	
   709  0070                     ?_lcd_ioinit:	
   710  0070                     ?_lcd_iowrite4:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_lcd_iowrite8:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_lcd_clear:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_lcd_on:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_UART_Write:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_UART_Write_Text:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_Inicializaciones:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_Trigger:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_ResetEcho:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_main:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_echo:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ??_echo:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     lcd_iowrite8@data:	
   747                           ; 1 bytes @ 0x0
   748                           
   749                           
   750                           ; 1 bytes @ 0x0
   751  0070                     	ds	4
   752  0074                     ?_lcd_ioset:	
   753  0074                     ??_lcd_iowrite8:	
   754                           ; 1 bytes @ 0x4
   755                           
   756  0074                     ??_UART_Write:	
   757                           ; 1 bytes @ 0x4
   758                           
   759  0074                     ??_Trigger:	
   760                           ; 1 bytes @ 0x4
   761                           
   762  0074                     ??_ResetEcho:	
   763                           ; 1 bytes @ 0x4
   764                           
   765  0074                     ??___aldiv:	
   766                           ; 1 bytes @ 0x4
   767                           
   768  0074                     ??___lwdiv:	
   769                           ; 1 bytes @ 0x4
   770                           
   771  0074                     lcd_ioset@out:	
   772                           ; 1 bytes @ 0x4
   773                           
   774  0074                     UART_Write@data:	
   775                           ; 1 bytes @ 0x4
   776                           
   777                           
   778                           ; 1 bytes @ 0x4
   779  0074                     	ds	1
   780  0075                     ??_lcd_ioset:	
   781  0075                     ??_UART_Write_Text:	
   782                           ; 1 bytes @ 0x5
   783                           
   784  0075                     ??___lwmod:	
   785                           ; 1 bytes @ 0x5
   786                           
   787  0075                     lcd_ioset@pin:	
   788                           ; 1 bytes @ 0x5
   789                           
   790                           
   791                           ; 1 bytes @ 0x5
   792  0075                     	ds	1
   793  0076                     ??_lcd_puts:	
   794                           
   795                           	psect	cstackBANK0
   796  0020                     __pcstackBANK0:	
   797                           ; 1 bytes @ 0x6
   798                           
   799  0020                     ??_lcd_ioinit:	
   800  0020                     ??_lcd_iowrite4:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0020                     ?___lwdiv:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0020                     ?___aldiv:	
   807                           ; 2 bytes @ 0x0
   808                           
   809  0020                     UART_Write_Text@text:	
   810                           ; 4 bytes @ 0x0
   811                           
   812  0020                     ___lwdiv@divisor:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0020                     ___aldiv@divisor:	
   816                           ; 2 bytes @ 0x0
   817                           
   818                           
   819                           ; 4 bytes @ 0x0
   820  0020                     	ds	1
   821  0021                     lcd_ioinit@iodata:	
   822  0021                     UART_Write_Text@i:	
   823                           ; 1 bytes @ 0x1
   824                           
   825                           
   826                           ; 2 bytes @ 0x1
   827  0021                     	ds	1
   828  0022                     lcd_ioinit@i:	
   829  0022                     lcd_iowrite4@data:	
   830                           ; 1 bytes @ 0x2
   831                           
   832  0022                     ___lwdiv@dividend:	
   833                           ; 1 bytes @ 0x2
   834                           
   835                           
   836                           ; 2 bytes @ 0x2
   837  0022                     	ds	1
   838  0023                     lcd_iowrite4@i:	
   839                           
   840                           ; 1 bytes @ 0x3
   841  0023                     	ds	1
   842  0024                     ?_lcd_send:	
   843  0024                     lcd_send@rs:	
   844                           ; 1 bytes @ 0x4
   845                           
   846  0024                     ___lwdiv@counter:	
   847                           ; 1 bytes @ 0x4
   848                           
   849  0024                     ___aldiv@dividend:	
   850                           ; 1 bytes @ 0x4
   851                           
   852                           
   853                           ; 4 bytes @ 0x4
   854  0024                     	ds	1
   855  0025                     ??_lcd_send:	
   856  0025                     ___lwdiv@quotient:	
   857                           ; 1 bytes @ 0x5
   858                           
   859                           
   860                           ; 2 bytes @ 0x5
   861  0025                     	ds	1
   862  0026                     lcd_send@data:	
   863                           
   864                           ; 1 bytes @ 0x6
   865  0026                     	ds	1
   866  0027                     ?_lcd_init:	
   867  0027                     ??_lcd_clear:	
   868                           ; 1 bytes @ 0x7
   869                           
   870  0027                     ??_lcd_on:	
   871                           ; 1 bytes @ 0x7
   872                           
   873  0027                     ?_lcd_goto:	
   874                           ; 1 bytes @ 0x7
   875                           
   876  0027                     ?_lcd_puts:	
   877                           ; 1 bytes @ 0x7
   878                           
   879  0027                     ?___lwmod:	
   880                           ; 1 bytes @ 0x7
   881                           
   882  0027                     lcd_init@cols:	
   883                           ; 2 bytes @ 0x7
   884                           
   885  0027                     lcd_goto@row:	
   886                           ; 1 bytes @ 0x7
   887                           
   888  0027                     lcd_puts@string:	
   889                           ; 1 bytes @ 0x7
   890                           
   891  0027                     ___lwmod@divisor:	
   892                           ; 2 bytes @ 0x7
   893                           
   894                           
   895                           ; 2 bytes @ 0x7
   896  0027                     	ds	1
   897  0028                     ??_lcd_goto:	
   898  0028                     lcd_init@rows:	
   899                           ; 1 bytes @ 0x8
   900                           
   901  0028                     ___aldiv@counter:	
   902                           ; 1 bytes @ 0x8
   903                           
   904                           
   905                           ; 1 bytes @ 0x8
   906  0028                     	ds	1
   907  0029                     ??_lcd_init:	
   908  0029                     lcd_goto@col:	
   909                           ; 1 bytes @ 0x9
   910                           
   911  0029                     ___aldiv@sign:	
   912                           ; 1 bytes @ 0x9
   913                           
   914  0029                     ___lwmod@dividend:	
   915                           ; 1 bytes @ 0x9
   916                           
   917                           
   918                           ; 2 bytes @ 0x9
   919  0029                     	ds	1
   920  002A                     ___aldiv@quotient:	
   921                           
   922                           ; 4 bytes @ 0xA
   923  002A                     	ds	1
   924  002B                     ___lwmod@counter:	
   925                           
   926                           ; 1 bytes @ 0xB
   927  002B                     	ds	1
   928  002C                     ?_sprintf:	
   929  002C                     lcd_init@iodata:	
   930                           ; 2 bytes @ 0xC
   931                           
   932  002C                     sprintf@f:	
   933                           ; 1 bytes @ 0xC
   934                           
   935                           
   936                           ; 1 bytes @ 0xC
   937  002C                     	ds	1
   938  002D                     ??_Inicializaciones:	
   939                           
   940                           ; 1 bytes @ 0xD
   941  002D                     	ds	1
   942  002E                     ?_UART_Init:	
   943  002E                     UART_Init@baudrate:	
   944                           ; 1 bytes @ 0xE
   945                           
   946                           
   947                           ; 4 bytes @ 0xE
   948  002E                     	ds	3
   949  0031                     ??_sprintf:	
   950                           
   951                           ; 1 bytes @ 0x11
   952  0031                     	ds	1
   953  0032                     ??_UART_Init:	
   954                           
   955                           ; 1 bytes @ 0x12
   956  0032                     	ds	2
   957  0034                     sprintf@flag:	
   958                           
   959                           ; 1 bytes @ 0x14
   960  0034                     	ds	1
   961  0035                     sprintf@val:	
   962                           
   963                           ; 2 bytes @ 0x15
   964  0035                     	ds	2
   965  0037                     sprintf@prec:	
   966                           
   967                           ; 1 bytes @ 0x17
   968  0037                     	ds	1
   969  0038                     sprintf@ap:	
   970                           
   971                           ; 1 bytes @ 0x18
   972  0038                     	ds	1
   973  0039                     sprintf@cp:	
   974                           
   975                           ; 2 bytes @ 0x19
   976  0039                     	ds	2
   977  003B                     sprintf@c:	
   978                           
   979                           ; 1 bytes @ 0x1B
   980  003B                     	ds	1
   981  003C                     sprintf@sp:	
   982                           
   983                           ; 1 bytes @ 0x1C
   984  003C                     	ds	1
   985  003D                     ?_CalcularDistancia:	
   986  003D                     ?_PrintDistancias:	
   987                           ; 1 bytes @ 0x1D
   988                           
   989  003D                     PrintDistancias@dist2:	
   990                           ; 1 bytes @ 0x1D
   991                           
   992  003D                     CalcularDistancia@t0:	
   993                           ; 1 bytes @ 0x1D
   994                           
   995                           
   996                           ; 2 bytes @ 0x1D
   997  003D                     	ds	1
   998  003E                     PrintDistancias@dist3:	
   999  003E                     UART_Init@x:	
  1000                           ; 1 bytes @ 0x1E
  1001                           
  1002                           
  1003                           ; 2 bytes @ 0x1E
  1004  003E                     	ds	1
  1005  003F                     PrintDistancias@dist4:	
  1006  003F                     CalcularDistancia@t1:	
  1007                           ; 1 bytes @ 0x1F
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x1F
  1011  003F                     	ds	1
  1012  0040                     ??_PrintDistancias:	
  1013                           
  1014                           ; 1 bytes @ 0x20
  1015  0040                     	ds	1
  1016  0041                     CalcularDistancia@t2:	
  1017                           
  1018                           ; 2 bytes @ 0x21
  1019  0041                     	ds	2
  1020  0043                     CalcularDistancia@t3:	
  1021                           
  1022                           ; 2 bytes @ 0x23
  1023  0043                     	ds	2
  1024  0045                     CalcularDistancia@distancia1:	
  1025  0045                     PrintDistancias@dist:	
  1026                           ; 1 bytes @ 0x25
  1027                           
  1028                           
  1029                           ; 35 bytes @ 0x25
  1030  0045                     	ds	1
  1031  0046                     CalcularDistancia@distancia2:	
  1032                           
  1033                           ; 1 bytes @ 0x26
  1034  0046                     	ds	1
  1035  0047                     CalcularDistancia@distancia3:	
  1036                           
  1037                           ; 1 bytes @ 0x27
  1038  0047                     	ds	1
  1039  0048                     CalcularDistancia@distancia4:	
  1040                           
  1041                           ; 1 bytes @ 0x28
  1042  0048                     	ds	1
  1043  0049                     ??_CalcularDistancia:	
  1044                           
  1045                           ; 1 bytes @ 0x29
  1046  0049                     	ds	1
  1047  004A                     CalcularDistancia@d0:	
  1048                           
  1049                           ; 2 bytes @ 0x2A
  1050  004A                     	ds	2
  1051  004C                     CalcularDistancia@d1:	
  1052                           
  1053                           ; 2 bytes @ 0x2C
  1054  004C                     	ds	2
  1055  004E                     CalcularDistancia@d2:	
  1056                           
  1057                           ; 2 bytes @ 0x2E
  1058  004E                     	ds	2
  1059  0050                     CalcularDistancia@d3:	
  1060                           
  1061                           ; 2 bytes @ 0x30
  1062  0050                     	ds	24
  1063  0068                     PrintDistancias@dist1:	
  1064                           
  1065                           ; 1 bytes @ 0x48
  1066  0068                     	ds	1
  1067                           
  1068                           	psect	maintext
  1069  04E4                     __pmaintext:	
  1070 ;;
  1071 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1072 ;;
  1073 ;; *************** function _main *****************
  1074 ;; Defined at:
  1075 ;;		line 49 in file "main.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : B00/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1089 ;;      Params:         0       0       0       0
  1090 ;;      Locals:         0       0       0       0
  1091 ;;      Temps:          0       0       4       0
  1092 ;;      Totals:         0       0       4       0
  1093 ;;Total ram usage:        4 bytes
  1094 ;; Hardware stack levels required when called:    6
  1095 ;; This function calls:
  1096 ;;		_CalcularDistancia
  1097 ;;		_Inicializaciones
  1098 ;;		_PrintDistancias
  1099 ;;		_ResetEcho
  1100 ;;		_Trigger
  1101 ;;		_UART_Init
  1102 ;; This function is called by:
  1103 ;;		Startup code after reset
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           
  1108                           ;psect for function _main
  1109  04E4                     _main:	
  1110                           
  1111                           ;main.c: 51: Inicializaciones();
  1112                           
  1113                           ;incstack = 0
  1114                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1115  04E4  118A  27D2  118A   	fcall	_Inicializaciones
  1116                           
  1117                           ;main.c: 52: UART_Init(9600);
  1118  04E7  3000               	movlw	0
  1119  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  1120  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  1121  04EA  00B1               	movwf	UART_Init@baudrate+3
  1122  04EB  3000               	movlw	0
  1123  04EC  00B0               	movwf	UART_Init@baudrate+2
  1124  04ED  3025               	movlw	37
  1125  04EE  00AF               	movwf	UART_Init@baudrate+1
  1126  04EF  3080               	movlw	128
  1127  04F0  00AE               	movwf	UART_Init@baudrate
  1128  04F1  118A  2128  118A   	fcall	_UART_Init
  1129  04F4                     l2452:	
  1130                           ;main.c: 54: while(1)
  1131                           
  1132                           
  1133                           ;main.c: 55: {
  1134                           ;main.c: 62: Trigger();
  1135  04F4  118A  25E2  118A   	fcall	_Trigger
  1136                           
  1137                           ;main.c: 63: CalcularDistancia(t4, t5, t6, t7, &distancia1, &distancia2, &distancia3, &d
      +                          istancia4);
  1138  04F7  0879               	movf	_t4+1,w
  1139  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1140  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1141  04FA  00BE               	movwf	CalcularDistancia@t0+1
  1142  04FB  0878               	movf	_t4,w
  1143  04FC  00BD               	movwf	CalcularDistancia@t0
  1144  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  1145  04FE  1303               	bcf	3,6	;RP1=0, select bank1
  1146  04FF  0821               	movf	(_t5+1)^(0+128),w
  1147  0500  1283               	bcf	3,5	;RP0=0, select bank0
  1148  0501  1303               	bcf	3,6	;RP1=0, select bank0
  1149  0502  00C0               	movwf	CalcularDistancia@t1+1
  1150  0503  1683               	bsf	3,5	;RP0=1, select bank1
  1151  0504  1303               	bcf	3,6	;RP1=0, select bank1
  1152  0505  0820               	movf	_t5^(0+128),w
  1153  0506  1283               	bcf	3,5	;RP0=0, select bank0
  1154  0507  1303               	bcf	3,6	;RP1=0, select bank0
  1155  0508  00BF               	movwf	CalcularDistancia@t1
  1156  0509  1683               	bsf	3,5	;RP0=1, select bank1
  1157  050A  1303               	bcf	3,6	;RP1=0, select bank1
  1158  050B  0823               	movf	(_t6+1)^(0+128),w
  1159  050C  1283               	bcf	3,5	;RP0=0, select bank0
  1160  050D  1303               	bcf	3,6	;RP1=0, select bank0
  1161  050E  00C2               	movwf	CalcularDistancia@t2+1
  1162  050F  1683               	bsf	3,5	;RP0=1, select bank1
  1163  0510  1303               	bcf	3,6	;RP1=0, select bank1
  1164  0511  0822               	movf	_t6^(0+128),w
  1165  0512  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0513  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0514  00C1               	movwf	CalcularDistancia@t2
  1168  0515  1683               	bsf	3,5	;RP0=1, select bank1
  1169  0516  1303               	bcf	3,6	;RP1=0, select bank1
  1170  0517  0825               	movf	(_t7+1)^(0+128),w
  1171  0518  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0519  1303               	bcf	3,6	;RP1=0, select bank0
  1173  051A  00C4               	movwf	CalcularDistancia@t3+1
  1174  051B  1683               	bsf	3,5	;RP0=1, select bank1
  1175  051C  1303               	bcf	3,6	;RP1=0, select bank1
  1176  051D  0824               	movf	_t7^(0+128),w
  1177  051E  1283               	bcf	3,5	;RP0=0, select bank0
  1178  051F  1303               	bcf	3,6	;RP1=0, select bank0
  1179  0520  00C3               	movwf	CalcularDistancia@t3
  1180  0521  306B               	movlw	(low (_distancia1| 0))& (0+255)
  1181  0522  1683               	bsf	3,5	;RP0=1, select bank1
  1182  0523  1303               	bcf	3,6	;RP1=0, select bank1
  1183  0524  00C6               	movwf	??_main^(0+128)
  1184  0525  0846               	movf	??_main^(0+128),w
  1185  0526  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0527  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0528  00C5               	movwf	CalcularDistancia@distancia1
  1188  0529  306C               	movlw	(low (_distancia2| 0))& (0+255)
  1189  052A  1683               	bsf	3,5	;RP0=1, select bank1
  1190  052B  1303               	bcf	3,6	;RP1=0, select bank1
  1191  052C  00C7               	movwf	(??_main+1)^(0+128)
  1192  052D  0847               	movf	(??_main+1)^(0+128),w
  1193  052E  1283               	bcf	3,5	;RP0=0, select bank0
  1194  052F  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0530  00C6               	movwf	CalcularDistancia@distancia2
  1196  0531  306D               	movlw	(low (_distancia3| 0))& (0+255)
  1197  0532  1683               	bsf	3,5	;RP0=1, select bank1
  1198  0533  1303               	bcf	3,6	;RP1=0, select bank1
  1199  0534  00C8               	movwf	(??_main+2)^(0+128)
  1200  0535  0848               	movf	(??_main+2)^(0+128),w
  1201  0536  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0537  1303               	bcf	3,6	;RP1=0, select bank0
  1203  0538  00C7               	movwf	CalcularDistancia@distancia3
  1204  0539  306E               	movlw	(low (_distancia4| 0))& (0+255)
  1205  053A  1683               	bsf	3,5	;RP0=1, select bank1
  1206  053B  1303               	bcf	3,6	;RP1=0, select bank1
  1207  053C  00C9               	movwf	(??_main+3)^(0+128)
  1208  053D  0849               	movf	(??_main+3)^(0+128),w
  1209  053E  1283               	bcf	3,5	;RP0=0, select bank0
  1210  053F  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0540  00C8               	movwf	CalcularDistancia@distancia4
  1212  0541  118A  2039  118A   	fcall	_CalcularDistancia
  1213                           
  1214                           ;main.c: 64: PrintDistancias(dist1, dist2, dist3, dist4);
  1215  0544  30AE               	movlw	(low (_dist2| 0))& (0+255)
  1216  0545  1683               	bsf	3,5	;RP0=1, select bank1
  1217  0546  1303               	bcf	3,6	;RP1=0, select bank1
  1218  0547  00C6               	movwf	??_main^(0+128)
  1219  0548  0846               	movf	??_main^(0+128),w
  1220  0549  1283               	bcf	3,5	;RP0=0, select bank0
  1221  054A  1303               	bcf	3,6	;RP1=0, select bank0
  1222  054B  00BD               	movwf	PrintDistancias@dist2
  1223  054C  30B6               	movlw	(low (_dist3| 0))& (0+255)
  1224  054D  1683               	bsf	3,5	;RP0=1, select bank1
  1225  054E  1303               	bcf	3,6	;RP1=0, select bank1
  1226  054F  00C7               	movwf	(??_main+1)^(0+128)
  1227  0550  0847               	movf	(??_main+1)^(0+128),w
  1228  0551  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0552  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0553  00BE               	movwf	PrintDistancias@dist3
  1231  0554  30BE               	movlw	(low (_dist4| 0))& (0+255)
  1232  0555  1683               	bsf	3,5	;RP0=1, select bank1
  1233  0556  1303               	bcf	3,6	;RP1=0, select bank1
  1234  0557  00C8               	movwf	(??_main+2)^(0+128)
  1235  0558  0848               	movf	(??_main+2)^(0+128),w
  1236  0559  1283               	bcf	3,5	;RP0=0, select bank0
  1237  055A  1303               	bcf	3,6	;RP1=0, select bank0
  1238  055B  00BF               	movwf	PrintDistancias@dist4
  1239  055C  30A6               	movlw	(low (_dist1| 0))& (0+255)
  1240  055D  118A  2564  118A   	fcall	_PrintDistancias
  1241                           
  1242                           ;main.c: 65: ResetEcho();
  1243  0560  158A  2761  118A   	fcall	_ResetEcho
  1244  0563  2CF4               	goto	l2452
  1245  0564                     __end_of_main:	
  1246                           ;main.c: 66: }
  1247                           ;main.c: 67: return;
  1248                           
  1249                           
  1250                           	psect	text1
  1251  0128                     __ptext1:	
  1252 ;; *************** function _UART_Init *****************
  1253 ;; Defined at:
  1254 ;;		line 3 in file "Uart.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  baudrate        4   14[BANK0 ] const long 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  x               2   30[BANK0 ] unsigned int 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      unsigned char 
  1261 ;; Registers used:
  1262 ;;		wreg, status,2, status,0, pclath, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1268 ;;      Params:         0       4       0       0
  1269 ;;      Locals:         0       2       0       0
  1270 ;;      Temps:          0      12       0       0
  1271 ;;      Totals:         0      18       0       0
  1272 ;;Total ram usage:       18 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; Hardware stack levels required when called:    2
  1275 ;; This function calls:
  1276 ;;		___aldiv
  1277 ;; This function is called by:
  1278 ;;		_main
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           
  1283                           ;psect for function _UART_Init
  1284  0128                     _UART_Init:	
  1285                           
  1286                           ;Uart.c: 5: unsigned int x;
  1287                           ;Uart.c: 6: x = (8000000 - baudrate*64)/(baudrate*64);
  1288                           
  1289                           ;incstack = 0
  1290                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1291  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1292  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1293  012A  082E               	movf	UART_Init@baudrate,w
  1294  012B  00B2               	movwf	??_UART_Init
  1295  012C  082F               	movf	UART_Init@baudrate+1,w
  1296  012D  00B3               	movwf	??_UART_Init+1
  1297  012E  0830               	movf	UART_Init@baudrate+2,w
  1298  012F  00B4               	movwf	??_UART_Init+2
  1299  0130  0831               	movf	UART_Init@baudrate+3,w
  1300  0131  00B5               	movwf	??_UART_Init+3
  1301  0132  3006               	movlw	6
  1302  0133                     u2485:	
  1303  0133  1003               	clrc
  1304  0134  0DB2               	rlf	??_UART_Init,f
  1305  0135  0DB3               	rlf	??_UART_Init+1,f
  1306  0136  0DB4               	rlf	??_UART_Init+2,f
  1307  0137  0DB5               	rlf	??_UART_Init+3,f
  1308  0138  3EFF               	addlw	-1
  1309  0139  1D03               	skipz
  1310  013A  2933               	goto	u2485
  1311  013B  0835               	movf	??_UART_Init+3,w
  1312  013C  00A3               	movwf	___aldiv@divisor+3
  1313  013D  0834               	movf	??_UART_Init+2,w
  1314  013E  00A2               	movwf	___aldiv@divisor+2
  1315  013F  0833               	movf	??_UART_Init+1,w
  1316  0140  00A1               	movwf	___aldiv@divisor+1
  1317  0141  0832               	movf	??_UART_Init,w
  1318  0142  00A0               	movwf	___aldiv@divisor
  1319  0143  3000               	movlw	0
  1320  0144  00B6               	movwf	??_UART_Init+4
  1321  0145  3012               	movlw	18
  1322  0146  00B7               	movwf	??_UART_Init+5
  1323  0147  307A               	movlw	122
  1324  0148  00B8               	movwf	??_UART_Init+6
  1325  0149  3000               	movlw	0
  1326  014A  00B9               	movwf	??_UART_Init+7
  1327  014B  082E               	movf	UART_Init@baudrate,w
  1328  014C  00BA               	movwf	??_UART_Init+8
  1329  014D  082F               	movf	UART_Init@baudrate+1,w
  1330  014E  00BB               	movwf	??_UART_Init+9
  1331  014F  0830               	movf	UART_Init@baudrate+2,w
  1332  0150  00BC               	movwf	??_UART_Init+10
  1333  0151  0831               	movf	UART_Init@baudrate+3,w
  1334  0152  00BD               	movwf	??_UART_Init+11
  1335  0153  3006               	movlw	6
  1336  0154                     u2495:	
  1337  0154  1003               	clrc
  1338  0155  0DBA               	rlf	??_UART_Init+8,f
  1339  0156  0DBB               	rlf	??_UART_Init+9,f
  1340  0157  0DBC               	rlf	??_UART_Init+10,f
  1341  0158  0DBD               	rlf	??_UART_Init+11,f
  1342  0159  3EFF               	addlw	-1
  1343  015A  1D03               	skipz
  1344  015B  2954               	goto	u2495
  1345  015C  09BA               	comf	??_UART_Init+8,f
  1346  015D  09BB               	comf	??_UART_Init+9,f
  1347  015E  09BC               	comf	??_UART_Init+10,f
  1348  015F  09BD               	comf	??_UART_Init+11,f
  1349  0160  0ABA               	incf	??_UART_Init+8,f
  1350  0161  1903               	skipnz
  1351  0162  0ABB               	incf	??_UART_Init+9,f
  1352  0163  1903               	skipnz
  1353  0164  0ABC               	incf	??_UART_Init+10,f
  1354  0165  1903               	skipnz
  1355  0166  0ABD               	incf	??_UART_Init+11,f
  1356  0167  083A               	movf	??_UART_Init+8,w
  1357  0168  07B6               	addwf	??_UART_Init+4,f
  1358  0169  083B               	movf	??_UART_Init+9,w
  1359  016A  1803               	skipnc
  1360  016B  0F3B               	incfsz	??_UART_Init+9,w
  1361  016C  296E               	goto	u2500
  1362  016D  296F               	goto	u2501
  1363  016E                     u2500:	
  1364  016E  07B7               	addwf	??_UART_Init+5,f
  1365  016F                     u2501:	
  1366  016F  083C               	movf	??_UART_Init+10,w
  1367  0170  1803               	skipnc
  1368  0171  0F3C               	incfsz	??_UART_Init+10,w
  1369  0172  2974               	goto	u2502
  1370  0173  2975               	goto	u2503
  1371  0174                     u2502:	
  1372  0174  07B8               	addwf	??_UART_Init+6,f
  1373  0175                     u2503:	
  1374  0175  083D               	movf	??_UART_Init+11,w
  1375  0176  1803               	skipnc
  1376  0177  0A3D               	incf	??_UART_Init+11,w
  1377  0178  07B9               	addwf	??_UART_Init+7,f
  1378  0179  0839               	movf	??_UART_Init+7,w
  1379  017A  00A7               	movwf	___aldiv@dividend+3
  1380  017B  0838               	movf	??_UART_Init+6,w
  1381  017C  00A6               	movwf	___aldiv@dividend+2
  1382  017D  0837               	movf	??_UART_Init+5,w
  1383  017E  00A5               	movwf	___aldiv@dividend+1
  1384  017F  0836               	movf	??_UART_Init+4,w
  1385  0180  00A4               	movwf	___aldiv@dividend
  1386  0181  118A  23D1  118A   	fcall	___aldiv
  1387  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1388  0185  1303               	bcf	3,6	;RP1=0, select bank0
  1389  0186  0821               	movf	?___aldiv+1,w
  1390  0187  00BF               	movwf	UART_Init@x+1
  1391  0188  0820               	movf	?___aldiv,w
  1392  0189  00BE               	movwf	UART_Init@x
  1393                           
  1394                           ;Uart.c: 7: if(x>255)
  1395  018A  3001               	movlw	1
  1396  018B  023F               	subwf	UART_Init@x+1,w
  1397  018C  3000               	movlw	0
  1398  018D  1903               	skipnz
  1399  018E  023E               	subwf	UART_Init@x,w
  1400  018F  1C03               	skipc
  1401  0190  29F4               	goto	l2288
  1402                           
  1403                           ;Uart.c: 8: {
  1404                           ;Uart.c: 9: x = (8000000 - baudrate*16)/(baudrate*16);
  1405  0191  082E               	movf	UART_Init@baudrate,w
  1406  0192  00B2               	movwf	??_UART_Init
  1407  0193  082F               	movf	UART_Init@baudrate+1,w
  1408  0194  00B3               	movwf	??_UART_Init+1
  1409  0195  0830               	movf	UART_Init@baudrate+2,w
  1410  0196  00B4               	movwf	??_UART_Init+2
  1411  0197  0831               	movf	UART_Init@baudrate+3,w
  1412  0198  00B5               	movwf	??_UART_Init+3
  1413  0199  3004               	movlw	4
  1414  019A                     u2525:	
  1415  019A  1003               	clrc
  1416  019B  0DB2               	rlf	??_UART_Init,f
  1417  019C  0DB3               	rlf	??_UART_Init+1,f
  1418  019D  0DB4               	rlf	??_UART_Init+2,f
  1419  019E  0DB5               	rlf	??_UART_Init+3,f
  1420  019F  3EFF               	addlw	-1
  1421  01A0  1D03               	skipz
  1422  01A1  299A               	goto	u2525
  1423  01A2  0835               	movf	??_UART_Init+3,w
  1424  01A3  00A3               	movwf	___aldiv@divisor+3
  1425  01A4  0834               	movf	??_UART_Init+2,w
  1426  01A5  00A2               	movwf	___aldiv@divisor+2
  1427  01A6  0833               	movf	??_UART_Init+1,w
  1428  01A7  00A1               	movwf	___aldiv@divisor+1
  1429  01A8  0832               	movf	??_UART_Init,w
  1430  01A9  00A0               	movwf	___aldiv@divisor
  1431  01AA  3000               	movlw	0
  1432  01AB  00B6               	movwf	??_UART_Init+4
  1433  01AC  3012               	movlw	18
  1434  01AD  00B7               	movwf	??_UART_Init+5
  1435  01AE  307A               	movlw	122
  1436  01AF  00B8               	movwf	??_UART_Init+6
  1437  01B0  3000               	movlw	0
  1438  01B1  00B9               	movwf	??_UART_Init+7
  1439  01B2  082E               	movf	UART_Init@baudrate,w
  1440  01B3  00BA               	movwf	??_UART_Init+8
  1441  01B4  082F               	movf	UART_Init@baudrate+1,w
  1442  01B5  00BB               	movwf	??_UART_Init+9
  1443  01B6  0830               	movf	UART_Init@baudrate+2,w
  1444  01B7  00BC               	movwf	??_UART_Init+10
  1445  01B8  0831               	movf	UART_Init@baudrate+3,w
  1446  01B9  00BD               	movwf	??_UART_Init+11
  1447  01BA  3004               	movlw	4
  1448  01BB                     u2535:	
  1449  01BB  1003               	clrc
  1450  01BC  0DBA               	rlf	??_UART_Init+8,f
  1451  01BD  0DBB               	rlf	??_UART_Init+9,f
  1452  01BE  0DBC               	rlf	??_UART_Init+10,f
  1453  01BF  0DBD               	rlf	??_UART_Init+11,f
  1454  01C0  3EFF               	addlw	-1
  1455  01C1  1D03               	skipz
  1456  01C2  29BB               	goto	u2535
  1457  01C3  09BA               	comf	??_UART_Init+8,f
  1458  01C4  09BB               	comf	??_UART_Init+9,f
  1459  01C5  09BC               	comf	??_UART_Init+10,f
  1460  01C6  09BD               	comf	??_UART_Init+11,f
  1461  01C7  0ABA               	incf	??_UART_Init+8,f
  1462  01C8  1903               	skipnz
  1463  01C9  0ABB               	incf	??_UART_Init+9,f
  1464  01CA  1903               	skipnz
  1465  01CB  0ABC               	incf	??_UART_Init+10,f
  1466  01CC  1903               	skipnz
  1467  01CD  0ABD               	incf	??_UART_Init+11,f
  1468  01CE  083A               	movf	??_UART_Init+8,w
  1469  01CF  07B6               	addwf	??_UART_Init+4,f
  1470  01D0  083B               	movf	??_UART_Init+9,w
  1471  01D1  1803               	skipnc
  1472  01D2  0F3B               	incfsz	??_UART_Init+9,w
  1473  01D3  29D5               	goto	u2540
  1474  01D4  29D6               	goto	u2541
  1475  01D5                     u2540:	
  1476  01D5  07B7               	addwf	??_UART_Init+5,f
  1477  01D6                     u2541:	
  1478  01D6  083C               	movf	??_UART_Init+10,w
  1479  01D7  1803               	skipnc
  1480  01D8  0F3C               	incfsz	??_UART_Init+10,w
  1481  01D9  29DB               	goto	u2542
  1482  01DA  29DC               	goto	u2543
  1483  01DB                     u2542:	
  1484  01DB  07B8               	addwf	??_UART_Init+6,f
  1485  01DC                     u2543:	
  1486  01DC  083D               	movf	??_UART_Init+11,w
  1487  01DD  1803               	skipnc
  1488  01DE  0A3D               	incf	??_UART_Init+11,w
  1489  01DF  07B9               	addwf	??_UART_Init+7,f
  1490  01E0  0839               	movf	??_UART_Init+7,w
  1491  01E1  00A7               	movwf	___aldiv@dividend+3
  1492  01E2  0838               	movf	??_UART_Init+6,w
  1493  01E3  00A6               	movwf	___aldiv@dividend+2
  1494  01E4  0837               	movf	??_UART_Init+5,w
  1495  01E5  00A5               	movwf	___aldiv@dividend+1
  1496  01E6  0836               	movf	??_UART_Init+4,w
  1497  01E7  00A4               	movwf	___aldiv@dividend
  1498  01E8  118A  23D1  118A   	fcall	___aldiv
  1499  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1500  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1501  01ED  0821               	movf	?___aldiv+1,w
  1502  01EE  00BF               	movwf	UART_Init@x+1
  1503  01EF  0820               	movf	?___aldiv,w
  1504  01F0  00BE               	movwf	UART_Init@x
  1505                           
  1506                           ;Uart.c: 10: BRGH = 1;
  1507  01F1  1683               	bsf	3,5	;RP0=1, select bank1
  1508  01F2  1303               	bcf	3,6	;RP1=0, select bank1
  1509  01F3  1518               	bsf	24,2	;volatile
  1510  01F4                     l2288:	
  1511                           
  1512                           ;Uart.c: 11: }
  1513                           ;Uart.c: 12: if(x<256)
  1514  01F4  3001               	movlw	1
  1515  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1516  01F6  023F               	subwf	UART_Init@x+1,w
  1517  01F7  3000               	movlw	0
  1518  01F8  1903               	skipnz
  1519  01F9  023E               	subwf	UART_Init@x,w
  1520  01FA  1803               	skipnc
  1521  01FB  0008               	return
  1522                           
  1523                           ;Uart.c: 13: {
  1524                           ;Uart.c: 14: BRGH = 0;
  1525  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  1526  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  1527  01FE  1118               	bcf	24,2	;volatile
  1528                           
  1529                           ;Uart.c: 15: SPBRG = x;
  1530  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1532  0201  083E               	movf	UART_Init@x,w
  1533  0202  1683               	bsf	3,5	;RP0=1, select bank1
  1534  0203  1303               	bcf	3,6	;RP1=0, select bank1
  1535  0204  0099               	movwf	25	;volatile
  1536                           
  1537                           ;Uart.c: 16: SYNC = 0;
  1538  0205  1218               	bcf	24,4	;volatile
  1539                           
  1540                           ;Uart.c: 17: SPEN = 1;
  1541  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0208  1798               	bsf	24,7	;volatile
  1544                           
  1545                           ;Uart.c: 18: TRISC7 = 1;
  1546  0209  1683               	bsf	3,5	;RP0=1, select bank1
  1547  020A  1303               	bcf	3,6	;RP1=0, select bank1
  1548  020B  1787               	bsf	7,7	;volatile
  1549                           
  1550                           ;Uart.c: 19: TRISC6 = 0;
  1551  020C  1307               	bcf	7,6	;volatile
  1552                           
  1553                           ;Uart.c: 20: TX9 = 0;
  1554  020D  1318               	bcf	24,6	;volatile
  1555                           
  1556                           ;Uart.c: 21: CREN = 1;
  1557  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1558  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1559  0210  1618               	bsf	24,4	;volatile
  1560                           
  1561                           ;Uart.c: 22: TXEN = 1;
  1562  0211  1683               	bsf	3,5	;RP0=1, select bank1
  1563  0212  1303               	bcf	3,6	;RP1=0, select bank1
  1564  0213  1698               	bsf	24,5	;volatile
  1565                           
  1566                           ;Uart.c: 23: return 1;
  1567                           ;	Return value of _UART_Init is never used
  1568  0214  0008               	return
  1569  0215                     __end_of_UART_Init:	
  1570                           ;Uart.c: 24: }
  1571                           ;Uart.c: 25: return 0;
  1572                           ;	Return value of _UART_Init is never used
  1573                           
  1574                           
  1575                           	psect	text2
  1576  03D1                     __ptext2:	
  1577 ;; *************** function ___aldiv *****************
  1578 ;; Defined at:
  1579 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\aldiv.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  divisor         4    0[BANK0 ] long 
  1582 ;;  dividend        4    4[BANK0 ] long 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  quotient        4   10[BANK0 ] long 
  1585 ;;  sign            1    9[BANK0 ] unsigned char 
  1586 ;;  counter         1    8[BANK0 ] unsigned char 
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  4    0[BANK0 ] long 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1596 ;;      Params:         0       8       0       0
  1597 ;;      Locals:         0       6       0       0
  1598 ;;      Temps:          1       0       0       0
  1599 ;;      Totals:         1      14       0       0
  1600 ;;Total ram usage:       15 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_UART_Init
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function ___aldiv
  1612  03D1                     ___aldiv:	
  1613                           
  1614                           ;incstack = 0
  1615                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1616  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1617  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1618  03D3  01A9               	clrf	___aldiv@sign
  1619  03D4  1FA3               	btfss	___aldiv@divisor+3,7
  1620  03D5  2BE3               	goto	l513
  1621  03D6  09A0               	comf	___aldiv@divisor,f
  1622  03D7  09A1               	comf	___aldiv@divisor+1,f
  1623  03D8  09A2               	comf	___aldiv@divisor+2,f
  1624  03D9  09A3               	comf	___aldiv@divisor+3,f
  1625  03DA  0AA0               	incf	___aldiv@divisor,f
  1626  03DB  1903               	skipnz
  1627  03DC  0AA1               	incf	___aldiv@divisor+1,f
  1628  03DD  1903               	skipnz
  1629  03DE  0AA2               	incf	___aldiv@divisor+2,f
  1630  03DF  1903               	skipnz
  1631  03E0  0AA3               	incf	___aldiv@divisor+3,f
  1632  03E1  01A9               	clrf	___aldiv@sign
  1633  03E2  0AA9               	incf	___aldiv@sign,f
  1634  03E3                     l513:	
  1635  03E3  1FA7               	btfss	___aldiv@dividend+3,7
  1636  03E4  2BF4               	goto	l2250
  1637  03E5  09A4               	comf	___aldiv@dividend,f
  1638  03E6  09A5               	comf	___aldiv@dividend+1,f
  1639  03E7  09A6               	comf	___aldiv@dividend+2,f
  1640  03E8  09A7               	comf	___aldiv@dividend+3,f
  1641  03E9  0AA4               	incf	___aldiv@dividend,f
  1642  03EA  1903               	skipnz
  1643  03EB  0AA5               	incf	___aldiv@dividend+1,f
  1644  03EC  1903               	skipnz
  1645  03ED  0AA6               	incf	___aldiv@dividend+2,f
  1646  03EE  1903               	skipnz
  1647  03EF  0AA7               	incf	___aldiv@dividend+3,f
  1648  03F0  3001               	movlw	1
  1649  03F1  00F4               	movwf	??___aldiv
  1650  03F2  0874               	movf	??___aldiv,w
  1651  03F3  06A9               	xorwf	___aldiv@sign,f
  1652  03F4                     l2250:	
  1653  03F4  3000               	movlw	0
  1654  03F5  00AD               	movwf	___aldiv@quotient+3
  1655  03F6  3000               	movlw	0
  1656  03F7  00AC               	movwf	___aldiv@quotient+2
  1657  03F8  3000               	movlw	0
  1658  03F9  00AB               	movwf	___aldiv@quotient+1
  1659  03FA  3000               	movlw	0
  1660  03FB  00AA               	movwf	___aldiv@quotient
  1661  03FC  0823               	movf	___aldiv@divisor+3,w
  1662  03FD  0422               	iorwf	___aldiv@divisor+2,w
  1663  03FE  0421               	iorwf	___aldiv@divisor+1,w
  1664  03FF  0420               	iorwf	___aldiv@divisor,w
  1665  0400  1903               	skipnz
  1666  0401  2C49               	goto	l2272
  1667  0402  01A8               	clrf	___aldiv@counter
  1668  0403  0AA8               	incf	___aldiv@counter,f
  1669  0404                     l2258:	
  1670  0404  1BA3               	btfsc	___aldiv@divisor+3,7
  1671  0405  2C14               	goto	l2260
  1672  0406  3001               	movlw	1
  1673  0407  00F4               	movwf	??___aldiv
  1674  0408                     u2415:	
  1675  0408  1003               	clrc
  1676  0409  0DA0               	rlf	___aldiv@divisor,f
  1677  040A  0DA1               	rlf	___aldiv@divisor+1,f
  1678  040B  0DA2               	rlf	___aldiv@divisor+2,f
  1679  040C  0DA3               	rlf	___aldiv@divisor+3,f
  1680  040D  0BF4               	decfsz	??___aldiv,f
  1681  040E  2C08               	goto	u2415
  1682  040F  3001               	movlw	1
  1683  0410  00F4               	movwf	??___aldiv
  1684  0411  0874               	movf	??___aldiv,w
  1685  0412  07A8               	addwf	___aldiv@counter,f
  1686  0413  2C04               	goto	l2258
  1687  0414                     l2260:	
  1688  0414  3001               	movlw	1
  1689  0415  00F4               	movwf	??___aldiv
  1690  0416                     u2435:	
  1691  0416  1003               	clrc
  1692  0417  0DAA               	rlf	___aldiv@quotient,f
  1693  0418  0DAB               	rlf	___aldiv@quotient+1,f
  1694  0419  0DAC               	rlf	___aldiv@quotient+2,f
  1695  041A  0DAD               	rlf	___aldiv@quotient+3,f
  1696  041B  0BF4               	decfsz	??___aldiv,f
  1697  041C  2C16               	goto	u2435
  1698  041D  0823               	movf	___aldiv@divisor+3,w
  1699  041E  0227               	subwf	___aldiv@dividend+3,w
  1700  041F  1D03               	skipz
  1701  0420  2C2B               	goto	u2445
  1702  0421  0822               	movf	___aldiv@divisor+2,w
  1703  0422  0226               	subwf	___aldiv@dividend+2,w
  1704  0423  1D03               	skipz
  1705  0424  2C2B               	goto	u2445
  1706  0425  0821               	movf	___aldiv@divisor+1,w
  1707  0426  0225               	subwf	___aldiv@dividend+1,w
  1708  0427  1D03               	skipz
  1709  0428  2C2B               	goto	u2445
  1710  0429  0820               	movf	___aldiv@divisor,w
  1711  042A  0224               	subwf	___aldiv@dividend,w
  1712  042B                     u2445:	
  1713  042B  1C03               	skipc
  1714  042C  2C3C               	goto	l2268
  1715  042D  0820               	movf	___aldiv@divisor,w
  1716  042E  02A4               	subwf	___aldiv@dividend,f
  1717  042F  0821               	movf	___aldiv@divisor+1,w
  1718  0430  1C03               	skipc
  1719  0431  0F21               	incfsz	___aldiv@divisor+1,w
  1720  0432  02A5               	subwf	___aldiv@dividend+1,f
  1721  0433  0822               	movf	___aldiv@divisor+2,w
  1722  0434  1C03               	skipc
  1723  0435  0F22               	incfsz	___aldiv@divisor+2,w
  1724  0436  02A6               	subwf	___aldiv@dividend+2,f
  1725  0437  0823               	movf	___aldiv@divisor+3,w
  1726  0438  1C03               	skipc
  1727  0439  0F23               	incfsz	___aldiv@divisor+3,w
  1728  043A  02A7               	subwf	___aldiv@dividend+3,f
  1729  043B  142A               	bsf	___aldiv@quotient,0
  1730  043C                     l2268:	
  1731  043C  3001               	movlw	1
  1732  043D                     u2455:	
  1733  043D  1003               	clrc
  1734  043E  0CA3               	rrf	___aldiv@divisor+3,f
  1735  043F  0CA2               	rrf	___aldiv@divisor+2,f
  1736  0440  0CA1               	rrf	___aldiv@divisor+1,f
  1737  0441  0CA0               	rrf	___aldiv@divisor,f
  1738  0442  3EFF               	addlw	-1
  1739  0443  1D03               	skipz
  1740  0444  2C3D               	goto	u2455
  1741  0445  3001               	movlw	1
  1742  0446  02A8               	subwf	___aldiv@counter,f
  1743  0447  1D03               	btfss	3,2
  1744  0448  2C14               	goto	l2260
  1745  0449                     l2272:	
  1746  0449  0829               	movf	___aldiv@sign,w
  1747  044A  1903               	btfsc	3,2
  1748  044B  2C57               	goto	l2276
  1749  044C  09AA               	comf	___aldiv@quotient,f
  1750  044D  09AB               	comf	___aldiv@quotient+1,f
  1751  044E  09AC               	comf	___aldiv@quotient+2,f
  1752  044F  09AD               	comf	___aldiv@quotient+3,f
  1753  0450  0AAA               	incf	___aldiv@quotient,f
  1754  0451  1903               	skipnz
  1755  0452  0AAB               	incf	___aldiv@quotient+1,f
  1756  0453  1903               	skipnz
  1757  0454  0AAC               	incf	___aldiv@quotient+2,f
  1758  0455  1903               	skipnz
  1759  0456  0AAD               	incf	___aldiv@quotient+3,f
  1760  0457                     l2276:	
  1761  0457  082D               	movf	___aldiv@quotient+3,w
  1762  0458  00A3               	movwf	?___aldiv+3
  1763  0459  082C               	movf	___aldiv@quotient+2,w
  1764  045A  00A2               	movwf	?___aldiv+2
  1765  045B  082B               	movf	___aldiv@quotient+1,w
  1766  045C  00A1               	movwf	?___aldiv+1
  1767  045D  082A               	movf	___aldiv@quotient,w
  1768  045E  00A0               	movwf	?___aldiv
  1769  045F  0008               	return
  1770  0460                     __end_of___aldiv:	
  1771                           
  1772                           	psect	text3
  1773  05E2                     __ptext3:	
  1774 ;; *************** function _Trigger *****************
  1775 ;; Defined at:
  1776 ;;		line 31 in file "Funciones.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1790 ;;      Params:         0       0       0       0
  1791 ;;      Locals:         0       0       0       0
  1792 ;;      Temps:          2       0       0       0
  1793 ;;      Totals:         2       0       0       0
  1794 ;;Total ram usage:        2 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    1
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           
  1805                           ;psect for function _Trigger
  1806  05E2                     _Trigger:	
  1807                           
  1808                           ;Funciones.c: 32: TRISB = 0b00010000;
  1809                           
  1810                           ;incstack = 0
  1811                           ; Regs used in _Trigger: [wreg]
  1812  05E2  3010               	movlw	16
  1813  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  1814  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  1815  05E5  0086               	movwf	6	;volatile
  1816                           
  1817                           ;Funciones.c: 33: RB0 = 1;
  1818  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1819  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  1820  05E8  1406               	bsf	6,0	;volatile
  1821                           
  1822                           ;Funciones.c: 34: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1823  05E9  3006               	movlw	6
  1824  05EA  00F4               	movwf	??_Trigger
  1825  05EB                     u2677:	
  1826  05EB  0BF4               	decfsz	??_Trigger,f
  1827  05EC  2DEB               	goto	u2677
  1828  05ED  0000               	nop
  1829                           
  1830                           ;Funciones.c: 35: RB0 = 0;
  1831  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  1832  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  1833  05F0  1006               	bcf	6,0	;volatile
  1834                           
  1835                           ;Funciones.c: 37: _delay((unsigned long)((50)*(8000000/4000.0)));
  1836  05F1  3082               	movlw	130
  1837  05F2  00F5               	movwf	??_Trigger+1
  1838  05F3  30DD               	movlw	221
  1839  05F4  00F4               	movwf	??_Trigger
  1840  05F5                     u2687:	
  1841  05F5  0BF4               	decfsz	??_Trigger,f
  1842  05F6  2DF5               	goto	u2687
  1843  05F7  0BF5               	decfsz	??_Trigger+1,f
  1844  05F8  2DF5               	goto	u2687
  1845  05F9  2DFA               	nop2
  1846                           
  1847                           ;Funciones.c: 39: TRISB = 0b00100000;
  1848  05FA  3020               	movlw	32
  1849  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  1850  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  1851  05FD  0086               	movwf	6	;volatile
  1852                           
  1853                           ;Funciones.c: 40: RB1 = 1;
  1854  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  1855  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  1856  0600  1486               	bsf	6,1	;volatile
  1857                           
  1858                           ;Funciones.c: 41: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1859  0601  3006               	movlw	6
  1860  0602  00F4               	movwf	??_Trigger
  1861  0603                     u2697:	
  1862  0603  0BF4               	decfsz	??_Trigger,f
  1863  0604  2E03               	goto	u2697
  1864  0605  0000               	nop
  1865                           
  1866                           ;Funciones.c: 42: RB1 = 0;
  1867  0606  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0607  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0608  1086               	bcf	6,1	;volatile
  1870                           
  1871                           ;Funciones.c: 44: _delay((unsigned long)((50)*(8000000/4000.0)));
  1872  0609  3082               	movlw	130
  1873  060A  00F5               	movwf	??_Trigger+1
  1874  060B  30DD               	movlw	221
  1875  060C  00F4               	movwf	??_Trigger
  1876  060D                     u2707:	
  1877  060D  0BF4               	decfsz	??_Trigger,f
  1878  060E  2E0D               	goto	u2707
  1879  060F  0BF5               	decfsz	??_Trigger+1,f
  1880  0610  2E0D               	goto	u2707
  1881  0611  2E12               	nop2
  1882                           
  1883                           ;Funciones.c: 46: TRISB = 0b01000000;
  1884  0612  3040               	movlw	64
  1885  0613  1683               	bsf	3,5	;RP0=1, select bank1
  1886  0614  1303               	bcf	3,6	;RP1=0, select bank1
  1887  0615  0086               	movwf	6	;volatile
  1888                           
  1889                           ;Funciones.c: 47: RB2 = 1;
  1890  0616  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0617  1303               	bcf	3,6	;RP1=0, select bank0
  1892  0618  1506               	bsf	6,2	;volatile
  1893                           
  1894                           ;Funciones.c: 48: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1895  0619  3006               	movlw	6
  1896  061A  00F4               	movwf	??_Trigger
  1897  061B                     u2717:	
  1898  061B  0BF4               	decfsz	??_Trigger,f
  1899  061C  2E1B               	goto	u2717
  1900  061D  0000               	nop
  1901                           
  1902                           ;Funciones.c: 49: RB2 = 0;
  1903  061E  1283               	bcf	3,5	;RP0=0, select bank0
  1904  061F  1303               	bcf	3,6	;RP1=0, select bank0
  1905  0620  1106               	bcf	6,2	;volatile
  1906                           
  1907                           ;Funciones.c: 51: _delay((unsigned long)((50)*(8000000/4000.0)));
  1908  0621  3082               	movlw	130
  1909  0622  00F5               	movwf	??_Trigger+1
  1910  0623  30DD               	movlw	221
  1911  0624  00F4               	movwf	??_Trigger
  1912  0625                     u2727:	
  1913  0625  0BF4               	decfsz	??_Trigger,f
  1914  0626  2E25               	goto	u2727
  1915  0627  0BF5               	decfsz	??_Trigger+1,f
  1916  0628  2E25               	goto	u2727
  1917  0629  2E2A               	nop2
  1918                           
  1919                           ;Funciones.c: 53: TRISB = 0b10000000;
  1920  062A  3080               	movlw	128
  1921  062B  1683               	bsf	3,5	;RP0=1, select bank1
  1922  062C  1303               	bcf	3,6	;RP1=0, select bank1
  1923  062D  0086               	movwf	6	;volatile
  1924                           
  1925                           ;Funciones.c: 54: RB3 = 1;
  1926  062E  1283               	bcf	3,5	;RP0=0, select bank0
  1927  062F  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0630  1586               	bsf	6,3	;volatile
  1929                           
  1930                           ;Funciones.c: 55: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1931  0631  3006               	movlw	6
  1932  0632  00F4               	movwf	??_Trigger
  1933  0633                     u2737:	
  1934  0633  0BF4               	decfsz	??_Trigger,f
  1935  0634  2E33               	goto	u2737
  1936  0635  0000               	nop
  1937                           
  1938                           ;Funciones.c: 56: RB3= 0;
  1939  0636  1283               	bcf	3,5	;RP0=0, select bank0
  1940  0637  1303               	bcf	3,6	;RP1=0, select bank0
  1941  0638  1186               	bcf	6,3	;volatile
  1942                           
  1943                           ;Funciones.c: 58: _delay((unsigned long)((50)*(8000000/4000.0)));
  1944  0639  3082               	movlw	130
  1945  063A  00F5               	movwf	??_Trigger+1
  1946  063B  30DD               	movlw	221
  1947  063C  00F4               	movwf	??_Trigger
  1948  063D                     u2747:	
  1949  063D  0BF4               	decfsz	??_Trigger,f
  1950  063E  2E3D               	goto	u2747
  1951  063F  0BF5               	decfsz	??_Trigger+1,f
  1952  0640  2E3D               	goto	u2747
  1953  0641  2E42               	nop2
  1954  0642  0008               	return
  1955  0643                     __end_of_Trigger:	
  1956                           
  1957                           	psect	text4
  1958  0F61                     __ptext4:	
  1959 ;; *************** function _ResetEcho *****************
  1960 ;; Defined at:
  1961 ;;		line 109 in file "Funciones.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1975 ;;      Params:         0       0       0       0
  1976 ;;      Locals:         0       0       0       0
  1977 ;;      Temps:          2       0       0       0
  1978 ;;      Totals:         2       0       0       0
  1979 ;;Total ram usage:        2 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    1
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           
  1990                           ;psect for function _ResetEcho
  1991  0F61                     _ResetEcho:	
  1992                           
  1993                           ;Funciones.c: 111: TRISB = 0b00000000;
  1994                           
  1995                           ;incstack = 0
  1996                           ; Regs used in _ResetEcho: [wreg+status,2]
  1997  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  1999  0F63  0186               	clrf	6	;volatile
  2000                           
  2001                           ;Funciones.c: 112: _delay((unsigned long)((5)*(8000000/4000.0)));
  2002  0F64  300D               	movlw	13
  2003  0F65  00F5               	movwf	??_ResetEcho+1
  2004  0F66  30FB               	movlw	251
  2005  0F67  00F4               	movwf	??_ResetEcho
  2006  0F68                     u2757:	
  2007  0F68  0BF4               	decfsz	??_ResetEcho,f
  2008  0F69  2F68               	goto	u2757
  2009  0F6A  0BF5               	decfsz	??_ResetEcho+1,f
  2010  0F6B  2F68               	goto	u2757
  2011  0F6C  2F6D               	nop2
  2012                           
  2013                           ;Funciones.c: 113: PORTB = 0b00000000;
  2014  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0F6F  0186               	clrf	6	;volatile
  2017                           
  2018                           ;Funciones.c: 114: _delay((unsigned long)((5)*(8000000/4000.0)));
  2019  0F70  300D               	movlw	13
  2020  0F71  00F5               	movwf	??_ResetEcho+1
  2021  0F72  30FB               	movlw	251
  2022  0F73  00F4               	movwf	??_ResetEcho
  2023  0F74                     u2767:	
  2024  0F74  0BF4               	decfsz	??_ResetEcho,f
  2025  0F75  2F74               	goto	u2767
  2026  0F76  0BF5               	decfsz	??_ResetEcho+1,f
  2027  0F77  2F74               	goto	u2767
  2028  0F78  2F79               	nop2
  2029  0F79  0008               	return
  2030  0F7A                     __end_of_ResetEcho:	
  2031                           
  2032                           	psect	text5
  2033  0564                     __ptext5:	
  2034 ;; *************** function _PrintDistancias *****************
  2035 ;; Defined at:
  2036 ;;		line 88 in file "Funciones.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  dist1           1    wreg     PTR unsigned char 
  2039 ;;		 -> dist1(8), 
  2040 ;;  dist2           1   29[BANK0 ] PTR unsigned char 
  2041 ;;		 -> dist2(8), 
  2042 ;;  dist3           1   30[BANK0 ] PTR unsigned char 
  2043 ;;		 -> dist3(8), 
  2044 ;;  dist4           1   31[BANK0 ] PTR unsigned char 
  2045 ;;		 -> dist4(8), 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  dist1           1   72[BANK0 ] PTR unsigned char 
  2048 ;;		 -> dist1(8), 
  2049 ;;  dist           35   37[BANK0 ] unsigned char [35]
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2059 ;;      Params:         0       3       0       0
  2060 ;;      Locals:         0      36       0       0
  2061 ;;      Temps:          0       5       0       0
  2062 ;;      Totals:         0      44       0       0
  2063 ;;Total ram usage:       44 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    5
  2066 ;; This function calls:
  2067 ;;		_UART_Write_Text
  2068 ;;		_lcd_goto
  2069 ;;		_lcd_puts
  2070 ;;		_sprintf
  2071 ;; This function is called by:
  2072 ;;		_main
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           
  2077                           ;psect for function _PrintDistancias
  2078  0564                     _PrintDistancias:	
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in _PrintDistancias: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2082                           ;PrintDistancias@dist1 stored from wreg
  2083  0564  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0565  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0566  00E8               	movwf	PrintDistancias@dist1
  2086                           
  2087                           ;Funciones.c: 91: lcd_goto(0, 0);
  2088  0567  01A7               	clrf	lcd_goto@row
  2089  0568  3000               	movlw	0
  2090  0569  158A  279B  118A   	fcall	_lcd_goto
  2091                           
  2092                           ;Funciones.c: 92: lcd_puts("Distancias:");
  2093  056C  3020               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2094  056D  1283               	bcf	3,5	;RP0=0, select bank0
  2095  056E  1303               	bcf	3,6	;RP1=0, select bank0
  2096  056F  00A7               	movwf	lcd_puts@string
  2097  0570  3080               	movlw	128
  2098  0571  00A8               	movwf	lcd_puts@string+1
  2099  0572  158A  27BC  118A   	fcall	_lcd_puts
  2100                           
  2101                           ;Funciones.c: 93: lcd_goto(12,0);
  2102  0575  1283               	bcf	3,5	;RP0=0, select bank0
  2103  0576  1303               	bcf	3,6	;RP1=0, select bank0
  2104  0577  01A7               	clrf	lcd_goto@row
  2105  0578  300C               	movlw	12
  2106  0579  158A  279B  118A   	fcall	_lcd_goto
  2107                           
  2108                           ;Funciones.c: 94: lcd_puts(dist1);
  2109  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2110  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2111  057E  0868               	movf	PrintDistancias@dist1,w
  2112  057F  00A7               	movwf	lcd_puts@string
  2113  0580  3000               	movlw	0
  2114  0581  00A8               	movwf	lcd_puts@string+1
  2115  0582  158A  27BC  118A   	fcall	_lcd_puts
  2116                           
  2117                           ;Funciones.c: 95: lcd_goto(0,1);
  2118  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2119  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2120  0587  01A7               	clrf	lcd_goto@row
  2121  0588  0AA7               	incf	lcd_goto@row,f
  2122  0589  3000               	movlw	0
  2123  058A  158A  279B  118A   	fcall	_lcd_goto
  2124                           
  2125                           ;Funciones.c: 96: lcd_puts(dist2);
  2126  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2127  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2128  058F  083D               	movf	PrintDistancias@dist2,w
  2129  0590  00A7               	movwf	lcd_puts@string
  2130  0591  3000               	movlw	0
  2131  0592  00A8               	movwf	lcd_puts@string+1
  2132  0593  158A  27BC  118A   	fcall	_lcd_puts
  2133                           
  2134                           ;Funciones.c: 97: lcd_goto(6,1);
  2135  0596  1283               	bcf	3,5	;RP0=0, select bank0
  2136  0597  1303               	bcf	3,6	;RP1=0, select bank0
  2137  0598  01A7               	clrf	lcd_goto@row
  2138  0599  0AA7               	incf	lcd_goto@row,f
  2139  059A  3006               	movlw	6
  2140  059B  158A  279B  118A   	fcall	_lcd_goto
  2141                           
  2142                           ;Funciones.c: 98: lcd_puts(dist3);
  2143  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2144  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2145  05A0  083E               	movf	PrintDistancias@dist3,w
  2146  05A1  00A7               	movwf	lcd_puts@string
  2147  05A2  3000               	movlw	0
  2148  05A3  00A8               	movwf	lcd_puts@string+1
  2149  05A4  158A  27BC  118A   	fcall	_lcd_puts
  2150                           
  2151                           ;Funciones.c: 99: lcd_goto(12,1);
  2152  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  2153  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  2154  05A9  01A7               	clrf	lcd_goto@row
  2155  05AA  0AA7               	incf	lcd_goto@row,f
  2156  05AB  300C               	movlw	12
  2157  05AC  158A  279B  118A   	fcall	_lcd_goto
  2158                           
  2159                           ;Funciones.c: 100: lcd_puts(dist4);
  2160  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  2161  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  2162  05B1  083F               	movf	PrintDistancias@dist4,w
  2163  05B2  00A7               	movwf	lcd_puts@string
  2164  05B3  3000               	movlw	0
  2165  05B4  00A8               	movwf	lcd_puts@string+1
  2166  05B5  158A  27BC  118A   	fcall	_lcd_puts
  2167                           
  2168                           ;Funciones.c: 103: char dist[35];
  2169                           ;Funciones.c: 104: sprintf(dist,"%s, %s, %s, %s.\0", dist1, dist2, dist3, dist4);
  2170  05B8  300F               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2171  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  2172  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  2173  05BB  00C0               	movwf	??_PrintDistancias
  2174  05BC  0840               	movf	??_PrintDistancias,w
  2175  05BD  00AC               	movwf	sprintf@f
  2176  05BE  0868               	movf	PrintDistancias@dist1,w
  2177  05BF  00C1               	movwf	??_PrintDistancias+1
  2178  05C0  0841               	movf	??_PrintDistancias+1,w
  2179  05C1  00AD               	movwf	low ((?_sprintf| 0+1))
  2180  05C2  083D               	movf	PrintDistancias@dist2,w
  2181  05C3  00C2               	movwf	??_PrintDistancias+2
  2182  05C4  0842               	movf	??_PrintDistancias+2,w
  2183  05C5  00AE               	movwf	low ((?_sprintf| 0+2))
  2184  05C6  083E               	movf	PrintDistancias@dist3,w
  2185  05C7  00C3               	movwf	??_PrintDistancias+3
  2186  05C8  0843               	movf	??_PrintDistancias+3,w
  2187  05C9  00AF               	movwf	low ((?_sprintf| 0+3))
  2188  05CA  083F               	movf	PrintDistancias@dist4,w
  2189  05CB  00C4               	movwf	??_PrintDistancias+4
  2190  05CC  0844               	movf	??_PrintDistancias+4,w
  2191  05CD  00B0               	movwf	low ((?_sprintf| 0+4))
  2192  05CE  3045               	movlw	(low (PrintDistancias@dist| 0))& (0+255)
  2193  05CF  118A  2215  118A   	fcall	_sprintf
  2194                           
  2195                           ;Funciones.c: 105: UART_Write_Text(dist);
  2196  05D2  3045               	movlw	(low (PrintDistancias@dist| 0))& (0+255)
  2197  05D3  158A  277A  118A   	fcall	_UART_Write_Text
  2198                           
  2199                           ;Funciones.c: 106: _delay((unsigned long)((50)*(8000000/4000.0)));
  2200  05D6  3082               	movlw	130
  2201  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  2202  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  2203  05D9  00C1               	movwf	??_PrintDistancias+1
  2204  05DA  30DD               	movlw	221
  2205  05DB  00C0               	movwf	??_PrintDistancias
  2206  05DC                     u2777:	
  2207  05DC  0BC0               	decfsz	??_PrintDistancias,f
  2208  05DD  2DDC               	goto	u2777
  2209  05DE  0BC1               	decfsz	??_PrintDistancias+1,f
  2210  05DF  2DDC               	goto	u2777
  2211  05E0  2DE1               	nop2
  2212  05E1  0008               	return
  2213  05E2                     __end_of_PrintDistancias:	
  2214                           
  2215                           	psect	text6
  2216  0FBC                     __ptext6:	
  2217 ;; *************** function _lcd_puts *****************
  2218 ;; Defined at:
  2219 ;;		line 178 in file "LCD.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  string          2    7[BANK0 ] PTR const unsigned char 
  2222 ;;		 -> dist4(8), dist3(8), dist2(8), dist1(8), 
  2223 ;;		 -> STR_13(12), 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2235 ;;      Params:         0       2       0       0
  2236 ;;      Locals:         0       0       0       0
  2237 ;;      Temps:          0       0       0       0
  2238 ;;      Totals:         0       2       0       0
  2239 ;;Total ram usage:        2 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    4
  2242 ;; This function calls:
  2243 ;;		_lcd_send
  2244 ;; This function is called by:
  2245 ;;		_PrintDistancias
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           
  2250                           ;psect for function _lcd_puts
  2251  0FBC                     _lcd_puts:	
  2252  0FBC                     l2166:	
  2253                           ;LCD.c: 180: while (*string != '\0')
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2257                           
  2258  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0FBE  0828               	movf	lcd_puts@string+1,w
  2261  0FBF  00FF               	movwf	127
  2262  0FC0  0827               	movf	lcd_puts@string,w
  2263  0FC1  0084               	movwf	4
  2264  0FC2  118A  2699  158A   	fcall	stringtab
  2265  0FC5  3A00               	xorlw	0
  2266  0FC6  1903               	btfsc	3,2
  2267  0FC7  0008               	return
  2268                           
  2269                           ;LCD.c: 181: lcd_send( *string++, 1 );
  2270  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0FCA  01A4               	clrf	lcd_send@rs
  2273  0FCB  0AA4               	incf	lcd_send@rs,f
  2274  0FCC  0828               	movf	lcd_puts@string+1,w
  2275  0FCD  00FF               	movwf	127
  2276  0FCE  0827               	movf	lcd_puts@string,w
  2277  0FCF  0084               	movwf	4
  2278  0FD0  118A  2699  158A   	fcall	stringtab
  2279  0FD3  118A  279F  158A   	fcall	_lcd_send
  2280  0FD6  3001               	movlw	1
  2281  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0FD9  07A7               	addwf	lcd_puts@string,f
  2284  0FDA  1803               	skipnc
  2285  0FDB  0AA8               	incf	lcd_puts@string+1,f
  2286  0FDC  2FBC               	goto	l2166
  2287  0FDD                     __end_of_lcd_puts:	
  2288                           
  2289                           	psect	text7
  2290  0F9B                     __ptext7:	
  2291 ;; *************** function _lcd_goto *****************
  2292 ;; Defined at:
  2293 ;;		line 149 in file "LCD.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  col             1    wreg     unsigned char 
  2296 ;;  row             1    7[BANK0 ] unsigned char 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  col             1    9[BANK0 ] unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2308 ;;      Params:         0       1       0       0
  2309 ;;      Locals:         0       1       0       0
  2310 ;;      Temps:          0       1       0       0
  2311 ;;      Totals:         0       3       0       0
  2312 ;;Total ram usage:        3 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    4
  2315 ;; This function calls:
  2316 ;;		_lcd_send
  2317 ;; This function is called by:
  2318 ;;		_PrintDistancias
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           
  2323                           ;psect for function _lcd_goto
  2324  0F9B                     _lcd_goto:	
  2325                           
  2326                           ;incstack = 0
  2327                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2328                           ;lcd_goto@col stored from wreg
  2329  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  2330  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  2331  0F9D  00A9               	movwf	lcd_goto@col
  2332                           
  2333                           ;LCD.c: 152: if (row >= lcdrows)
  2334  0F9E  086A               	movf	_lcdrows,w
  2335  0F9F  0227               	subwf	lcd_goto@row,w
  2336  0FA0  1C03               	skipc
  2337  0FA1  2FA7               	goto	l2154
  2338                           
  2339                           ;LCD.c: 153: row = lcdrows - 1;
  2340  0FA2  086A               	movf	_lcdrows,w
  2341  0FA3  3EFF               	addlw	255
  2342  0FA4  00A8               	movwf	??_lcd_goto
  2343  0FA5  0828               	movf	??_lcd_goto,w
  2344  0FA6  00A7               	movwf	lcd_goto@row
  2345  0FA7                     l2154:	
  2346                           
  2347                           ;LCD.c: 154: if (col >= lcdcolumns)
  2348  0FA7  0869               	movf	_lcdcolumns,w
  2349  0FA8  0229               	subwf	lcd_goto@col,w
  2350  0FA9  1C03               	skipc
  2351  0FAA  2FB0               	goto	l2158
  2352                           
  2353                           ;LCD.c: 155: col = lcdcolumns - 1;
  2354  0FAB  0869               	movf	_lcdcolumns,w
  2355  0FAC  3EFF               	addlw	255
  2356  0FAD  00A8               	movwf	??_lcd_goto
  2357  0FAE  0828               	movf	??_lcd_goto,w
  2358  0FAF  00A9               	movwf	lcd_goto@col
  2359  0FB0                     l2158:	
  2360                           
  2361                           ;LCD.c: 157: lcd_send( E_SET_DDRAM_ADDR | (col + rowaddr[ row ]), 0 );
  2362  0FB0  01A4               	clrf	lcd_send@rs
  2363  0FB1  0827               	movf	lcd_goto@row,w
  2364  0FB2  3E0B               	addlw	low ((_rowaddr-__stringbase)| (0+32768))
  2365  0FB3  0084               	movwf	4
  2366  0FB4  118A  26A3  158A   	fcall	stringdir
  2367  0FB7  0729               	addwf	lcd_goto@col,w
  2368  0FB8  3880               	iorlw	128
  2369  0FB9  118A  279F         	fcall	_lcd_send
  2370  0FBB  0008               	return
  2371  0FBC                     __end_of_lcd_goto:	
  2372                           
  2373                           	psect	text8
  2374  0F7A                     __ptext8:	
  2375 ;; *************** function _UART_Write_Text *****************
  2376 ;; Defined at:
  2377 ;;		line 50 in file "Uart.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  text            1    wreg     PTR unsigned char 
  2380 ;;		 -> PrintDistancias@dist(35), 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  text            1    0[BANK0 ] PTR unsigned char 
  2383 ;;		 -> PrintDistancias@dist(35), 
  2384 ;;  i               2    1[BANK0 ] int 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2394 ;;      Params:         0       0       0       0
  2395 ;;      Locals:         0       3       0       0
  2396 ;;      Temps:          1       0       0       0
  2397 ;;      Totals:         1       3       0       0
  2398 ;;Total ram usage:        4 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    2
  2401 ;; This function calls:
  2402 ;;		_UART_Write
  2403 ;; This function is called by:
  2404 ;;		_PrintDistancias
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function _UART_Write_Text
  2410  0F7A                     _UART_Write_Text:	
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2414                           ;UART_Write_Text@text stored from wreg
  2415  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0F7B  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0F7C  00A0               	movwf	UART_Write_Text@text
  2418                           
  2419                           ;Uart.c: 52: int i;
  2420                           ;Uart.c: 53: for(i=0;text[i]!='\0';i++)
  2421  0F7D  01A1               	clrf	UART_Write_Text@i
  2422  0F7E  01A2               	clrf	UART_Write_Text@i+1
  2423  0F7F                     l2174:	
  2424  0F7F  0821               	movf	UART_Write_Text@i,w
  2425  0F80  0720               	addwf	UART_Write_Text@text,w
  2426  0F81  00F5               	movwf	??_UART_Write_Text
  2427  0F82  0875               	movf	??_UART_Write_Text,w
  2428  0F83  0084               	movwf	4
  2429  0F84  1383               	bcf	3,7	;select IRP bank0
  2430  0F85  0800               	movf	0,w
  2431  0F86  1903               	btfsc	3,2
  2432  0F87  0008               	return
  2433                           
  2434                           ;Uart.c: 54: UART_Write(text[i]);
  2435  0F88  0821               	movf	UART_Write_Text@i,w
  2436  0F89  0720               	addwf	UART_Write_Text@text,w
  2437  0F8A  00F5               	movwf	??_UART_Write_Text
  2438  0F8B  0875               	movf	??_UART_Write_Text,w
  2439  0F8C  0084               	movwf	4
  2440  0F8D  1383               	bcf	3,7	;select IRP bank0
  2441  0F8E  0800               	movf	0,w
  2442  0F8F  158A  2734  158A   	fcall	_UART_Write
  2443  0F92  3001               	movlw	1
  2444  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  2446  0F95  07A1               	addwf	UART_Write_Text@i,f
  2447  0F96  1803               	skipnc
  2448  0F97  0AA2               	incf	UART_Write_Text@i+1,f
  2449  0F98  3000               	movlw	0
  2450  0F99  07A2               	addwf	UART_Write_Text@i+1,f
  2451  0F9A  2F7F               	goto	l2174
  2452  0F9B                     __end_of_UART_Write_Text:	
  2453                           
  2454                           	psect	text9
  2455  0F34                     __ptext9:	
  2456 ;; *************** function _UART_Write *****************
  2457 ;; Defined at:
  2458 ;;		line 44 in file "Uart.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  data            1    wreg     unsigned char 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  data            1    4[COMMON] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2472 ;;      Params:         0       0       0       0
  2473 ;;      Locals:         1       0       0       0
  2474 ;;      Temps:          0       0       0       0
  2475 ;;      Totals:         1       0       0       0
  2476 ;;Total ram usage:        1 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    1
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_UART_Write_Text
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           
  2487                           ;psect for function _UART_Write
  2488  0F34                     _UART_Write:	
  2489                           
  2490                           ;incstack = 0
  2491                           ; Regs used in _UART_Write: [wreg]
  2492                           ;UART_Write@data stored from wreg
  2493  0F34  00F4               	movwf	UART_Write@data
  2494  0F35                     l183:	
  2495                           ;Uart.c: 46: while(!TRMT);
  2496                           
  2497  0F35  1683               	bsf	3,5	;RP0=1, select bank1
  2498  0F36  1303               	bcf	3,6	;RP1=0, select bank1
  2499  0F37  1C98               	btfss	24,1	;volatile
  2500  0F38  2F35               	goto	l183
  2501                           
  2502                           ;Uart.c: 47: TXREG = data;
  2503  0F39  0874               	movf	UART_Write@data,w
  2504  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  2505  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  2506  0F3C  0099               	movwf	25	;volatile
  2507  0F3D  0008               	return
  2508  0F3E                     __end_of_UART_Write:	
  2509                           
  2510                           	psect	text10
  2511  07D2                     __ptext10:	
  2512 ;; *************** function _Inicializaciones *****************
  2513 ;; Defined at:
  2514 ;;		line 6 in file "Funciones.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;		None
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;		None
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  1    wreg      void 
  2521 ;; Registers used:
  2522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2528 ;;      Params:         0       0       0       0
  2529 ;;      Locals:         0       0       0       0
  2530 ;;      Temps:          0       2       0       0
  2531 ;;      Totals:         0       2       0       0
  2532 ;;Total ram usage:        2 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    5
  2535 ;; This function calls:
  2536 ;;		_lcd_clear
  2537 ;;		_lcd_init
  2538 ;;		_lcd_on
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           
  2545                           ;psect for function _Inicializaciones
  2546  07D2                     _Inicializaciones:	
  2547                           
  2548                           ;Funciones.c: 7: OSCCON = 0b01110101;
  2549                           
  2550                           ;incstack = 0
  2551                           ; Regs used in _Inicializaciones: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2552  07D2  3075               	movlw	117
  2553  07D3  1683               	bsf	3,5	;RP0=1, select bank1
  2554  07D4  1303               	bcf	3,6	;RP1=0, select bank1
  2555  07D5  008F               	movwf	15	;volatile
  2556                           
  2557                           ;Funciones.c: 10: TRISB = 0b11110000;
  2558  07D6  30F0               	movlw	240
  2559  07D7  0086               	movwf	6	;volatile
  2560                           
  2561                           ;Funciones.c: 11: PORTB = 0b00000000;
  2562  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  2563  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  2564  07DA  0186               	clrf	6	;volatile
  2565                           
  2566                           ;Funciones.c: 12: ANSELH = 0b00000000;
  2567  07DB  1683               	bsf	3,5	;RP0=1, select bank3
  2568  07DC  1703               	bsf	3,6	;RP1=1, select bank3
  2569  07DD  0189               	clrf	9	;volatile
  2570                           
  2571                           ;Funciones.c: 17: TMR1 = 0;
  2572  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  2573  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  2574  07E0  018E               	clrf	14	;volatile
  2575  07E1  018F               	clrf	15	;volatile
  2576                           
  2577                           ;Funciones.c: 18: T1CON = 0b00010000;
  2578  07E2  3010               	movlw	16
  2579  07E3  0090               	movwf	16	;volatile
  2580                           
  2581                           ;Funciones.c: 21: INTCON = 0b00001000;
  2582  07E4  3008               	movlw	8
  2583  07E5  008B               	movwf	11	;volatile
  2584                           
  2585                           ;Funciones.c: 22: IOCB = 0b11110000;
  2586  07E6  30F0               	movlw	240
  2587  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  2588  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  2589  07E9  0096               	movwf	22	;volatile
  2590                           
  2591                           ;Funciones.c: 23: GIE = 1;
  2592  07EA  178B               	bsf	11,7	;volatile
  2593                           
  2594                           ;Funciones.c: 25: lcd_init(0, 16, 2);
  2595  07EB  3010               	movlw	16
  2596  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  2597  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  2598  07EE  00AD               	movwf	??_Inicializaciones
  2599  07EF  082D               	movf	??_Inicializaciones,w
  2600  07F0  00A7               	movwf	lcd_init@cols
  2601  07F1  3002               	movlw	2
  2602  07F2  00AE               	movwf	??_Inicializaciones+1
  2603  07F3  082E               	movf	??_Inicializaciones+1,w
  2604  07F4  00A8               	movwf	lcd_init@rows
  2605  07F5  3000               	movlw	0
  2606  07F6  118A  22FA  118A   	fcall	_lcd_init
  2607                           
  2608                           ;Funciones.c: 26: lcd_clear();
  2609  07F9  158A  274E  118A   	fcall	_lcd_clear
  2610                           
  2611                           ;Funciones.c: 27: lcd_on();
  2612  07FC  158A  273E         	fcall	_lcd_on
  2613  07FE  0008               	return
  2614  07FF                     __end_of_Inicializaciones:	
  2615                           
  2616                           	psect	text11
  2617  0F3E                     __ptext11:	
  2618 ;; *************** function _lcd_on *****************
  2619 ;; Defined at:
  2620 ;;		line 91 in file "LCD.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2634 ;;      Params:         0       0       0       0
  2635 ;;      Locals:         0       0       0       0
  2636 ;;      Temps:          0       1       0       0
  2637 ;;      Totals:         0       1       0       0
  2638 ;;Total ram usage:        1 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    4
  2641 ;; This function calls:
  2642 ;;		_lcd_send
  2643 ;; This function is called by:
  2644 ;;		_Inicializaciones
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           
  2649                           ;psect for function _lcd_on
  2650  0F3E                     _lcd_on:	
  2651                           
  2652                           ;LCD.c: 93: dispctrl |= (1<<2);
  2653                           
  2654                           ;incstack = 0
  2655                           ; Regs used in _lcd_on: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2656  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  2657  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  2658  0F40  156F               	bsf	_dispctrl,2
  2659                           
  2660                           ;LCD.c: 94: lcd_send( E_DISPLAY_ON_OFF_CTRL | dispctrl, 0 );
  2661  0F41  01A4               	clrf	lcd_send@rs
  2662  0F42  086F               	movf	_dispctrl,w
  2663  0F43  3808               	iorlw	8
  2664  0F44  118A  279F  158A   	fcall	_lcd_send
  2665                           
  2666                           ;LCD.c: 95: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2667  0F47  3021               	movlw	33
  2668  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  2669  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  2670  0F4A  00A7               	movwf	??_lcd_on
  2671  0F4B                     u2787:	
  2672  0F4B  0BA7               	decfsz	??_lcd_on,f
  2673  0F4C  2F4B               	goto	u2787
  2674  0F4D  0008               	return
  2675  0F4E                     __end_of_lcd_on:	
  2676                           
  2677                           	psect	text12
  2678  02FA                     __ptext12:	
  2679 ;; *************** function _lcd_init *****************
  2680 ;; Defined at:
  2681 ;;		line 33 in file "LCD.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  iodata          1    wreg     PTR void 
  2684 ;;		 -> NULL(0), 
  2685 ;;  cols            1    7[BANK0 ] unsigned char 
  2686 ;;  rows            1    8[BANK0 ] unsigned char 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  iodata          1   12[BANK0 ] PTR void 
  2689 ;;		 -> NULL(0), 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      unsigned char 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2699 ;;      Params:         0       2       0       0
  2700 ;;      Locals:         0       1       0       0
  2701 ;;      Temps:          0       3       0       0
  2702 ;;      Totals:         0       6       0       0
  2703 ;;Total ram usage:        6 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    4
  2706 ;; This function calls:
  2707 ;;		_lcd_ioinit
  2708 ;;		_lcd_iowrite4
  2709 ;;		_lcd_send
  2710 ;; This function is called by:
  2711 ;;		_Inicializaciones
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _lcd_init
  2717  02FA                     _lcd_init:	
  2718                           
  2719                           ;incstack = 0
  2720                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2721                           ;lcd_init@iodata stored from wreg
  2722  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2723  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2724  02FC  00AC               	movwf	lcd_init@iodata
  2725                           
  2726                           ;LCD.c: 36: iomode = lcd_ioinit(iodata);
  2727  02FD  082C               	movf	lcd_init@iodata,w
  2728  02FE  158A  27DD  118A   	fcall	_lcd_ioinit
  2729  0301  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0302  1303               	bcf	3,6	;RP1=0, select bank0
  2731  0303  00A9               	movwf	??_lcd_init
  2732  0304  0829               	movf	??_lcd_init,w
  2733  0305  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0306  1303               	bcf	3,6	;RP1=0, select bank1
  2735  0307  00CA               	movwf	_iomode^(0+128)
  2736                           
  2737                           ;LCD.c: 37: lcdrows = rows;
  2738  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2740  030A  0828               	movf	lcd_init@rows,w
  2741  030B  00A9               	movwf	??_lcd_init
  2742  030C  0829               	movf	??_lcd_init,w
  2743  030D  00EA               	movwf	_lcdrows
  2744                           
  2745                           ;LCD.c: 38: lcdcolumns = cols;
  2746  030E  0827               	movf	lcd_init@cols,w
  2747  030F  00A9               	movwf	??_lcd_init
  2748  0310  0829               	movf	??_lcd_init,w
  2749  0311  00E9               	movwf	_lcdcolumns
  2750                           
  2751                           ;LCD.c: 41: _delay((unsigned long)((100)*(8000000/4000.0)));
  2752  0312  3002               	movlw	2
  2753  0313  00AB               	movwf	??_lcd_init+2
  2754  0314  3004               	movlw	4
  2755  0315  00AA               	movwf	??_lcd_init+1
  2756  0316  30BA               	movlw	186
  2757  0317  00A9               	movwf	??_lcd_init
  2758  0318                     u2797:	
  2759  0318  0BA9               	decfsz	??_lcd_init,f
  2760  0319  2B18               	goto	u2797
  2761  031A  0BAA               	decfsz	??_lcd_init+1,f
  2762  031B  2B18               	goto	u2797
  2763  031C  0BAB               	decfsz	??_lcd_init+2,f
  2764  031D  2B18               	goto	u2797
  2765  031E  0000               	nop
  2766                           
  2767                           ;LCD.c: 44: if (iomode == 4) {
  2768  031F  3004               	movlw	4
  2769  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2770  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2771  0322  064A               	xorwf	_iomode^(0+128),w
  2772  0323  1D03               	btfss	3,2
  2773  0324  2B63               	goto	l2116
  2774                           
  2775                           ;LCD.c: 47: lcd_iowrite4(0x03);
  2776  0325  3003               	movlw	3
  2777  0326  118A  26ED  118A   	fcall	_lcd_iowrite4
  2778                           
  2779                           ;LCD.c: 48: _delay((unsigned long)((5)*(8000000/4000.0)));
  2780  0329  300D               	movlw	13
  2781  032A  1283               	bcf	3,5	;RP0=0, select bank0
  2782  032B  1303               	bcf	3,6	;RP1=0, select bank0
  2783  032C  00AA               	movwf	??_lcd_init+1
  2784  032D  30FB               	movlw	251
  2785  032E  00A9               	movwf	??_lcd_init
  2786  032F                     u2807:	
  2787  032F  0BA9               	decfsz	??_lcd_init,f
  2788  0330  2B2F               	goto	u2807
  2789  0331  0BAA               	decfsz	??_lcd_init+1,f
  2790  0332  2B2F               	goto	u2807
  2791  0333  2B34               	nop2
  2792                           
  2793                           ;LCD.c: 49: lcd_iowrite4(0x03);
  2794  0334  3003               	movlw	3
  2795  0335  118A  26ED  118A   	fcall	_lcd_iowrite4
  2796                           
  2797                           ;LCD.c: 50: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2798  0338  304F               	movlw	79
  2799  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2800  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2801  033B  00A9               	movwf	??_lcd_init
  2802  033C                     u2817:	
  2803  033C  0BA9               	decfsz	??_lcd_init,f
  2804  033D  2B3C               	goto	u2817
  2805  033E  2B3F               	nop2	;nop
  2806                           
  2807                           ;LCD.c: 51: lcd_iowrite4(0x03);
  2808  033F  3003               	movlw	3
  2809  0340  118A  26ED  118A   	fcall	_lcd_iowrite4
  2810                           
  2811                           ;LCD.c: 52: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2812  0343  304F               	movlw	79
  2813  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2814  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2815  0346  00A9               	movwf	??_lcd_init
  2816  0347                     u2827:	
  2817  0347  0BA9               	decfsz	??_lcd_init,f
  2818  0348  2B47               	goto	u2827
  2819  0349  2B4A               	nop2	;nop
  2820                           
  2821                           ;LCD.c: 53: lcd_iowrite4(0x02);
  2822  034A  3002               	movlw	2
  2823  034B  118A  26ED  118A   	fcall	_lcd_iowrite4
  2824                           
  2825                           ;LCD.c: 54: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2826  034E  304F               	movlw	79
  2827  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2829  0351  00A9               	movwf	??_lcd_init
  2830  0352                     u2837:	
  2831  0352  0BA9               	decfsz	??_lcd_init,f
  2832  0353  2B52               	goto	u2837
  2833  0354  2B55               	nop2	;nop
  2834                           
  2835                           ;LCD.c: 55: lcd_send( E_FUNCTION_SET | 0 | (1<<3) | (1<<2), 0 );
  2836  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2837  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2838  0357  01A4               	clrf	lcd_send@rs
  2839  0358  302C               	movlw	44
  2840  0359  118A  279F  118A   	fcall	_lcd_send
  2841                           
  2842                           ;LCD.c: 56: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2843  035C  3021               	movlw	33
  2844  035D  1283               	bcf	3,5	;RP0=0, select bank0
  2845  035E  1303               	bcf	3,6	;RP1=0, select bank0
  2846  035F  00A9               	movwf	??_lcd_init
  2847  0360                     u2847:	
  2848  0360  0BA9               	decfsz	??_lcd_init,f
  2849  0361  2B60               	goto	u2847
  2850                           
  2851                           ;LCD.c: 57: } else if (iomode == 8) {
  2852  0362  2BA4               	goto	l2130
  2853  0363                     l2116:	
  2854  0363  3008               	movlw	8
  2855  0364  1683               	bsf	3,5	;RP0=1, select bank1
  2856  0365  1303               	bcf	3,6	;RP1=0, select bank1
  2857  0366  064A               	xorwf	_iomode^(0+128),w
  2858  0367  1D03               	btfss	3,2
  2859  0368  2BA4               	goto	l2130
  2860                           
  2861                           ;LCD.c: 59: lcd_send( E_FUNCTION_SET, 0 );
  2862  0369  1283               	bcf	3,5	;RP0=0, select bank0
  2863  036A  1303               	bcf	3,6	;RP1=0, select bank0
  2864  036B  01A4               	clrf	lcd_send@rs
  2865  036C  3020               	movlw	32
  2866  036D  118A  279F  118A   	fcall	_lcd_send
  2867                           
  2868                           ;LCD.c: 60: _delay((unsigned long)((5)*(8000000/4000.0)));
  2869  0370  300D               	movlw	13
  2870  0371  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0372  1303               	bcf	3,6	;RP1=0, select bank0
  2872  0373  00AA               	movwf	??_lcd_init+1
  2873  0374  30FB               	movlw	251
  2874  0375  00A9               	movwf	??_lcd_init
  2875  0376                     u2857:	
  2876  0376  0BA9               	decfsz	??_lcd_init,f
  2877  0377  2B76               	goto	u2857
  2878  0378  0BAA               	decfsz	??_lcd_init+1,f
  2879  0379  2B76               	goto	u2857
  2880  037A  2B7B               	nop2
  2881                           
  2882                           ;LCD.c: 61: lcd_send( E_FUNCTION_SET, 0 );
  2883  037B  1283               	bcf	3,5	;RP0=0, select bank0
  2884  037C  1303               	bcf	3,6	;RP1=0, select bank0
  2885  037D  01A4               	clrf	lcd_send@rs
  2886  037E  3020               	movlw	32
  2887  037F  118A  279F  118A   	fcall	_lcd_send
  2888                           
  2889                           ;LCD.c: 62: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2890  0382  304F               	movlw	79
  2891  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2893  0385  00A9               	movwf	??_lcd_init
  2894  0386                     u2867:	
  2895  0386  0BA9               	decfsz	??_lcd_init,f
  2896  0387  2B86               	goto	u2867
  2897  0388  2B89               	nop2	;nop
  2898                           
  2899                           ;LCD.c: 63: lcd_send( E_FUNCTION_SET, 0 );
  2900  0389  1283               	bcf	3,5	;RP0=0, select bank0
  2901  038A  1303               	bcf	3,6	;RP1=0, select bank0
  2902  038B  01A4               	clrf	lcd_send@rs
  2903  038C  3020               	movlw	32
  2904  038D  118A  279F  118A   	fcall	_lcd_send
  2905                           
  2906                           ;LCD.c: 64: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2907  0390  304F               	movlw	79
  2908  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2910  0393  00A9               	movwf	??_lcd_init
  2911  0394                     u2877:	
  2912  0394  0BA9               	decfsz	??_lcd_init,f
  2913  0395  2B94               	goto	u2877
  2914  0396  2B97               	nop2	;nop
  2915                           
  2916                           ;LCD.c: 65: lcd_send( E_FUNCTION_SET | (1<<4) | (1<<3) | (1<<2), 0 );
  2917  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2918  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2919  0399  01A4               	clrf	lcd_send@rs
  2920  039A  303C               	movlw	60
  2921  039B  118A  279F  118A   	fcall	_lcd_send
  2922                           
  2923                           ;LCD.c: 66: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2924  039E  3021               	movlw	33
  2925  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2926  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2927  03A1  00A9               	movwf	??_lcd_init
  2928  03A2                     u2887:	
  2929  03A2  0BA9               	decfsz	??_lcd_init,f
  2930  03A3  2BA2               	goto	u2887
  2931  03A4                     l2130:	
  2932                           
  2933                           ;LCD.c: 67: }
  2934                           ;LCD.c: 69: lcd_send( E_DISPLAY_ON_OFF_CTRL | 0, 0 );
  2935  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2936  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2937  03A6  01A4               	clrf	lcd_send@rs
  2938  03A7  3008               	movlw	8
  2939  03A8  118A  279F  118A   	fcall	_lcd_send
  2940                           
  2941                           ;LCD.c: 70: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2942  03AB  3021               	movlw	33
  2943  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2944  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2945  03AE  00A9               	movwf	??_lcd_init
  2946  03AF                     u2897:	
  2947  03AF  0BA9               	decfsz	??_lcd_init,f
  2948  03B0  2BAF               	goto	u2897
  2949                           
  2950                           ;LCD.c: 71: lcd_send( E_CLEAR_DISPLAY, 0 );
  2951  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2952  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2953  03B3  01A4               	clrf	lcd_send@rs
  2954  03B4  3001               	movlw	1
  2955  03B5  118A  279F  118A   	fcall	_lcd_send
  2956                           
  2957                           ;LCD.c: 72: _delay((unsigned long)((2)*(8000000/4000.0)));
  2958  03B8  3006               	movlw	6
  2959  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2960  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2961  03BB  00AA               	movwf	??_lcd_init+1
  2962  03BC  3030               	movlw	48
  2963  03BD  00A9               	movwf	??_lcd_init
  2964  03BE                     u2907:	
  2965  03BE  0BA9               	decfsz	??_lcd_init,f
  2966  03BF  2BBE               	goto	u2907
  2967  03C0  0BAA               	decfsz	??_lcd_init+1,f
  2968  03C1  2BBE               	goto	u2907
  2969  03C2  0000               	nop
  2970                           
  2971                           ;LCD.c: 73: lcd_send( E_ENTRY_MODE_SET | 0 | (1<<1), 0 );
  2972  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2973  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2974  03C5  01A4               	clrf	lcd_send@rs
  2975  03C6  3006               	movlw	6
  2976  03C7  118A  279F  118A   	fcall	_lcd_send
  2977                           
  2978                           ;LCD.c: 74: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2979  03CA  3021               	movlw	33
  2980  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2981  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2982  03CD  00A9               	movwf	??_lcd_init
  2983  03CE                     u2917:	
  2984  03CE  0BA9               	decfsz	??_lcd_init,f
  2985  03CF  2BCE               	goto	u2917
  2986  03D0  0008               	return
  2987  03D1                     __end_of_lcd_init:	
  2988                           ;LCD.c: 76: return 1;
  2989                           ;	Return value of _lcd_init is never used
  2990                           
  2991                           
  2992                           	psect	text13
  2993  0FDD                     __ptext13:	
  2994 ;; *************** function _lcd_ioinit *****************
  2995 ;; Defined at:
  2996 ;;		line 48 in file "LCD-PIC16.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  iodata          1    wreg     PTR void 
  2999 ;;		 -> NULL(0), 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  iodata          1    1[BANK0 ] PTR void 
  3002 ;;		 -> NULL(0), 
  3003 ;;  i               1    2[BANK0 ] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      unsigned char 
  3006 ;; Registers used:
  3007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3013 ;;      Params:         0       0       0       0
  3014 ;;      Locals:         0       2       0       0
  3015 ;;      Temps:          0       1       0       0
  3016 ;;      Totals:         0       3       0       0
  3017 ;;Total ram usage:        3 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    2
  3020 ;; This function calls:
  3021 ;;		_lcd_ioset
  3022 ;; This function is called by:
  3023 ;;		_lcd_init
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           
  3028                           ;psect for function _lcd_ioinit
  3029  0FDD                     _lcd_ioinit:	
  3030                           
  3031                           ;LCD-PIC16.c: 50: uint8_t i = 0;
  3032                           
  3033                           ;incstack = 0
  3034                           ; Regs used in _lcd_ioinit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3035  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3036  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  3037  0FDF  01A2               	clrf	lcd_ioinit@i
  3038                           
  3039                           ;LCD-PIC16.c: 53: TRISC5 = 0;
  3040  0FE0  1683               	bsf	3,5	;RP0=1, select bank1
  3041  0FE1  1303               	bcf	3,6	;RP1=0, select bank1
  3042  0FE2  1287               	bcf	7,5	;volatile
  3043                           
  3044                           ;LCD-PIC16.c: 54: TRISC4 = 0;
  3045  0FE3  1207               	bcf	7,4	;volatile
  3046                           
  3047                           ;LCD-PIC16.c: 60: TRISC0 = 0;
  3048  0FE4  1007               	bcf	7,0	;volatile
  3049                           
  3050                           ;LCD-PIC16.c: 61: TRISC1 = 0;
  3051  0FE5  1087               	bcf	7,1	;volatile
  3052                           
  3053                           ;LCD-PIC16.c: 62: TRISC2 = 0;
  3054  0FE6  1107               	bcf	7,2	;volatile
  3055                           
  3056                           ;LCD-PIC16.c: 63: TRISC3 = 0;
  3057  0FE7  1187               	bcf	7,3	;volatile
  3058                           
  3059                           ;LCD-PIC16.c: 75: for (i = 0; i < 11; i++)
  3060  0FE8  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0FE9  1303               	bcf	3,6	;RP1=0, select bank0
  3062  0FEA  01A2               	clrf	lcd_ioinit@i
  3063  0FEB  300B               	movlw	11
  3064  0FEC  0222               	subwf	lcd_ioinit@i,w
  3065  0FED  1803               	btfsc	3,0
  3066  0FEE  2FFE               	goto	l2046
  3067  0FEF                     l2040:	
  3068                           
  3069                           ;LCD-PIC16.c: 76: lcd_ioset(i, 0);
  3070  0FEF  01F4               	clrf	lcd_ioset@out
  3071  0FF0  0822               	movf	lcd_ioinit@i,w
  3072  0FF1  118A  2643  158A   	fcall	_lcd_ioset
  3073  0FF4  3001               	movlw	1
  3074  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  3076  0FF7  00A0               	movwf	??_lcd_ioinit
  3077  0FF8  0820               	movf	??_lcd_ioinit,w
  3078  0FF9  07A2               	addwf	lcd_ioinit@i,f
  3079  0FFA  300B               	movlw	11
  3080  0FFB  0222               	subwf	lcd_ioinit@i,w
  3081  0FFC  1C03               	skipc
  3082  0FFD  2FEF               	goto	l2040
  3083  0FFE                     l2046:	
  3084                           
  3085                           ;LCD-PIC16.c: 80: return 4;
  3086  0FFE  3004               	movlw	4
  3087  0FFF  0008               	return
  3088  1000                     __end_of_lcd_ioinit:	
  3089                           
  3090                           	psect	text14
  3091  0F4E                     __ptext14:	
  3092 ;; *************** function _lcd_clear *****************
  3093 ;; Defined at:
  3094 ;;		line 79 in file "LCD.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3108 ;;      Params:         0       0       0       0
  3109 ;;      Locals:         0       0       0       0
  3110 ;;      Temps:          0       2       0       0
  3111 ;;      Totals:         0       2       0       0
  3112 ;;Total ram usage:        2 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    4
  3115 ;; This function calls:
  3116 ;;		_lcd_send
  3117 ;; This function is called by:
  3118 ;;		_Inicializaciones
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           
  3123                           ;psect for function _lcd_clear
  3124  0F4E                     _lcd_clear:	
  3125                           
  3126                           ;LCD.c: 81: lcd_send( E_CLEAR_DISPLAY, 0 );
  3127                           
  3128                           ;incstack = 0
  3129                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3130  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  3131  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  3132  0F50  01A4               	clrf	lcd_send@rs
  3133  0F51  3001               	movlw	1
  3134  0F52  118A  279F  158A   	fcall	_lcd_send
  3135                           
  3136                           ;LCD.c: 82: _delay((unsigned long)((2)*(8000000/4000.0)));
  3137  0F55  3006               	movlw	6
  3138  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3139  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  3140  0F58  00A8               	movwf	??_lcd_clear+1
  3141  0F59  3030               	movlw	48
  3142  0F5A  00A7               	movwf	??_lcd_clear
  3143  0F5B                     u2927:	
  3144  0F5B  0BA7               	decfsz	??_lcd_clear,f
  3145  0F5C  2F5B               	goto	u2927
  3146  0F5D  0BA8               	decfsz	??_lcd_clear+1,f
  3147  0F5E  2F5B               	goto	u2927
  3148  0F5F  0000               	nop
  3149  0F60  0008               	return
  3150  0F61                     __end_of_lcd_clear:	
  3151                           
  3152                           	psect	text15
  3153  079F                     __ptext15:	
  3154 ;; *************** function _lcd_send *****************
  3155 ;; Defined at:
  3156 ;;		line 160 in file "LCD.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  data            1    wreg     unsigned char 
  3159 ;;  rs              1    4[BANK0 ] unsigned char 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  data            1    6[BANK0 ] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3171 ;;      Params:         0       1       0       0
  3172 ;;      Locals:         0       1       0       0
  3173 ;;      Temps:          0       1       0       0
  3174 ;;      Totals:         0       3       0       0
  3175 ;;Total ram usage:        3 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    3
  3178 ;; This function calls:
  3179 ;;		_lcd_ioset
  3180 ;;		_lcd_iowrite4
  3181 ;;		_lcd_iowrite8
  3182 ;; This function is called by:
  3183 ;;		_lcd_init
  3184 ;;		_lcd_clear
  3185 ;;		_lcd_on
  3186 ;;		_lcd_goto
  3187 ;;		_lcd_puts
  3188 ;;		_lcd_home
  3189 ;;		_lcd_off
  3190 ;;		_lcd_cursor
  3191 ;;		_lcd_cursor_left
  3192 ;;		_lcd_cursor_right
  3193 ;;		_lcd_scroll_left
  3194 ;;		_lcd_scroll_right
  3195 ;;		_lcd_autoscroll_on
  3196 ;;		_lcd_autoscroll_off
  3197 ;;		_lcd_create_char
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function _lcd_send
  3203  079F                     _lcd_send:	
  3204                           
  3205                           ;incstack = 0
  3206                           ; Regs used in _lcd_send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3207                           ;lcd_send@data stored from wreg
  3208  079F  1283               	bcf	3,5	;RP0=0, select bank0
  3209  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  3210  07A1  00A6               	movwf	lcd_send@data
  3211                           
  3212                           ;LCD.c: 163: if (rs)
  3213  07A2  0824               	movf	lcd_send@rs,w
  3214  07A3  1903               	btfsc	3,2
  3215  07A4  2FA8               	goto	l2054
  3216                           
  3217                           ;LCD.c: 164: lcd_ioset(E_RS_PIN,1);
  3218  07A5  01F4               	clrf	lcd_ioset@out
  3219  07A6  0AF4               	incf	lcd_ioset@out,f
  3220  07A7  2FA9               	goto	L1
  3221  07A8                     l2054:	
  3222                           
  3223                           ;LCD.c: 165: else
  3224                           ;LCD.c: 166: lcd_ioset(E_RS_PIN,0);
  3225  07A8  01F4               	clrf	lcd_ioset@out
  3226  07A9                     L1:	
  3227  07A9  3009               	movlw	9
  3228  07AA  118A  2643  118A   	fcall	_lcd_ioset
  3229                           
  3230                           ;LCD.c: 168: lcd_ioset(E_RW_PIN,0);
  3231  07AD  01F4               	clrf	lcd_ioset@out
  3232  07AE  300A               	movlw	10
  3233  07AF  118A  2643  118A   	fcall	_lcd_ioset
  3234                           
  3235                           ;LCD.c: 170: if (iomode == 4) {
  3236  07B2  3004               	movlw	4
  3237  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  3238  07B4  1303               	bcf	3,6	;RP1=0, select bank1
  3239  07B5  064A               	xorwf	_iomode^(0+128),w
  3240  07B6  1D03               	btfss	3,2
  3241  07B7  2FCC               	goto	l2060
  3242                           
  3243                           ;LCD.c: 171: lcd_iowrite4(data >> 4);
  3244  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3245  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3246  07BA  0826               	movf	lcd_send@data,w
  3247  07BB  00A5               	movwf	??_lcd_send
  3248  07BC  3004               	movlw	4
  3249  07BD                     u2155:	
  3250  07BD  1003               	clrc
  3251  07BE  0CA5               	rrf	??_lcd_send,f
  3252  07BF  3EFF               	addlw	-1
  3253  07C0  1D03               	skipz
  3254  07C1  2FBD               	goto	u2155
  3255  07C2  0825               	movf	??_lcd_send,w
  3256  07C3  118A  26ED  118A   	fcall	_lcd_iowrite4
  3257                           
  3258                           ;LCD.c: 172: lcd_iowrite4(data);
  3259  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  3260  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  3261  07C8  0826               	movf	lcd_send@data,w
  3262  07C9  118A  26ED         	fcall	_lcd_iowrite4
  3263                           
  3264                           ;LCD.c: 173: } else {
  3265  07CB  0008               	return
  3266  07CC                     l2060:	
  3267                           
  3268                           ;LCD.c: 174: lcd_iowrite8(data);
  3269  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  3270  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  3271  07CE  0826               	movf	lcd_send@data,w
  3272  07CF  118A  27FF         	fcall	_lcd_iowrite8
  3273  07D1  0008               	return
  3274  07D2                     __end_of_lcd_send:	
  3275                           
  3276                           	psect	text16
  3277  07FF                     __ptext16:	
  3278 ;; *************** function _lcd_iowrite8 *****************
  3279 ;; Defined at:
  3280 ;;		line 143 in file "LCD-PIC16.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  data            1    wreg     unsigned char 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  data            1    0[COMMON] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3294 ;;      Params:         0       0       0       0
  3295 ;;      Locals:         0       0       0       0
  3296 ;;      Temps:          0       0       0       0
  3297 ;;      Totals:         0       0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    1
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_lcd_send
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           
  3309                           ;psect for function _lcd_iowrite8
  3310  07FF                     _lcd_iowrite8:	
  3311                           
  3312                           ;incstack = 0
  3313                           ; Regs used in _lcd_iowrite8: [wreg]
  3314  07FF  0008               	return
  3315  0800                     __end_of_lcd_iowrite8:	
  3316                           
  3317                           	psect	text17
  3318  06ED                     __ptext17:	
  3319 ;; *************** function _lcd_iowrite4 *****************
  3320 ;; Defined at:
  3321 ;;		line 129 in file "LCD-PIC16.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  data            1    wreg     unsigned char 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  data            1    2[BANK0 ] unsigned char 
  3326 ;;  i               1    3[BANK0 ] unsigned char 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3336 ;;      Params:         0       0       0       0
  3337 ;;      Locals:         0       2       0       0
  3338 ;;      Temps:          0       2       0       0
  3339 ;;      Totals:         0       4       0       0
  3340 ;;Total ram usage:        4 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    2
  3343 ;; This function calls:
  3344 ;;		_lcd_ioset
  3345 ;; This function is called by:
  3346 ;;		_lcd_init
  3347 ;;		_lcd_send
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function _lcd_iowrite4
  3353  06ED                     _lcd_iowrite4:	
  3354                           
  3355                           ;incstack = 0
  3356                           ; Regs used in _lcd_iowrite4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3357                           ;lcd_iowrite4@data stored from wreg
  3358  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  3359  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  3360  06EF  00A2               	movwf	lcd_iowrite4@data
  3361                           
  3362                           ;LCD-PIC16.c: 132: uint8_t i;
  3363                           ;LCD-PIC16.c: 134: for (i = 4; i < 8; i++)
  3364  06F0  3004               	movlw	4
  3365  06F1  00A0               	movwf	??_lcd_iowrite4
  3366  06F2  0820               	movf	??_lcd_iowrite4,w
  3367  06F3  00A3               	movwf	lcd_iowrite4@i
  3368  06F4  3008               	movlw	8
  3369  06F5  0223               	subwf	lcd_iowrite4@i,w
  3370  06F6  1803               	btfsc	3,0
  3371  06F7  2F1B               	goto	l2016
  3372  06F8                     l2010:	
  3373                           
  3374                           ;LCD-PIC16.c: 135: lcd_ioset(i, (data & (1 << i - 4)) ? 1 : 0);
  3375  06F8  3001               	movlw	1
  3376  06F9  00A0               	movwf	??_lcd_iowrite4
  3377  06FA  0823               	movf	lcd_iowrite4@i,w
  3378  06FB  3EFC               	addlw	-4
  3379  06FC  3E01               	addlw	1
  3380  06FD  2F00               	goto	u2074
  3381  06FE                     u2075:	
  3382  06FE  1003               	clrc
  3383  06FF  0DA0               	rlf	??_lcd_iowrite4,f
  3384  0700                     u2074:	
  3385  0700  3EFF               	addlw	-1
  3386  0701  1D03               	skipz
  3387  0702  2EFE               	goto	u2075
  3388  0703  0820               	movf	??_lcd_iowrite4,w
  3389  0704  0522               	andwf	lcd_iowrite4@data,w
  3390  0705  1903               	btfsc	3,2
  3391  0706  2F09               	goto	u2080
  3392  0707  3001               	movlw	1
  3393  0708  2F0A               	goto	u2090
  3394  0709                     u2080:	
  3395  0709  3000               	movlw	0
  3396  070A                     u2090:	
  3397  070A  00A1               	movwf	??_lcd_iowrite4+1
  3398  070B  0821               	movf	??_lcd_iowrite4+1,w
  3399  070C  00F4               	movwf	lcd_ioset@out
  3400  070D  0823               	movf	lcd_iowrite4@i,w
  3401  070E  118A  2643  118A   	fcall	_lcd_ioset
  3402  0711  3001               	movlw	1
  3403  0712  1283               	bcf	3,5	;RP0=0, select bank0
  3404  0713  1303               	bcf	3,6	;RP1=0, select bank0
  3405  0714  00A0               	movwf	??_lcd_iowrite4
  3406  0715  0820               	movf	??_lcd_iowrite4,w
  3407  0716  07A3               	addwf	lcd_iowrite4@i,f
  3408  0717  3008               	movlw	8
  3409  0718  0223               	subwf	lcd_iowrite4@i,w
  3410  0719  1C03               	skipc
  3411  071A  2EF8               	goto	l2010
  3412  071B                     l2016:	
  3413                           
  3414                           ;LCD-PIC16.c: 137: lcd_ioset(E_EN_PIN,1);
  3415  071B  01F4               	clrf	lcd_ioset@out
  3416  071C  0AF4               	incf	lcd_ioset@out,f
  3417  071D  3008               	movlw	8
  3418  071E  118A  2643  118A   	fcall	_lcd_ioset
  3419                           
  3420                           ;LCD-PIC16.c: 138: _delay((unsigned long)((10)*(8000000/4000000.0)));
  3421  0721  3006               	movlw	6
  3422  0722  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0723  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0724  00A0               	movwf	??_lcd_iowrite4
  3425  0725                     u2937:	
  3426  0725  0BA0               	decfsz	??_lcd_iowrite4,f
  3427  0726  2F25               	goto	u2937
  3428  0727  0000               	nop
  3429                           
  3430                           ;LCD-PIC16.c: 139: lcd_ioset(E_EN_PIN,0);
  3431  0728  01F4               	clrf	lcd_ioset@out
  3432  0729  3008               	movlw	8
  3433  072A  118A  2643         	fcall	_lcd_ioset
  3434  072C  0008               	return
  3435  072D                     __end_of_lcd_iowrite4:	
  3436                           
  3437                           	psect	text18
  3438  0643                     __ptext18:	
  3439 ;; *************** function _lcd_ioset *****************
  3440 ;; Defined at:
  3441 ;;		line 86 in file "LCD-PIC16.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  pin             1    wreg     enum E42
  3444 ;;  out             1    4[COMMON] unsigned char 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  pin             1    5[COMMON] enum E42
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3456 ;;      Params:         1       0       0       0
  3457 ;;      Locals:         1       0       0       0
  3458 ;;      Temps:          0       0       0       0
  3459 ;;      Totals:         2       0       0       0
  3460 ;;Total ram usage:        2 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    1
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_lcd_ioinit
  3467 ;;		_lcd_iowrite4
  3468 ;;		_lcd_send
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           
  3473                           ;psect for function _lcd_ioset
  3474  0643                     _lcd_ioset:	
  3475                           
  3476                           ;incstack = 0
  3477                           ; Regs used in _lcd_ioset: [wreg-fsr0h+status,2+status,0]
  3478                           ;lcd_ioset@pin stored from wreg
  3479  0643  00F5               	movwf	lcd_ioset@pin
  3480                           
  3481                           ;LCD-PIC16.c: 88: switch (pin) {
  3482  0644  2E81               	goto	l2004
  3483  0645                     l37:	
  3484                           ;LCD-PIC16.c: 103: case E_D4_PIN:
  3485                           
  3486                           
  3487                           ;LCD-PIC16.c: 104: RC0 = out;
  3488  0645  1C74               	btfss	lcd_ioset@out,0
  3489  0646  2E4B               	goto	u1940
  3490  0647  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0648  1303               	bcf	3,6	;RP1=0, select bank0
  3492  0649  1407               	bsf	7,0	;volatile
  3493  064A  0008               	return
  3494  064B                     u1940:	
  3495  064B  1283               	bcf	3,5	;RP0=0, select bank0
  3496  064C  1303               	bcf	3,6	;RP1=0, select bank0
  3497  064D  1007               	bcf	7,0	;volatile
  3498                           
  3499                           ;LCD-PIC16.c: 105: break;
  3500  064E  0008               	return
  3501  064F                     l39:	
  3502                           ;LCD-PIC16.c: 106: case E_D5_PIN:
  3503                           
  3504                           
  3505                           ;LCD-PIC16.c: 107: RC1 = out;
  3506  064F  1C74               	btfss	lcd_ioset@out,0
  3507  0650  2E55               	goto	u1960
  3508  0651  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0652  1303               	bcf	3,6	;RP1=0, select bank0
  3510  0653  1487               	bsf	7,1	;volatile
  3511  0654  0008               	return
  3512  0655                     u1960:	
  3513  0655  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0656  1303               	bcf	3,6	;RP1=0, select bank0
  3515  0657  1087               	bcf	7,1	;volatile
  3516                           
  3517                           ;LCD-PIC16.c: 108: break;
  3518  0658  0008               	return
  3519  0659                     l40:	
  3520                           ;LCD-PIC16.c: 109: case E_D6_PIN:
  3521                           
  3522                           
  3523                           ;LCD-PIC16.c: 110: RC2 = out;
  3524  0659  1C74               	btfss	lcd_ioset@out,0
  3525  065A  2E5F               	goto	u1980
  3526  065B  1283               	bcf	3,5	;RP0=0, select bank0
  3527  065C  1303               	bcf	3,6	;RP1=0, select bank0
  3528  065D  1507               	bsf	7,2	;volatile
  3529  065E  0008               	return
  3530  065F                     u1980:	
  3531  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3532  0660  1303               	bcf	3,6	;RP1=0, select bank0
  3533  0661  1107               	bcf	7,2	;volatile
  3534                           
  3535                           ;LCD-PIC16.c: 111: break;
  3536  0662  0008               	return
  3537  0663                     l41:	
  3538                           ;LCD-PIC16.c: 112: case E_D7_PIN:
  3539                           
  3540                           
  3541                           ;LCD-PIC16.c: 113: RC3 = out;
  3542  0663  1C74               	btfss	lcd_ioset@out,0
  3543  0664  2E69               	goto	u2000
  3544  0665  1283               	bcf	3,5	;RP0=0, select bank0
  3545  0666  1303               	bcf	3,6	;RP1=0, select bank0
  3546  0667  1587               	bsf	7,3	;volatile
  3547  0668  0008               	return
  3548  0669                     u2000:	
  3549  0669  1283               	bcf	3,5	;RP0=0, select bank0
  3550  066A  1303               	bcf	3,6	;RP1=0, select bank0
  3551  066B  1187               	bcf	7,3	;volatile
  3552                           
  3553                           ;LCD-PIC16.c: 114: break;
  3554  066C  0008               	return
  3555  066D                     l42:	
  3556                           ;LCD-PIC16.c: 115: case E_RS_PIN:
  3557                           
  3558                           
  3559                           ;LCD-PIC16.c: 116: RC4 = out;
  3560  066D  1C74               	btfss	lcd_ioset@out,0
  3561  066E  2E73               	goto	u2020
  3562  066F  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0670  1303               	bcf	3,6	;RP1=0, select bank0
  3564  0671  1607               	bsf	7,4	;volatile
  3565  0672  0008               	return
  3566  0673                     u2020:	
  3567  0673  1283               	bcf	3,5	;RP0=0, select bank0
  3568  0674  1303               	bcf	3,6	;RP1=0, select bank0
  3569  0675  1207               	bcf	7,4	;volatile
  3570                           
  3571                           ;LCD-PIC16.c: 117: break;
  3572  0676  0008               	return
  3573  0677                     l43:	
  3574                           ;LCD-PIC16.c: 118: case E_EN_PIN:
  3575                           
  3576                           
  3577                           ;LCD-PIC16.c: 119: RC5 = out;
  3578  0677  1C74               	btfss	lcd_ioset@out,0
  3579  0678  2E7D               	goto	u2040
  3580  0679  1283               	bcf	3,5	;RP0=0, select bank0
  3581  067A  1303               	bcf	3,6	;RP1=0, select bank0
  3582  067B  1687               	bsf	7,5	;volatile
  3583  067C  0008               	return
  3584  067D                     u2040:	
  3585  067D  1283               	bcf	3,5	;RP0=0, select bank0
  3586  067E  1303               	bcf	3,6	;RP1=0, select bank0
  3587  067F  1287               	bcf	7,5	;volatile
  3588                           
  3589                           ;LCD-PIC16.c: 126: }
  3590                           
  3591                           ;LCD-PIC16.c: 125: break;
  3592                           
  3593                           ;LCD-PIC16.c: 121: case E_RW_PIN:
  3594                           
  3595                           ;LCD-PIC16.c: 120: break;
  3596  0680  0008               	return
  3597  0681                     l2004:	
  3598  0681  0875               	movf	lcd_ioset@pin,w
  3599                           
  3600                           ; Switch size 1, requested type "space"
  3601                           ; Number of cases is 7, Range of values is 4 to 10
  3602                           ; switch strategies available:
  3603                           ; Name         Instructions Cycles
  3604                           ; simple_byte           22    12 (average)
  3605                           ; direct_byte           24    10 (fixed)
  3606                           ; jumptable            263     9 (fixed)
  3607                           ;	Chosen strategy is simple_byte
  3608  0682  3A04               	xorlw	4	; case 4
  3609  0683  1903               	skipnz
  3610  0684  2E45               	goto	l37
  3611  0685  3A01               	xorlw	1	; case 5
  3612  0686  1903               	skipnz
  3613  0687  2E4F               	goto	l39
  3614  0688  3A03               	xorlw	3	; case 6
  3615  0689  1903               	skipnz
  3616  068A  2E59               	goto	l40
  3617  068B  3A01               	xorlw	1	; case 7
  3618  068C  1903               	skipnz
  3619  068D  2E63               	goto	l41
  3620  068E  3A0F               	xorlw	15	; case 8
  3621  068F  1903               	skipnz
  3622  0690  2E77               	goto	l43
  3623  0691  3A01               	xorlw	1	; case 9
  3624  0692  1903               	skipnz
  3625  0693  2E6D               	goto	l42
  3626  0694  3A03               	xorlw	3	; case 10
  3627  0695  1903               	skipnz
  3628  0696  2E98               	goto	l45
  3629  0697  2E98               	goto	l45
  3630  0698                     l45:	
  3631  0698  0008               	return
  3632  0699                     __end_of_lcd_ioset:	
  3633                           
  3634                           	psect	text19
  3635  0039                     __ptext19:	
  3636 ;; *************** function _CalcularDistancia *****************
  3637 ;; Defined at:
  3638 ;;		line 61 in file "Funciones.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  t0              2   29[BANK0 ] unsigned int 
  3641 ;;  t1              2   31[BANK0 ] unsigned int 
  3642 ;;  t2              2   33[BANK0 ] unsigned int 
  3643 ;;  t3              2   35[BANK0 ] unsigned int 
  3644 ;;  distancia1      1   37[BANK0 ] PTR PTR unsigned char 
  3645 ;;		 -> distancia1(1), 
  3646 ;;  distancia2      1   38[BANK0 ] PTR PTR unsigned char 
  3647 ;;		 -> distancia2(1), 
  3648 ;;  distancia3      1   39[BANK0 ] PTR PTR unsigned char 
  3649 ;;		 -> distancia3(1), 
  3650 ;;  distancia4      1   40[BANK0 ] PTR PTR unsigned char 
  3651 ;;		 -> distancia4(1), 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  d3              2   48[BANK0 ] unsigned int 
  3654 ;;  d2              2   46[BANK0 ] unsigned int 
  3655 ;;  d1              2   44[BANK0 ] unsigned int 
  3656 ;;  d0              2   42[BANK0 ] unsigned int 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  1    wreg      void 
  3659 ;; Registers used:
  3660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3666 ;;      Params:         0      12       0       0
  3667 ;;      Locals:         0       8       0       0
  3668 ;;      Temps:          0       1       0       0
  3669 ;;      Totals:         0      21       0       0
  3670 ;;Total ram usage:       21 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:    3
  3673 ;; This function calls:
  3674 ;;		___lwdiv
  3675 ;;		_sprintf
  3676 ;; This function is called by:
  3677 ;;		_main
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           
  3682                           ;psect for function _CalcularDistancia
  3683  0039                     _CalcularDistancia:	
  3684                           
  3685                           ;Funciones.c: 64: unsigned int d0,d1,d2,d3;
  3686                           ;Funciones.c: 66: d0 = ( t0 ) / 58;
  3687                           
  3688                           ;incstack = 0
  3689                           ; Regs used in _CalcularDistancia: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3690  0039  303A               	movlw	58
  3691  003A  1283               	bcf	3,5	;RP0=0, select bank0
  3692  003B  1303               	bcf	3,6	;RP1=0, select bank0
  3693  003C  00A0               	movwf	___lwdiv@divisor
  3694  003D  3000               	movlw	0
  3695  003E  00A1               	movwf	___lwdiv@divisor+1
  3696  003F  083E               	movf	CalcularDistancia@t0+1,w
  3697  0040  00A3               	movwf	___lwdiv@dividend+1
  3698  0041  083D               	movf	CalcularDistancia@t0,w
  3699  0042  00A2               	movwf	___lwdiv@dividend
  3700  0043  118A  272D  118A   	fcall	___lwdiv
  3701  0046  1283               	bcf	3,5	;RP0=0, select bank0
  3702  0047  1303               	bcf	3,6	;RP1=0, select bank0
  3703  0048  0821               	movf	?___lwdiv+1,w
  3704  0049  00CB               	movwf	CalcularDistancia@d0+1
  3705  004A  0820               	movf	?___lwdiv,w
  3706  004B  00CA               	movwf	CalcularDistancia@d0
  3707                           
  3708                           ;Funciones.c: 67: d1 = ( t1 ) / 58;
  3709  004C  303A               	movlw	58
  3710  004D  00A0               	movwf	___lwdiv@divisor
  3711  004E  3000               	movlw	0
  3712  004F  00A1               	movwf	___lwdiv@divisor+1
  3713  0050  0840               	movf	CalcularDistancia@t1+1,w
  3714  0051  00A3               	movwf	___lwdiv@dividend+1
  3715  0052  083F               	movf	CalcularDistancia@t1,w
  3716  0053  00A2               	movwf	___lwdiv@dividend
  3717  0054  118A  272D  118A   	fcall	___lwdiv
  3718  0057  1283               	bcf	3,5	;RP0=0, select bank0
  3719  0058  1303               	bcf	3,6	;RP1=0, select bank0
  3720  0059  0821               	movf	?___lwdiv+1,w
  3721  005A  00CD               	movwf	CalcularDistancia@d1+1
  3722  005B  0820               	movf	?___lwdiv,w
  3723  005C  00CC               	movwf	CalcularDistancia@d1
  3724                           
  3725                           ;Funciones.c: 68: d2 = ( t2 ) / 58;
  3726  005D  303A               	movlw	58
  3727  005E  00A0               	movwf	___lwdiv@divisor
  3728  005F  3000               	movlw	0
  3729  0060  00A1               	movwf	___lwdiv@divisor+1
  3730  0061  0842               	movf	CalcularDistancia@t2+1,w
  3731  0062  00A3               	movwf	___lwdiv@dividend+1
  3732  0063  0841               	movf	CalcularDistancia@t2,w
  3733  0064  00A2               	movwf	___lwdiv@dividend
  3734  0065  118A  272D  118A   	fcall	___lwdiv
  3735  0068  1283               	bcf	3,5	;RP0=0, select bank0
  3736  0069  1303               	bcf	3,6	;RP1=0, select bank0
  3737  006A  0821               	movf	?___lwdiv+1,w
  3738  006B  00CF               	movwf	CalcularDistancia@d2+1
  3739  006C  0820               	movf	?___lwdiv,w
  3740  006D  00CE               	movwf	CalcularDistancia@d2
  3741                           
  3742                           ;Funciones.c: 69: d3 = ( t3 ) / 58;
  3743  006E  303A               	movlw	58
  3744  006F  00A0               	movwf	___lwdiv@divisor
  3745  0070  3000               	movlw	0
  3746  0071  00A1               	movwf	___lwdiv@divisor+1
  3747  0072  0844               	movf	CalcularDistancia@t3+1,w
  3748  0073  00A3               	movwf	___lwdiv@dividend+1
  3749  0074  0843               	movf	CalcularDistancia@t3,w
  3750  0075  00A2               	movwf	___lwdiv@dividend
  3751  0076  118A  272D  118A   	fcall	___lwdiv
  3752  0079  1283               	bcf	3,5	;RP0=0, select bank0
  3753  007A  1303               	bcf	3,6	;RP1=0, select bank0
  3754  007B  0821               	movf	?___lwdiv+1,w
  3755  007C  00D1               	movwf	CalcularDistancia@d3+1
  3756  007D  0820               	movf	?___lwdiv,w
  3757  007E  00D0               	movwf	CalcularDistancia@d3
  3758                           
  3759                           ;Funciones.c: 71: if(d0 == 0){ sprintf(*distancia1,"NOPE\0"); }
  3760  007F  084A               	movf	CalcularDistancia@d0,w
  3761  0080  044B               	iorwf	CalcularDistancia@d0+1,w
  3762  0081  1D03               	btfss	3,2
  3763  0082  2885               	goto	l2338
  3764  0083  303A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3765  0084  288F               	goto	L5
  3766  0085                     l2338:	
  3767                           
  3768                           ;Funciones.c: 72: else if(d0 > 400){ sprintf(*distancia1,"OUT\0"); }
  3769  0085  3001               	movlw	1
  3770  0086  1283               	bcf	3,5	;RP0=0, select bank0
  3771  0087  1303               	bcf	3,6	;RP1=0, select bank0
  3772  0088  024B               	subwf	CalcularDistancia@d0+1,w
  3773  0089  3091               	movlw	145
  3774  008A  1903               	skipnz
  3775  008B  024A               	subwf	CalcularDistancia@d0,w
  3776  008C  1C03               	skipc
  3777  008D  2893               	goto	l2342
  3778  008E  3040               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3779  008F                     L5:	
  3780  008F  00C9               	movwf	??_CalcularDistancia
  3781  0090  0849               	movf	??_CalcularDistancia,w
  3782  0091  00AC               	movwf	sprintf@f
  3783  0092  289D               	goto	L2
  3784  0093                     l2342:	
  3785                           
  3786                           ;Funciones.c: 73: else { sprintf(*distancia1,"%u   \0", d0); }
  3787  0093  3033               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3788  0094  1283               	bcf	3,5	;RP0=0, select bank0
  3789  0095  1303               	bcf	3,6	;RP1=0, select bank0
  3790  0096  00C9               	movwf	??_CalcularDistancia
  3791  0097  0849               	movf	??_CalcularDistancia,w
  3792  0098  00AC               	movwf	sprintf@f
  3793  0099  084B               	movf	CalcularDistancia@d0+1,w
  3794  009A  00AE               	movwf	?_sprintf+2
  3795  009B  084A               	movf	CalcularDistancia@d0,w
  3796  009C  00AD               	movwf	?_sprintf+1
  3797  009D                     L2:	
  3798  009D  0845               	movf	CalcularDistancia@distancia1,w
  3799  009E  0084               	movwf	4
  3800  009F  1383               	bcf	3,7	;select IRP bank0
  3801  00A0  0800               	movf	0,w
  3802  00A1  118A  2215  118A   	fcall	_sprintf
  3803                           
  3804                           ;Funciones.c: 75: if(d1 == 0){ sprintf(*distancia2,"NOPE\0"); }
  3805  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  3806  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  3807  00A6  084C               	movf	CalcularDistancia@d1,w
  3808  00A7  044D               	iorwf	CalcularDistancia@d1+1,w
  3809  00A8  1D03               	btfss	3,2
  3810  00A9  28AC               	goto	l2348
  3811  00AA  303A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3812  00AB  28B6               	goto	L6
  3813  00AC                     l2348:	
  3814                           
  3815                           ;Funciones.c: 76: else if(d1 > 400){ sprintf(*distancia2,"OUT\0"); }
  3816  00AC  3001               	movlw	1
  3817  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  3818  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  3819  00AF  024D               	subwf	CalcularDistancia@d1+1,w
  3820  00B0  3091               	movlw	145
  3821  00B1  1903               	skipnz
  3822  00B2  024C               	subwf	CalcularDistancia@d1,w
  3823  00B3  1C03               	skipc
  3824  00B4  28BA               	goto	l2352
  3825  00B5  3040               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3826  00B6                     L6:	
  3827  00B6  00C9               	movwf	??_CalcularDistancia
  3828  00B7  0849               	movf	??_CalcularDistancia,w
  3829  00B8  00AC               	movwf	sprintf@f
  3830  00B9  28C4               	goto	L3
  3831  00BA                     l2352:	
  3832                           
  3833                           ;Funciones.c: 77: else{ sprintf(*distancia2,"%u   \0", d1); }
  3834  00BA  3033               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3835  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  3836  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  3837  00BD  00C9               	movwf	??_CalcularDistancia
  3838  00BE  0849               	movf	??_CalcularDistancia,w
  3839  00BF  00AC               	movwf	sprintf@f
  3840  00C0  084D               	movf	CalcularDistancia@d1+1,w
  3841  00C1  00AE               	movwf	?_sprintf+2
  3842  00C2  084C               	movf	CalcularDistancia@d1,w
  3843  00C3  00AD               	movwf	?_sprintf+1
  3844  00C4                     L3:	
  3845  00C4  0846               	movf	CalcularDistancia@distancia2,w
  3846  00C5  0084               	movwf	4
  3847  00C6  1383               	bcf	3,7	;select IRP bank0
  3848  00C7  0800               	movf	0,w
  3849  00C8  118A  2215  118A   	fcall	_sprintf
  3850                           
  3851                           ;Funciones.c: 79: if(d2 == 0){ sprintf(*distancia3,"NOPE\0"); }
  3852  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  3853  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  3854  00CD  084E               	movf	CalcularDistancia@d2,w
  3855  00CE  044F               	iorwf	CalcularDistancia@d2+1,w
  3856  00CF  1D03               	btfss	3,2
  3857  00D0  28D3               	goto	l2358
  3858  00D1  303A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3859  00D2  28DD               	goto	L7
  3860  00D3                     l2358:	
  3861                           
  3862                           ;Funciones.c: 80: else if(d2 > 400){ sprintf(*distancia3,"OUT\0"); }
  3863  00D3  3001               	movlw	1
  3864  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  3865  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  3866  00D6  024F               	subwf	CalcularDistancia@d2+1,w
  3867  00D7  3091               	movlw	145
  3868  00D8  1903               	skipnz
  3869  00D9  024E               	subwf	CalcularDistancia@d2,w
  3870  00DA  1C03               	skipc
  3871  00DB  28E1               	goto	l2362
  3872  00DC  3040               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3873  00DD                     L7:	
  3874  00DD  00C9               	movwf	??_CalcularDistancia
  3875  00DE  0849               	movf	??_CalcularDistancia,w
  3876  00DF  00AC               	movwf	sprintf@f
  3877  00E0  28EB               	goto	L4
  3878  00E1                     l2362:	
  3879                           
  3880                           ;Funciones.c: 81: else{ sprintf(*distancia3,"%u   \0", d2); }
  3881  00E1  3033               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3882  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  3883  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  3884  00E4  00C9               	movwf	??_CalcularDistancia
  3885  00E5  0849               	movf	??_CalcularDistancia,w
  3886  00E6  00AC               	movwf	sprintf@f
  3887  00E7  084F               	movf	CalcularDistancia@d2+1,w
  3888  00E8  00AE               	movwf	?_sprintf+2
  3889  00E9  084E               	movf	CalcularDistancia@d2,w
  3890  00EA  00AD               	movwf	?_sprintf+1
  3891  00EB                     L4:	
  3892  00EB  0847               	movf	CalcularDistancia@distancia3,w
  3893  00EC  0084               	movwf	4
  3894  00ED  1383               	bcf	3,7	;select IRP bank0
  3895  00EE  0800               	movf	0,w
  3896  00EF  118A  2215  118A   	fcall	_sprintf
  3897                           
  3898                           ;Funciones.c: 83: if(d3 == 0){ sprintf(*distancia4,"NOPE\0"); }
  3899  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  3900  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  3901  00F4  0850               	movf	CalcularDistancia@d3,w
  3902  00F5  0451               	iorwf	CalcularDistancia@d3+1,w
  3903  00F6  1D03               	btfss	3,2
  3904  00F7  2903               	goto	l2368
  3905  00F8  303A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3906  00F9  00C9               	movwf	??_CalcularDistancia
  3907  00FA  0849               	movf	??_CalcularDistancia,w
  3908  00FB  00AC               	movwf	sprintf@f
  3909  00FC  0848               	movf	CalcularDistancia@distancia4,w
  3910  00FD  0084               	movwf	4
  3911  00FE  1383               	bcf	3,7	;select IRP bank0
  3912  00FF  0800               	movf	0,w
  3913  0100  118A  2215         	fcall	_sprintf
  3914  0102  0008               	return
  3915  0103                     l2368:	
  3916                           
  3917                           ;Funciones.c: 84: else if(d3 > 400){ sprintf(*distancia4,"OUT\0"); }
  3918  0103  3001               	movlw	1
  3919  0104  1283               	bcf	3,5	;RP0=0, select bank0
  3920  0105  1303               	bcf	3,6	;RP1=0, select bank0
  3921  0106  0251               	subwf	CalcularDistancia@d3+1,w
  3922  0107  3091               	movlw	145
  3923  0108  1903               	skipnz
  3924  0109  0250               	subwf	CalcularDistancia@d3,w
  3925  010A  1C03               	skipc
  3926  010B  2917               	goto	l2372
  3927  010C  3040               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3928  010D  00C9               	movwf	??_CalcularDistancia
  3929  010E  0849               	movf	??_CalcularDistancia,w
  3930  010F  00AC               	movwf	sprintf@f
  3931  0110  0848               	movf	CalcularDistancia@distancia4,w
  3932  0111  0084               	movwf	4
  3933  0112  1383               	bcf	3,7	;select IRP bank0
  3934  0113  0800               	movf	0,w
  3935  0114  118A  2215         	fcall	_sprintf
  3936  0116  0008               	return
  3937  0117                     l2372:	
  3938                           
  3939                           ;Funciones.c: 85: else{ sprintf(*distancia4,"%u   \0", d3); }
  3940  0117  3033               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3941  0118  1283               	bcf	3,5	;RP0=0, select bank0
  3942  0119  1303               	bcf	3,6	;RP1=0, select bank0
  3943  011A  00C9               	movwf	??_CalcularDistancia
  3944  011B  0849               	movf	??_CalcularDistancia,w
  3945  011C  00AC               	movwf	sprintf@f
  3946  011D  0851               	movf	CalcularDistancia@d3+1,w
  3947  011E  00AE               	movwf	?_sprintf+2
  3948  011F  0850               	movf	CalcularDistancia@d3,w
  3949  0120  00AD               	movwf	?_sprintf+1
  3950  0121  0848               	movf	CalcularDistancia@distancia4,w
  3951  0122  0084               	movwf	4
  3952  0123  1383               	bcf	3,7	;select IRP bank0
  3953  0124  0800               	movf	0,w
  3954  0125  118A  2215         	fcall	_sprintf
  3955  0127  0008               	return
  3956  0128                     __end_of_CalcularDistancia:	
  3957                           
  3958                           	psect	text20
  3959  0215                     __ptext20:	
  3960 ;; *************** function _sprintf *****************
  3961 ;; Defined at:
  3962 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  sp              1    wreg     PTR unsigned char 
  3965 ;;		 -> dist4(8), dist3(8), dist2(8), dist1(8), 
  3966 ;;		 -> PrintDistancias@dist(35), 
  3967 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  3968 ;;		 -> STR_14(17), STR_12(7), STR_11(5), STR_10(6), 
  3969 ;;		 -> STR_9(7), STR_8(5), STR_7(6), STR_6(7), 
  3970 ;;		 -> STR_5(5), STR_4(6), STR_3(7), STR_2(5), 
  3971 ;;		 -> STR_1(6), 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  sp              1   28[BANK0 ] PTR unsigned char 
  3974 ;;		 -> dist4(8), dist3(8), dist2(8), dist1(8), 
  3975 ;;		 -> PrintDistancias@dist(35), 
  3976 ;;  tmpval          4    0        struct .
  3977 ;;  cp              2   25[BANK0 ] PTR const unsigned char 
  3978 ;;		 -> STR_15(7), dist4(8), dist3(8), dist2(8), 
  3979 ;;		 -> dist1(8), 
  3980 ;;  val             2   21[BANK0 ] unsigned int 
  3981 ;;  len             2    0        unsigned int 
  3982 ;;  c               1   27[BANK0 ] char 
  3983 ;;  ap              1   24[BANK0 ] PTR void [1]
  3984 ;;		 -> ?_sprintf(2), 
  3985 ;;  prec            1   23[BANK0 ] char 
  3986 ;;  flag            1   20[BANK0 ] unsigned char 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  2   12[BANK0 ] int 
  3989 ;; Registers used:
  3990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3996 ;;      Params:         0       5       0       0
  3997 ;;      Locals:         0       9       0       0
  3998 ;;      Temps:          0       3       0       0
  3999 ;;      Totals:         0      17       0       0
  4000 ;;Total ram usage:       17 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:    2
  4003 ;; This function calls:
  4004 ;;		___lwdiv
  4005 ;;		___lwmod
  4006 ;; This function is called by:
  4007 ;;		_CalcularDistancia
  4008 ;;		_PrintDistancias
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           
  4013                           ;psect for function _sprintf
  4014  0215                     _sprintf:	
  4015                           
  4016                           ;incstack = 0
  4017                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4018                           ;sprintf@sp stored from wreg
  4019  0215  1283               	bcf	3,5	;RP0=0, select bank0
  4020  0216  1303               	bcf	3,6	;RP1=0, select bank0
  4021  0217  00BC               	movwf	sprintf@sp
  4022                           
  4023                           ;doprnt.c: 494: va_list ap;
  4024                           ;doprnt.c: 499: signed char c;
  4025                           ;doprnt.c: 506: signed char prec;
  4026                           ;doprnt.c: 508: unsigned char flag;
  4027                           ;doprnt.c: 523: union {
  4028                           ;doprnt.c: 524: unsigned long vd;
  4029                           ;doprnt.c: 525: double integ;
  4030                           ;doprnt.c: 526: } tmpval;
  4031                           ;doprnt.c: 528: unsigned int val;
  4032                           ;doprnt.c: 529: unsigned len;
  4033                           ;doprnt.c: 530: const char * cp;
  4034                           ;doprnt.c: 533: *ap = __va_start();
  4035  0218  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  4036  0219  00B1               	movwf	??_sprintf
  4037  021A  0831               	movf	??_sprintf,w
  4038  021B  00B8               	movwf	sprintf@ap
  4039  021C                     l2234:	
  4040                           ;doprnt.c: 536: while(c = *f++) {
  4041                           
  4042  021C  3001               	movlw	1
  4043  021D  07AC               	addwf	sprintf@f,f
  4044  021E  30FF               	movlw	-1
  4045  021F  072C               	addwf	sprintf@f,w
  4046  0220  0084               	movwf	4
  4047  0221  118A  26A3  118A   	fcall	stringdir
  4048  0224  00B1               	movwf	??_sprintf
  4049  0225  0831               	movf	??_sprintf,w
  4050  0226  00BB               	movwf	sprintf@c
  4051  0227  083B               	movf	sprintf@c,w
  4052  0228  1903               	btfsc	3,2
  4053  0229  2AF5               	goto	l2236
  4054                           
  4055                           ;doprnt.c: 538: if(c != '%')
  4056  022A  3025               	movlw	37
  4057  022B  063B               	xorwf	sprintf@c,w
  4058  022C  1903               	btfsc	3,2
  4059  022D  2A3A               	goto	l2184
  4060                           
  4061                           ;doprnt.c: 540: {
  4062                           ;doprnt.c: 541: ((*sp++ = (c)));
  4063  022E  083B               	movf	sprintf@c,w
  4064  022F  00B1               	movwf	??_sprintf
  4065  0230  083C               	movf	sprintf@sp,w
  4066  0231  0084               	movwf	4
  4067  0232  0831               	movf	??_sprintf,w
  4068  0233  1383               	bcf	3,7	;select IRP bank0
  4069  0234  0080               	movwf	0
  4070  0235  3001               	movlw	1
  4071  0236  00B1               	movwf	??_sprintf
  4072  0237  0831               	movf	??_sprintf,w
  4073  0238  07BC               	addwf	sprintf@sp,f
  4074                           
  4075                           ;doprnt.c: 542: continue;
  4076  0239  2A1C               	goto	l2234
  4077  023A                     l2184:	
  4078                           
  4079                           ;doprnt.c: 543: }
  4080                           ;doprnt.c: 548: flag = 0;
  4081  023A  01B4               	clrf	sprintf@flag
  4082                           
  4083                           ;doprnt.c: 635: switch(c = *f++) {
  4084  023B  2A74               	goto	l2206
  4085  023C                     l2186:	
  4086                           ;doprnt.c: 728: case 's':
  4087                           
  4088                           ;doprnt.c: 638: goto alldone;
  4089                           
  4090                           ;doprnt.c: 637: case 0:
  4091                           
  4092                           
  4093                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4094  023C  0838               	movf	sprintf@ap,w
  4095  023D  0084               	movwf	4
  4096  023E  1383               	bcf	3,7	;select IRP bank0
  4097  023F  0800               	movf	0,w
  4098  0240  00B9               	movwf	sprintf@cp
  4099  0241  3000               	movlw	0
  4100  0242  00BA               	movwf	sprintf@cp+1
  4101  0243  3001               	movlw	1
  4102  0244  00B1               	movwf	??_sprintf
  4103  0245  0831               	movf	??_sprintf,w
  4104  0246  07B8               	addwf	sprintf@ap,f
  4105                           
  4106                           ;doprnt.c: 740: if(!cp)
  4107  0247  0839               	movf	sprintf@cp,w
  4108  0248  043A               	iorwf	sprintf@cp+1,w
  4109  0249  1D03               	btfss	3,2
  4110  024A  2A4F               	goto	l2200
  4111                           
  4112                           ;doprnt.c: 741: cp = "(null)";
  4113  024B  302C               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  4114  024C  00B9               	movwf	sprintf@cp
  4115  024D  3080               	movlw	128
  4116  024E  00BA               	movwf	sprintf@cp+1
  4117  024F                     l2200:	
  4118                           ;doprnt.c: 777: while(*cp)
  4119                           
  4120  024F  083A               	movf	sprintf@cp+1,w
  4121  0250  00FF               	movwf	127
  4122  0251  0839               	movf	sprintf@cp,w
  4123  0252  0084               	movwf	4
  4124  0253  118A  2699  118A   	fcall	stringtab
  4125  0256  3A00               	xorlw	0
  4126  0257  1903               	btfsc	3,2
  4127  0258  2A1C               	goto	l2234
  4128                           
  4129                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
  4130  0259  083A               	movf	sprintf@cp+1,w
  4131  025A  00FF               	movwf	127
  4132  025B  0839               	movf	sprintf@cp,w
  4133  025C  0084               	movwf	4
  4134  025D  118A  2699  118A   	fcall	stringtab
  4135  0260  00B1               	movwf	??_sprintf
  4136  0261  083C               	movf	sprintf@sp,w
  4137  0262  0084               	movwf	4
  4138  0263  0831               	movf	??_sprintf,w
  4139  0264  1383               	bcf	3,7	;select IRP bank0
  4140  0265  0080               	movwf	0
  4141  0266  3001               	movlw	1
  4142  0267  07B9               	addwf	sprintf@cp,f
  4143  0268  1803               	skipnc
  4144  0269  0ABA               	incf	sprintf@cp+1,f
  4145  026A  3001               	movlw	1
  4146  026B  00B1               	movwf	??_sprintf
  4147  026C  0831               	movf	??_sprintf,w
  4148  026D  07BC               	addwf	sprintf@sp,f
  4149  026E  2A4F               	goto	l2200
  4150  026F                     l2202:	
  4151                           ;doprnt.c: 817: case 'u':
  4152                           
  4153                           ;doprnt.c: 813: continue;
  4154                           
  4155                           ;doprnt.c: 802: default:
  4156                           
  4157                           ;doprnt.c: 779: continue;
  4158                           
  4159                           
  4160                           ;doprnt.c: 818: flag |= 0xC0;
  4161  026F  30C0               	movlw	192
  4162  0270  00B1               	movwf	??_sprintf
  4163  0271  0831               	movf	??_sprintf,w
  4164  0272  04B4               	iorwf	sprintf@flag,f
  4165                           
  4166                           ;doprnt.c: 822: }
  4167                           
  4168                           ;doprnt.c: 819: break;
  4169  0273  2A87               	goto	l2208
  4170  0274                     l2206:	
  4171  0274  3001               	movlw	1
  4172  0275  07AC               	addwf	sprintf@f,f
  4173  0276  30FF               	movlw	-1
  4174  0277  072C               	addwf	sprintf@f,w
  4175  0278  0084               	movwf	4
  4176  0279  118A  26A3  118A   	fcall	stringdir
  4177  027C  00BB               	movwf	sprintf@c
  4178                           
  4179                           ; Switch size 1, requested type "space"
  4180                           ; Number of cases is 3, Range of values is 0 to 117
  4181                           ; switch strategies available:
  4182                           ; Name         Instructions Cycles
  4183                           ; simple_byte           10     6 (average)
  4184                           ; direct_byte          243     7 (fixed)
  4185                           ; jumptable            260     6 (fixed)
  4186                           ;	Chosen strategy is simple_byte
  4187  027D  3A00               	xorlw	0	; case 0
  4188  027E  1903               	skipnz
  4189  027F  2AF5               	goto	l2236
  4190  0280  3A73               	xorlw	115	; case 115
  4191  0281  1903               	skipnz
  4192  0282  2A3C               	goto	l2186
  4193  0283  3A06               	xorlw	6	; case 117
  4194  0284  1903               	skipnz
  4195  0285  2A6F               	goto	l2202
  4196  0286  2A1C               	goto	l2234
  4197  0287                     l2208:	
  4198                           
  4199                           ;doprnt.c: 1273: {
  4200                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4201  0287  0838               	movf	sprintf@ap,w
  4202  0288  0084               	movwf	4
  4203  0289  1383               	bcf	3,7	;select IRP bank0
  4204  028A  0800               	movf	0,w
  4205  028B  00B5               	movwf	sprintf@val
  4206  028C  0A84               	incf	4,f
  4207  028D  0800               	movf	0,w
  4208  028E  00B6               	movwf	sprintf@val+1
  4209  028F  3002               	movlw	2
  4210  0290  00B1               	movwf	??_sprintf
  4211  0291  0831               	movf	??_sprintf,w
  4212  0292  07B8               	addwf	sprintf@ap,f
  4213                           
  4214                           ;doprnt.c: 1287: }
  4215                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4216  0293  01BB               	clrf	sprintf@c
  4217  0294  0ABB               	incf	sprintf@c,f
  4218  0295  3005               	movlw	5
  4219  0296  063B               	xorwf	sprintf@c,w
  4220  0297  1903               	btfsc	3,2
  4221  0298  2AB6               	goto	l2224
  4222  0299                     l2218:	
  4223                           
  4224                           ;doprnt.c: 1306: if(val < dpowers[c])
  4225  0299  083B               	movf	sprintf@c,w
  4226  029A  00B1               	movwf	??_sprintf
  4227  029B  0731               	addwf	??_sprintf,w
  4228  029C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4229  029D  0084               	movwf	4
  4230  029E  118A  26A3  118A   	fcall	stringdir
  4231  02A1  00B2               	movwf	??_sprintf+1
  4232  02A2  118A  26A3  118A   	fcall	stringdir
  4233  02A5  00B3               	movwf	??_sprintf+2
  4234  02A6  0833               	movf	??_sprintf+2,w
  4235  02A7  0236               	subwf	sprintf@val+1,w
  4236  02A8  1D03               	skipz
  4237  02A9  2AAC               	goto	u2345
  4238  02AA  0832               	movf	??_sprintf+1,w
  4239  02AB  0235               	subwf	sprintf@val,w
  4240  02AC                     u2345:	
  4241  02AC  1C03               	btfss	3,0
  4242  02AD  2AB6               	goto	l2224
  4243                           
  4244                           ;doprnt.c: 1307: break;
  4245  02AE  3001               	movlw	1
  4246  02AF  00B1               	movwf	??_sprintf
  4247  02B0  0831               	movf	??_sprintf,w
  4248  02B1  07BB               	addwf	sprintf@c,f
  4249  02B2  3005               	movlw	5
  4250  02B3  063B               	xorwf	sprintf@c,w
  4251  02B4  1D03               	btfss	3,2
  4252  02B5  2A99               	goto	l2218
  4253  02B6                     l2224:	
  4254                           
  4255                           ;doprnt.c: 1422: {
  4256                           ;doprnt.c: 1469: }
  4257                           ;doprnt.c: 1472: prec = c;
  4258  02B6  083B               	movf	sprintf@c,w
  4259  02B7  00B1               	movwf	??_sprintf
  4260  02B8  0831               	movf	??_sprintf,w
  4261  02B9  00B7               	movwf	sprintf@prec
  4262  02BA                     l2232:	
  4263                           ;doprnt.c: 1474: while(prec--) {
  4264                           
  4265  02BA  30FF               	movlw	255
  4266  02BB  00B1               	movwf	??_sprintf
  4267  02BC  0831               	movf	??_sprintf,w
  4268  02BD  07B7               	addwf	sprintf@prec,f
  4269  02BE  0A37               	incf	sprintf@prec,w
  4270  02BF  1903               	btfsc	3,2
  4271  02C0  2A1C               	goto	l2234
  4272                           
  4273                           ;doprnt.c: 1478: {
  4274                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4275  02C1  300A               	movlw	10
  4276  02C2  00A7               	movwf	___lwmod@divisor
  4277  02C3  3000               	movlw	0
  4278  02C4  00A8               	movwf	___lwmod@divisor+1
  4279  02C5  0837               	movf	sprintf@prec,w
  4280  02C6  00B1               	movwf	??_sprintf
  4281  02C7  0731               	addwf	??_sprintf,w
  4282  02C8  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4283  02C9  0084               	movwf	4
  4284  02CA  118A  26A3  118A   	fcall	stringdir
  4285  02CD  00A0               	movwf	___lwdiv@divisor
  4286  02CE  118A  26A3  118A   	fcall	stringdir
  4287  02D1  00A1               	movwf	___lwdiv@divisor+1
  4288  02D2  0836               	movf	sprintf@val+1,w
  4289  02D3  00A3               	movwf	___lwdiv@dividend+1
  4290  02D4  0835               	movf	sprintf@val,w
  4291  02D5  00A2               	movwf	___lwdiv@dividend
  4292  02D6  118A  272D  118A   	fcall	___lwdiv
  4293  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  4294  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  4295  02DB  0821               	movf	?___lwdiv+1,w
  4296  02DC  00AA               	movwf	___lwmod@dividend+1
  4297  02DD  0820               	movf	?___lwdiv,w
  4298  02DE  00A9               	movwf	___lwmod@dividend
  4299  02DF  118A  276B  118A   	fcall	___lwmod
  4300  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  4301  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  4302  02E4  0827               	movf	?___lwmod,w
  4303  02E5  3E30               	addlw	48
  4304  02E6  00B2               	movwf	??_sprintf+1
  4305  02E7  0832               	movf	??_sprintf+1,w
  4306  02E8  00BB               	movwf	sprintf@c
  4307                           
  4308                           ;doprnt.c: 1523: }
  4309                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4310  02E9  083B               	movf	sprintf@c,w
  4311  02EA  00B1               	movwf	??_sprintf
  4312  02EB  083C               	movf	sprintf@sp,w
  4313  02EC  0084               	movwf	4
  4314  02ED  0831               	movf	??_sprintf,w
  4315  02EE  1383               	bcf	3,7	;select IRP bank0
  4316  02EF  0080               	movwf	0
  4317  02F0  3001               	movlw	1
  4318  02F1  00B1               	movwf	??_sprintf
  4319  02F2  0831               	movf	??_sprintf,w
  4320  02F3  07BC               	addwf	sprintf@sp,f
  4321  02F4  2ABA               	goto	l2232
  4322  02F5                     l2236:	
  4323                           ;doprnt.c: 1525: }
  4324                           ;doprnt.c: 1533: }
  4325                           ;doprnt.c: 1535: alldone:
  4326                           
  4327                           
  4328                           ;doprnt.c: 1538: *sp = 0;
  4329  02F5  083C               	movf	sprintf@sp,w
  4330  02F6  0084               	movwf	4
  4331  02F7  1383               	bcf	3,7	;select IRP bank0
  4332  02F8  0180               	clrf	0
  4333  02F9  0008               	return
  4334  02FA                     __end_of_sprintf:	
  4335                           ;doprnt.c: 1540: return 0;
  4336                           ;	Return value of _sprintf is never used
  4337                           
  4338                           
  4339                           	psect	text21
  4340  076B                     __ptext21:	
  4341 ;; *************** function ___lwmod *****************
  4342 ;; Defined at:
  4343 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  divisor         2    7[BANK0 ] unsigned int 
  4346 ;;  dividend        2    9[BANK0 ] unsigned int 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  counter         1   11[BANK0 ] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  2    7[BANK0 ] unsigned int 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4358 ;;      Params:         0       4       0       0
  4359 ;;      Locals:         0       1       0       0
  4360 ;;      Temps:          1       0       0       0
  4361 ;;      Totals:         1       5       0       0
  4362 ;;Total ram usage:        6 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    1
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_sprintf
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           
  4373                           ;psect for function ___lwmod
  4374  076B                     ___lwmod:	
  4375                           
  4376                           ;incstack = 0
  4377                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4378  076B  1283               	bcf	3,5	;RP0=0, select bank0
  4379  076C  1303               	bcf	3,6	;RP1=0, select bank0
  4380  076D  0827               	movf	___lwmod@divisor,w
  4381  076E  0428               	iorwf	___lwmod@divisor+1,w
  4382  076F  1903               	btfsc	3,2
  4383  0770  2F9A               	goto	l1532
  4384  0771  01AB               	clrf	___lwmod@counter
  4385  0772  0AAB               	incf	___lwmod@counter,f
  4386  0773                     l1522:	
  4387  0773  1BA8               	btfsc	___lwmod@divisor+1,7
  4388  0774  2F81               	goto	l1524
  4389  0775  3001               	movlw	1
  4390  0776                     u1295:	
  4391  0776  1003               	clrc
  4392  0777  0DA7               	rlf	___lwmod@divisor,f
  4393  0778  0DA8               	rlf	___lwmod@divisor+1,f
  4394  0779  3EFF               	addlw	-1
  4395  077A  1D03               	skipz
  4396  077B  2F76               	goto	u1295
  4397  077C  3001               	movlw	1
  4398  077D  00F5               	movwf	??___lwmod
  4399  077E  0875               	movf	??___lwmod,w
  4400  077F  07AB               	addwf	___lwmod@counter,f
  4401  0780  2F73               	goto	l1522
  4402  0781                     l1524:	
  4403  0781  0828               	movf	___lwmod@divisor+1,w
  4404  0782  022A               	subwf	___lwmod@dividend+1,w
  4405  0783  1D03               	skipz
  4406  0784  2F87               	goto	u1315
  4407  0785  0827               	movf	___lwmod@divisor,w
  4408  0786  0229               	subwf	___lwmod@dividend,w
  4409  0787                     u1315:	
  4410  0787  1C03               	skipc
  4411  0788  2F8F               	goto	l1528
  4412  0789  0827               	movf	___lwmod@divisor,w
  4413  078A  02A9               	subwf	___lwmod@dividend,f
  4414  078B  0828               	movf	___lwmod@divisor+1,w
  4415  078C  1C03               	skipc
  4416  078D  03AA               	decf	___lwmod@dividend+1,f
  4417  078E  02AA               	subwf	___lwmod@dividend+1,f
  4418  078F                     l1528:	
  4419  078F  3001               	movlw	1
  4420  0790                     u1325:	
  4421  0790  1003               	clrc
  4422  0791  0CA8               	rrf	___lwmod@divisor+1,f
  4423  0792  0CA7               	rrf	___lwmod@divisor,f
  4424  0793  3EFF               	addlw	-1
  4425  0794  1D03               	skipz
  4426  0795  2F90               	goto	u1325
  4427  0796  3001               	movlw	1
  4428  0797  02AB               	subwf	___lwmod@counter,f
  4429  0798  1D03               	btfss	3,2
  4430  0799  2F81               	goto	l1524
  4431  079A                     l1532:	
  4432  079A  082A               	movf	___lwmod@dividend+1,w
  4433  079B  00A8               	movwf	?___lwmod+1
  4434  079C  0829               	movf	___lwmod@dividend,w
  4435  079D  00A7               	movwf	?___lwmod
  4436  079E  0008               	return
  4437  079F                     __end_of___lwmod:	
  4438                           
  4439                           	psect	text22
  4440  072D                     __ptext22:	
  4441 ;; *************** function ___lwdiv *****************
  4442 ;; Defined at:
  4443 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  divisor         2    0[BANK0 ] unsigned int 
  4446 ;;  dividend        2    2[BANK0 ] unsigned int 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  quotient        2    5[BANK0 ] unsigned int 
  4449 ;;  counter         1    4[BANK0 ] unsigned char 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  2    0[BANK0 ] unsigned int 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4459 ;;      Params:         0       4       0       0
  4460 ;;      Locals:         0       3       0       0
  4461 ;;      Temps:          1       0       0       0
  4462 ;;      Totals:         1       7       0       0
  4463 ;;Total ram usage:        8 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    1
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_CalcularDistancia
  4470 ;;		_sprintf
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           
  4475                           ;psect for function ___lwdiv
  4476  072D                     ___lwdiv:	
  4477                           
  4478                           ;incstack = 0
  4479                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4480  072D  1283               	bcf	3,5	;RP0=0, select bank0
  4481  072E  1303               	bcf	3,6	;RP1=0, select bank0
  4482  072F  01A5               	clrf	___lwdiv@quotient
  4483  0730  01A6               	clrf	___lwdiv@quotient+1
  4484  0731  0820               	movf	___lwdiv@divisor,w
  4485  0732  0421               	iorwf	___lwdiv@divisor+1,w
  4486  0733  1903               	btfsc	3,2
  4487  0734  2F66               	goto	l2088
  4488  0735  01A4               	clrf	___lwdiv@counter
  4489  0736  0AA4               	incf	___lwdiv@counter,f
  4490  0737                     l2076:	
  4491  0737  1BA1               	btfsc	___lwdiv@divisor+1,7
  4492  0738  2F45               	goto	l2078
  4493  0739  3001               	movlw	1
  4494  073A                     u2185:	
  4495  073A  1003               	clrc
  4496  073B  0DA0               	rlf	___lwdiv@divisor,f
  4497  073C  0DA1               	rlf	___lwdiv@divisor+1,f
  4498  073D  3EFF               	addlw	-1
  4499  073E  1D03               	skipz
  4500  073F  2F3A               	goto	u2185
  4501  0740  3001               	movlw	1
  4502  0741  00F4               	movwf	??___lwdiv
  4503  0742  0874               	movf	??___lwdiv,w
  4504  0743  07A4               	addwf	___lwdiv@counter,f
  4505  0744  2F37               	goto	l2076
  4506  0745                     l2078:	
  4507  0745  3001               	movlw	1
  4508  0746                     u2205:	
  4509  0746  1003               	clrc
  4510  0747  0DA5               	rlf	___lwdiv@quotient,f
  4511  0748  0DA6               	rlf	___lwdiv@quotient+1,f
  4512  0749  3EFF               	addlw	-1
  4513  074A  1D03               	skipz
  4514  074B  2F46               	goto	u2205
  4515  074C  0821               	movf	___lwdiv@divisor+1,w
  4516  074D  0223               	subwf	___lwdiv@dividend+1,w
  4517  074E  1D03               	skipz
  4518  074F  2F52               	goto	u2215
  4519  0750  0820               	movf	___lwdiv@divisor,w
  4520  0751  0222               	subwf	___lwdiv@dividend,w
  4521  0752                     u2215:	
  4522  0752  1C03               	skipc
  4523  0753  2F5B               	goto	l2084
  4524  0754  0820               	movf	___lwdiv@divisor,w
  4525  0755  02A2               	subwf	___lwdiv@dividend,f
  4526  0756  0821               	movf	___lwdiv@divisor+1,w
  4527  0757  1C03               	skipc
  4528  0758  03A3               	decf	___lwdiv@dividend+1,f
  4529  0759  02A3               	subwf	___lwdiv@dividend+1,f
  4530  075A  1425               	bsf	___lwdiv@quotient,0
  4531  075B                     l2084:	
  4532  075B  3001               	movlw	1
  4533  075C                     u2225:	
  4534  075C  1003               	clrc
  4535  075D  0CA1               	rrf	___lwdiv@divisor+1,f
  4536  075E  0CA0               	rrf	___lwdiv@divisor,f
  4537  075F  3EFF               	addlw	-1
  4538  0760  1D03               	skipz
  4539  0761  2F5C               	goto	u2225
  4540  0762  3001               	movlw	1
  4541  0763  02A4               	subwf	___lwdiv@counter,f
  4542  0764  1D03               	btfss	3,2
  4543  0765  2F45               	goto	l2078
  4544  0766                     l2088:	
  4545  0766  0826               	movf	___lwdiv@quotient+1,w
  4546  0767  00A1               	movwf	?___lwdiv+1
  4547  0768  0825               	movf	___lwdiv@quotient,w
  4548  0769  00A0               	movwf	?___lwdiv
  4549  076A  0008               	return
  4550  076B                     __end_of___lwdiv:	
  4551                           
  4552                           	psect	text23
  4553  0460                     __ptext23:	
  4554 ;; *************** function _echo *****************
  4555 ;; Defined at:
  4556 ;;		line 71 in file "main.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		wreg, status,2, status,0
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4570 ;;      Params:         0       0       0       0
  4571 ;;      Locals:         0       0       0       0
  4572 ;;      Temps:          4       0       0       0
  4573 ;;      Totals:         4       0       0       0
  4574 ;;Total ram usage:        4 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		Interrupt level 1
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           
  4584                           ;psect for function _echo
  4585  0460                     _echo:	
  4586                           
  4587                           ;main.c: 73: if(RBIF == 1)
  4588  0460  1C0B               	btfss	11,0	;volatile
  4589  0461  2CD9               	goto	i1l344
  4590                           
  4591                           ;main.c: 74: {
  4592                           ;main.c: 75: RBIE = 0;
  4593  0462  118B               	bcf	11,3	;volatile
  4594                           
  4595                           ;main.c: 81: if ( (RB4 == 1) && (rbon == 0) )
  4596  0463  1E06               	btfss	6,4	;volatile
  4597  0464  2C6D               	goto	i1l329
  4598  0465  0876               	movf	_rbon,w
  4599  0466  0477               	iorwf	_rbon+1,w
  4600  0467  1D03               	btfss	3,2
  4601  0468  2C6D               	goto	i1l329
  4602                           
  4603                           ;main.c: 82: {
  4604                           ;main.c: 83: TMR1 = 0;
  4605  0469  018E               	clrf	14	;volatile
  4606  046A  018F               	clrf	15	;volatile
  4607                           
  4608                           ;main.c: 84: rbon = 4;
  4609  046B  3004               	movlw	4
  4610  046C  2CBC               	goto	L11
  4611  046D                     i1l329:	
  4612                           ;main.c: 86: }
  4613                           
  4614                           ;main.c: 85: TMR1ON = 1;
  4615                           
  4616                           
  4617                           ;main.c: 88: else if( (RB4 == 0) && (rbon == 4) )
  4618  046D  1A06               	btfsc	6,4	;volatile
  4619  046E  2C7B               	goto	i1l331
  4620  046F  3004               	movlw	4
  4621  0470  0676               	xorwf	_rbon,w
  4622  0471  0477               	iorwf	_rbon+1,w
  4623  0472  1D03               	btfss	3,2
  4624  0473  2C7B               	goto	i1l331
  4625                           
  4626                           ;main.c: 89: {
  4627                           ;main.c: 90: t4 = TMR1;
  4628  0474  080F               	movf	15,w	;volatile
  4629  0475  00F9               	movwf	_t4+1
  4630  0476  080E               	movf	14,w	;volatile
  4631  0477  00F8               	movwf	_t4
  4632                           
  4633                           ;main.c: 91: rbon = 0;
  4634  0478  01F6               	clrf	_rbon
  4635  0479  01F7               	clrf	_rbon+1
  4636  047A  2CD6               	goto	L10
  4637  047B                     i1l331:	
  4638                           ;main.c: 93: }
  4639                           
  4640                           ;main.c: 92: TMR1ON = 0;
  4641                           
  4642                           
  4643                           ;main.c: 95: else if ( (RB5 == 1) && (rbon == 0) )
  4644  047B  1E86               	btfss	6,5	;volatile
  4645  047C  2C85               	goto	i1l333
  4646  047D  0876               	movf	_rbon,w
  4647  047E  0477               	iorwf	_rbon+1,w
  4648  047F  1D03               	btfss	3,2
  4649  0480  2C85               	goto	i1l333
  4650                           
  4651                           ;main.c: 96: {
  4652                           ;main.c: 97: TMR1 = 0;
  4653  0481  018E               	clrf	14	;volatile
  4654  0482  018F               	clrf	15	;volatile
  4655                           
  4656                           ;main.c: 98: rbon = 5;
  4657  0483  3005               	movlw	5
  4658  0484  2CBC               	goto	L11
  4659  0485                     i1l333:	
  4660                           ;main.c: 100: }
  4661                           
  4662                           ;main.c: 99: TMR1ON = 1;
  4663                           
  4664                           
  4665                           ;main.c: 102: else if( (RB5 == 0) && (rbon == 5) )
  4666  0485  1A86               	btfsc	6,5	;volatile
  4667  0486  2C97               	goto	i1l335
  4668  0487  3005               	movlw	5
  4669  0488  0676               	xorwf	_rbon,w
  4670  0489  0477               	iorwf	_rbon+1,w
  4671  048A  1D03               	btfss	3,2
  4672  048B  2C97               	goto	i1l335
  4673                           
  4674                           ;main.c: 103: {
  4675                           ;main.c: 104: t5 = TMR1;
  4676  048C  080F               	movf	15,w	;volatile
  4677  048D  1683               	bsf	3,5	;RP0=1, select bank1
  4678  048E  1303               	bcf	3,6	;RP1=0, select bank1
  4679  048F  00A1               	movwf	(_t5+1)^(0+128)
  4680  0490  1283               	bcf	3,5	;RP0=0, select bank0
  4681  0491  1303               	bcf	3,6	;RP1=0, select bank0
  4682  0492  080E               	movf	14,w	;volatile
  4683  0493  1683               	bsf	3,5	;RP0=1, select bank1
  4684  0494  1303               	bcf	3,6	;RP1=0, select bank1
  4685  0495  00A0               	movwf	_t5^(0+128)
  4686  0496  2CD2               	goto	L12
  4687  0497                     i1l335:	
  4688                           ;main.c: 107: }
  4689                           
  4690                           ;main.c: 106: TMR1ON = 0;
  4691                           
  4692                           ;main.c: 105: rbon = 0;
  4693                           
  4694                           
  4695                           ;main.c: 109: else if ( (RB6 == 1) && (rbon == 0) )
  4696  0497  1F06               	btfss	6,6	;volatile
  4697  0498  2CA1               	goto	i1l337
  4698  0499  0876               	movf	_rbon,w
  4699  049A  0477               	iorwf	_rbon+1,w
  4700  049B  1D03               	btfss	3,2
  4701  049C  2CA1               	goto	i1l337
  4702                           
  4703                           ;main.c: 110: {
  4704                           ;main.c: 111: TMR1 = 0;
  4705  049D  018E               	clrf	14	;volatile
  4706  049E  018F               	clrf	15	;volatile
  4707                           
  4708                           ;main.c: 112: rbon = 6;
  4709  049F  3006               	movlw	6
  4710  04A0  2CBC               	goto	L11
  4711  04A1                     i1l337:	
  4712                           ;main.c: 114: }
  4713                           
  4714                           ;main.c: 113: TMR1ON = 1;
  4715                           
  4716                           
  4717                           ;main.c: 116: else if( (RB6 == 0) && (rbon == 6) )
  4718  04A1  1B06               	btfsc	6,6	;volatile
  4719  04A2  2CB3               	goto	i1l339
  4720  04A3  3006               	movlw	6
  4721  04A4  0676               	xorwf	_rbon,w
  4722  04A5  0477               	iorwf	_rbon+1,w
  4723  04A6  1D03               	btfss	3,2
  4724  04A7  2CB3               	goto	i1l339
  4725                           
  4726                           ;main.c: 117: {
  4727                           ;main.c: 118: t6 = TMR1;
  4728  04A8  080F               	movf	15,w	;volatile
  4729  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  4730  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  4731  04AB  00A3               	movwf	(_t6+1)^(0+128)
  4732  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  4733  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  4734  04AE  080E               	movf	14,w	;volatile
  4735  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  4736  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  4737  04B1  00A2               	movwf	_t6^(0+128)
  4738  04B2  2CD2               	goto	L12
  4739  04B3                     i1l339:	
  4740                           ;main.c: 121: }
  4741                           
  4742                           ;main.c: 120: TMR1ON = 0;
  4743                           
  4744                           ;main.c: 119: rbon = 0;
  4745                           
  4746                           
  4747                           ;main.c: 123: else if ( (RB7 == 1) && (rbon == 0) )
  4748  04B3  1F86               	btfss	6,7	;volatile
  4749  04B4  2CC1               	goto	i1l341
  4750  04B5  0876               	movf	_rbon,w
  4751  04B6  0477               	iorwf	_rbon+1,w
  4752  04B7  1D03               	btfss	3,2
  4753  04B8  2CC1               	goto	i1l341
  4754                           
  4755                           ;main.c: 124: {
  4756                           ;main.c: 125: TMR1 = 0;
  4757  04B9  018E               	clrf	14	;volatile
  4758  04BA  018F               	clrf	15	;volatile
  4759                           
  4760                           ;main.c: 126: rbon = 7;
  4761  04BB  3007               	movlw	7
  4762  04BC                     L11:	
  4763  04BC  00F6               	movwf	_rbon
  4764  04BD  3000               	movlw	0
  4765  04BE  00F7               	movwf	_rbon+1
  4766                           
  4767                           ;main.c: 127: TMR1ON = 1;
  4768  04BF  1410               	bsf	16,0	;volatile
  4769                           
  4770                           ;main.c: 128: }
  4771  04C0  2CD7               	goto	i1l1996
  4772  04C1                     i1l341:	
  4773                           
  4774                           ;main.c: 130: else if( (RB7 == 0) && (rbon == 7) )
  4775  04C1  1B86               	btfsc	6,7	;volatile
  4776  04C2  2CD7               	goto	i1l1996
  4777  04C3  3007               	movlw	7
  4778  04C4  0676               	xorwf	_rbon,w
  4779  04C5  0477               	iorwf	_rbon+1,w
  4780  04C6  1D03               	btfss	3,2
  4781  04C7  2CD7               	goto	i1l1996
  4782                           
  4783                           ;main.c: 131: {
  4784                           ;main.c: 132: t7 = TMR1;
  4785  04C8  080F               	movf	15,w	;volatile
  4786  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  4787  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  4788  04CB  00A5               	movwf	(_t7+1)^(0+128)
  4789  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  4790  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  4791  04CE  080E               	movf	14,w	;volatile
  4792  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  4793  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  4794  04D1  00A4               	movwf	_t7^(0+128)
  4795  04D2                     L12:	
  4796                           
  4797                           ;main.c: 133: rbon = 0;
  4798  04D2  01F6               	clrf	_rbon
  4799  04D3  01F7               	clrf	_rbon+1
  4800                           
  4801                           ;main.c: 134: TMR1ON = 0;
  4802  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  4803  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  4804  04D6                     L10:	
  4805  04D6  1010               	bcf	16,0	;volatile
  4806  04D7                     i1l1996:	
  4807                           
  4808                           ;main.c: 135: }
  4809                           ;main.c: 137: RBIF = 0;
  4810  04D7  100B               	bcf	11,0	;volatile
  4811                           
  4812                           ;main.c: 138: RBIE = 1;
  4813  04D8  158B               	bsf	11,3	;volatile
  4814  04D9                     i1l344:	
  4815  04D9  0873               	movf	??_echo+3,w
  4816  04DA  00FF               	movwf	127
  4817  04DB  0872               	movf	??_echo+2,w
  4818  04DC  008A               	movwf	10
  4819  04DD  0871               	movf	??_echo+1,w
  4820  04DE  0084               	movwf	4
  4821  04DF  0E70               	swapf	??_echo^(0+-128),w
  4822  04E0  0083               	movwf	3
  4823  04E1  0EFE               	swapf	126,f
  4824  04E2  0E7E               	swapf	126,w
  4825  04E3  0009               	retfie
  4826  04E4                     __end_of_echo:	
  4827  007E                     btemp	set	126	;btemp
  4828  007E                     wtemp	set	126
  4829  007E                     wtemp0	set	126
  4830  0080                     wtemp1	set	128
  4831  0082                     wtemp2	set	130
  4832  0084                     wtemp3	set	132
  4833  0086                     wtemp4	set	134
  4834  0088                     wtemp5	set	136
  4835  007F                     wtemp6	set	127
  4836  007E                     ttemp	set	126
  4837  007E                     ttemp0	set	126
  4838  0081                     ttemp1	set	129
  4839  0084                     ttemp2	set	132
  4840  0087                     ttemp3	set	135
  4841  007F                     ttemp4	set	127
  4842  007E                     ltemp	set	126
  4843  007E                     ltemp0	set	126
  4844  0082                     ltemp1	set	130
  4845  0086                     ltemp2	set	134
  4846  0080                     ltemp3	set	128
  4847                           
  4848                           	psect	intentry
  4849  0004                     __pintentry:	
  4850                           ;incstack = 0
  4851                           ; Regs used in _echo: [wreg+status,2+status,0]
  4852                           
  4853  0004                     interrupt_function:	
  4854  007E                     saved_w	set	btemp
  4855  0004  00FE               	movwf	btemp
  4856  0005  0E03               	swapf	3,w
  4857  0006  00F0               	movwf	??_echo
  4858  0007  0804               	movf	4,w
  4859  0008  00F1               	movwf	??_echo+1
  4860  0009  080A               	movf	10,w
  4861  000A  00F2               	movwf	??_echo+2
  4862  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4863  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4864  000D  087F               	movf	btemp+1,w
  4865  000E  00F3               	movwf	??_echo+3
  4866  000F  118A  2C60         	ljmp	_echo


Data Sizes:
    Strings     54
    Constant    14
    Data        6
    BSS         43
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     73      80
    BANK1            80      4      43
    BANK2            80      0       0

Pointer List with Targets:

    lcd_ioinit@iodata	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_14(CODE[17]), STR_12(CODE[7]), STR_11(CODE[5]), STR_10(CODE[6]), 
		 -> STR_9(CODE[7]), STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[7]), 
		 -> STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[7]), STR_2(CODE[5]), 
		 -> STR_1(CODE[6]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_15(CODE[7]), dist4(BANK1[8]), dist3(BANK1[8]), dist2(BANK1[8]), 
		 -> dist1(BANK1[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 35
		 -> dist4(BANK1[8]), dist3(BANK1[8]), dist2(BANK1[8]), dist1(BANK1[8]), 
		 -> PrintDistancias@dist(BANK0[35]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    distancia4	PTR unsigned char  size(1) Largest target is 8
		 -> dist4(BANK1[8]), 

    distancia3	PTR unsigned char  size(1) Largest target is 8
		 -> dist3(BANK1[8]), 

    distancia2	PTR unsigned char  size(1) Largest target is 8
		 -> dist2(BANK1[8]), 

    distancia1	PTR unsigned char  size(1) Largest target is 8
		 -> dist1(BANK1[8]), 

    PrintDistancias@dist4	PTR unsigned char  size(1) Largest target is 8
		 -> dist4(BANK1[8]), 

    PrintDistancias@dist3	PTR unsigned char  size(1) Largest target is 8
		 -> dist3(BANK1[8]), 

    PrintDistancias@dist2	PTR unsigned char  size(1) Largest target is 8
		 -> dist2(BANK1[8]), 

    PrintDistancias@dist1	PTR unsigned char  size(1) Largest target is 8
		 -> dist1(BANK1[8]), 

    CalcularDistancia@distancia4	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia4(BANK0[1]), 

    CalcularDistancia@distancia3	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia3(BANK0[1]), 

    CalcularDistancia@distancia2	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia2(BANK0[1]), 

    CalcularDistancia@distancia1	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia1(BANK0[1]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 35
		 -> PrintDistancias@dist(BANK0[35]), 

    lcd_puts@string	PTR const unsigned char  size(2) Largest target is 12
		 -> dist4(BANK1[8]), dist3(BANK1[8]), dist2(BANK1[8]), dist1(BANK1[8]), 
		 -> STR_13(CODE[12]), 

    lcd_init@iodata	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_ResetEcho
    _main->_Trigger
    _UART_Init->___aldiv
    _PrintDistancias->_UART_Write_Text
    _UART_Write_Text->_UART_Write
    _lcd_ioinit->_lcd_ioset
    _lcd_send->_lcd_ioset
    _lcd_iowrite4->_lcd_ioset
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _echo in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PrintDistancias
    _UART_Init->___aldiv
    _PrintDistancias->_sprintf
    _lcd_puts->_lcd_send
    _lcd_goto->_lcd_send
    _Inicializaciones->_lcd_init
    _lcd_on->_lcd_send
    _lcd_init->_lcd_send
    _lcd_clear->_lcd_send
    _lcd_send->_lcd_iowrite4
    _CalcularDistancia->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _echo in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _echo in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _echo in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   28649
                                              0 BANK1      4     4      0
                  _CalcularDistancia
                   _Inicializaciones
                    _PrintDistancias
                          _ResetEcho
                            _Trigger
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     993
                                             14 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     705
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Trigger                                              2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ResetEcho                                            2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _PrintDistancias                                     44    41      3   10976
                                             29 BANK0     44    41      3
                    _UART_Write_Text
                           _lcd_goto
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2    3514
                                              7 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             3     2      1    3579
                                              7 BANK0      3     2      1
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      4     4      0     191
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Inicializaciones                                     2     2      0   11262
                                             13 BANK0      2     2      0
                          _lcd_clear
                           _lcd_init
                             _lcd_on
 ---------------------------------------------------------------------------------
 (2) _lcd_on                                               1     1      0    3124
                                              7 BANK0      1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             6     4      2    5014
                                              7 BANK0      6     4      2
                         _lcd_ioinit
                       _lcd_iowrite4
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_ioinit                                           3     3      0     804
                                              0 BANK0      3     3      0
                          _lcd_ioset
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            2     2      0    3124
                                              7 BANK0      2     2      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_send                                             3     2      1    3124
                                              4 BANK0      3     2      1
                          _lcd_ioset
                       _lcd_iowrite4
                       _lcd_iowrite8
 ---------------------------------------------------------------------------------
 (4) _lcd_iowrite8                                         1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_iowrite4                                         4     4      0     833
                                              0 BANK0      4     4      0
                          _lcd_ioset
 ---------------------------------------------------------------------------------
 (5) _lcd_ioset                                            2     1      1     672
                                              4 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _CalcularDistancia                                   21     9     12    5418
                                             29 BANK0     21     9     12
                            ___lwdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    18      5    3127
                                             12 BANK0     17    12      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     891
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _echo                                                 4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcularDistancia
     ___lwdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _Inicializaciones
     _lcd_clear
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
     _lcd_init
       _lcd_ioinit
         _lcd_ioset
       _lcd_iowrite4
         _lcd_ioset
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
     _lcd_on
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
   _PrintDistancias
     _UART_Write_Text
       _UART_Write
     _lcd_goto
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
     _lcd_puts
       _lcd_send
         _lcd_ioset
         _lcd_iowrite4
           _lcd_ioset
         _lcd_iowrite8
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _ResetEcho
   _Trigger
   _UART_Init
     ___aldiv

 _echo (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      4      2B       5       53.8%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     49      50       3      100.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      85      10        0.0%
ABS                  0      0      85       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue Mar 15 20:46:22 2016

  __size_of_Inicializaciones 002D                ?_lcd_iowrite4 0070                ?_lcd_iowrite8 0070  
                          pc 0002                  __CFG_CP$OFF 0000                           l40 0659  
                         l41 0663                           l42 066D                           l43 0677  
                         l45 0698                           l37 0645                           l39 064F  
                         _t4 0078                           _t5 00A0                           _t6 00A2  
                         _t7 00A4                           fsr 0004                          l183 0F35  
                        l513 03E3                          _GIE 005F                          _RB0 0030  
                        _RB1 0031                          _RC0 0038                          _RB2 0032  
                        _RC1 0039                          _RB3 0033                          _RC2 003A  
                        _RB4 0034                          _RC3 003B                          _RB5 0035  
                        _RC4 003C                          _RB6 0036                          _RC5 003D  
                        _RB7 0037                 __CFG_CPD$OFF 0000                          _TX9 04C6  
           lcd_ioinit@iodata 0021                          fsr0 0004                          indf 0000  
                lcd_goto@col 0029                  lcd_goto@row 0027                 __CFG_IESO$ON 0000  
                lcd_ioinit@i 0022                 __CFG_LVP$OFF 0000                         l2010 06F8  
                       l2004 0681                         l2200 024F                         l2016 071B  
                       l2040 0FEF                         l2202 026F                         l2130 03A4  
                       l2060 07CC                         l2116 0363                         l2206 0274  
                       l2054 07A8                         l2046 0FFE                         l2232 02BA  
                       l2224 02B6                         l2208 0287                         l1522 0773  
                       l2218 0299                         l2234 021C                         l2154 0FA7  
                       l2250 03F4                         l2084 075B                         l2076 0737  
                       l1524 0781                         l1532 079A                         l2236 02F5  
                       l2260 0414                         l2078 0745                         l2342 0093  
                       l2174 0F7F                         l2158 0FB0                         l2166 0FBC  
                       l2088 0766                         l1528 078F                         l2184 023A  
                       l2352 00BA                         l2272 0449                         l2186 023C  
                       l2362 00E1                         l2338 0085                         l2258 0404  
                       l2372 0117                         l2348 00AC                         l2276 0457  
                       l2268 043C                         l2452 04F4                         l2358 00D3  
                       l2368 0103                         l2288 01F4                         STR_1 06E2  
                       STR_2 06E8                         STR_3 06DB                         STR_4 06E2  
                       STR_5 06E8                         STR_6 06DB                         STR_7 06E2  
                       STR_8 06E8                         STR_9 06DB                         _BRGH 04C2  
                       _CREN 00C4                         u2000 0669                         u2020 0673  
                       u2040 067D                         u1315 0787                         _IOCB 0096  
                       u2205 0746                         u1325 0790                         u2215 0752  
                       u2080 0709                         u2225 075C                         u2090 070A  
                       u2074 0700                         u2075 06FE                         u2155 07BD  
                       u2500 016E                         u2501 016F                         u2502 0174  
                       u1295 0776                         u2415 0408                         u2503 0175  
                       u2185 073A                         u2345 02AC                         u2435 0416  
                       u2540 01D5                         u2445 042B                         u2541 01D6  
                       u2525 019A                         u2542 01DB                         u2455 043D  
                       u2543 01DC                         u2535 01BB                         u2707 060D  
                       u1940 064B                         u2717 061B                         u2485 0133  
                       u2807 032F                         u2727 0625                         u2495 0154  
                       u1960 0655                         u2817 033C                         u2737 0633  
                       u2907 03BE                         u2827 0347                         u2747 063D  
                       u1980 065F                         u2917 03CE                         u2837 0352  
                       u2757 0F68                         u2677 05EB                         u2927 0F5B  
                       u2847 0360                         u2767 0F74                         u2687 05F5  
                       _RBIE 005B                         _RBIF 0058                         u2937 0725  
                       u2857 0376                         u2777 05DC                         u2697 0603  
                       u2867 0386                         u2787 0F4B                         _RCIF 0065  
                       u2877 0394                         u2797 0318                         u2887 03A2  
                       u2897 03AF                         _TMR1 000E                         _SPEN 00C7  
                       _TRMT 04C1                         _TXEN 04C5                         _SYNC 04C4  
               __CFG_WRT$OFF 0000                __CFG_FCMEN$ON 0000                         _echo 0460  
                       _main 04E4                         _rbon 0076                         btemp 007E  
               lcd_init@cols 0027                __CFG_BOREN$ON 0000                 lcd_init@rows 0028  
                       ltemp 007E                         start 0011                         ttemp 007E  
                       wtemp 007E                __CFG_MCLRE$ON 0000               ??_lcd_iowrite4 0020  
             ??_lcd_iowrite8 0074                 lcd_ioset@pin 0075                 lcd_ioset@out 0074  
    __end_of_UART_Write_Text 0F9B                 lcd_send@data 0026                        ?_echo 0070  
            __end_of_Trigger 0643              __end_of___aldiv 0460                        ?_main 0070  
                      STR_10 06E2                        STR_11 06E8                        STR_12 06DB  
                      STR_13 06C8                        STR_14 06B7                        STR_15 06D4  
              __CFG_WDTE$OFF 0000                        _T1CON 0010              __end_of___lwdiv 076B  
                      i1l331 047B                        i1l341 04C1                        i1l333 0485  
                      i1l335 0497                        i1l344 04D9                        i1l337 04A1  
                      i1l329 046D              __end_of___lwmod 079F                        i1l339 04B3  
                      _RCREG 001A                        _SPBRG 0099                        _PORTB 0006  
                      _TRISB 0086                        _TXREG 0019                  ?_UART_Write 0070  
         __size_of_UART_Init 00ED                        _dist1 00A6                        _dist2 00AE  
                      _dist3 00B6                        _dist4 00BE              __end_of_dpowers 06B3  
           ?_PrintDistancias 003D                        pclath 000A                        ltemp0 007E  
                      ltemp1 0082                        ltemp2 0086                        ltemp3 0080  
            __end_of_rowaddr 06B7                        ttemp0 007E                        ttemp1 0081  
                      ttemp2 0084                        ttemp3 0087                        ttemp4 007F  
                      status 0003                        wtemp0 007E                        wtemp1 0080  
                      wtemp2 0082                        wtemp3 0084                        wtemp4 0086  
                      wtemp5 0088                        wtemp6 007F              __end_of_sprintf 02FA  
            __initialization 0013                 __end_of_echo 04E4                 __end_of_main 0564  
                     ??_echo 0070                       ??_main 00C6                lcd_iowrite4@i 0023  
                     _ANSELH 0189                       i1l1996 04D7                       _INTCON 000B  
                     _OSCCON 008F                       _TMR1ON 0080                       _TRISC0 0438  
                     _TRISC1 0439                       _TRISC2 043A                       _TRISC3 043B  
                     _TRISC4 043C                       _TRISC5 043D                       _TRISC6 043E  
                     _TRISC7 043F               __CFG_PWRTE$OFF 0000             __end_of_lcd_init 03D1  
           __end_of_lcd_goto 0FBC            __end_of_UART_Init 0215             __end_of_lcd_send 07D2  
           _Inicializaciones 07D2             __end_of_lcd_puts 0FDD          __size_of_UART_Write 000A  
                  ??_Trigger 0074                    ??___aldiv 0074             ?_UART_Write_Text 0070  
                  ??___lwdiv 0074                    ??___lwmod 0075                       _lcd_on 0F3E  
         __size_of_ResetEcho 0019                       _iomode 00CA               lcd_init@iodata 002C  
                     saved_w 007E         __end_of_lcd_iowrite4 072D         __end_of_lcd_iowrite8 0800  
                  ??_sprintf 0031      __end_of__initialization 0036               __pcstackCOMMON 0070  
               __pidataBANK0 0F26             lcd_iowrite4@data 0022             lcd_iowrite8@data 0070  
         __size_of_lcd_clear 0013           __size_of_lcd_ioset 0056         PrintDistancias@dist1 0068  
       PrintDistancias@dist2 003D         PrintDistancias@dist3 003E         PrintDistancias@dist4 003F  
                 __pbssBANK0 006F                   __pbssBANK1 00A0            __end_of_ResetEcho 0F7A  
                 __pmaintext 04E4                   __pintentry 0004                      ?_lcd_on 0070  
               ??_UART_Write 0074                   _lcd_ioinit 0FDD                   _distancia1 006B  
                 _distancia2 006C                   _distancia3 006D                   _distancia4 006E  
                 _lcdcolumns 0069                    ?_lcd_init 0027                    ?_lcd_goto 0027  
                  ?_lcd_send 0024                    ?_lcd_puts 0027                   __stringtab 0699  
          __end_of_lcd_clear 0F61            __end_of_lcd_ioset 0699                      _Trigger 05E2  
                    ___aldiv 03D1           __end_of_UART_Write 0F3E                      ___lwdiv 072D  
                    ___lwmod 076B              __size_of_lcd_on 0010                      __ptext1 0128  
                    __ptext2 03D1                      __ptext3 05E2                      __ptext4 0F61  
                    __ptext5 0564                      __ptext6 0FBC                      __ptext7 0F9B  
                    __ptext8 0F7A                      __ptext9 0F34        __size_of_lcd_iowrite4 0040  
      __size_of_lcd_iowrite8 0001                      _lcdrows 006A                      _dpowers 06A9  
           ___aldiv@dividend 0024     __end_of_Inicializaciones 07FF                      _rowaddr 06B3  
                    _sprintf 0215                      clrloop0 0F2D                   ??_lcd_init 0029  
                 ??_lcd_goto 0028                   ??_lcd_send 0025                   ??_lcd_puts 0076  
       end_of_initialization 0036               lcd_puts@string 0027     __size_of_PrintDistancias 007E  
           ___aldiv@quotient 002A                 _lcd_iowrite4 06ED                 _lcd_iowrite8 07FF  
                  _UART_Init 0128               UART_Write@data 0074                  ?_lcd_ioinit 0070  
                 lcd_send@rs 0024                   ?_UART_Init 002E               __end_of_lcd_on 0F4E  
          _CalcularDistancia 0039     __size_of_UART_Write_Text 0021          start_initialization 0013  
         ?_CalcularDistancia 003D          ??_CalcularDistancia 0049                    _ResetEcho 0F61  
        __size_of_lcd_ioinit 0023                     ??_lcd_on 0027                  __pdataBANK0 0069  
          ??_PrintDistancias 0040    __end_of_CalcularDistancia 0128                  __pbssCOMMON 0076  
                  ___latbits 0001                __pcstackBANK0 0020                __pcstackBANK1 00C6  
     __CFG_FOSC$INTRC_CLKOUT 0000            __size_of_lcd_init 00D7            __size_of_lcd_goto 0021  
          __size_of_lcd_send 0033                  sprintf@flag 0034          PrintDistancias@dist 0045  
          __size_of_lcd_puts 0021                  sprintf@prec 0037                    __pnvBANK1 00CA  
                 ?_ResetEcho 0070             ___lwdiv@dividend 0022                     ?_Trigger 0070  
                   ?___aldiv 0020                     ?___lwdiv 0020                     ?___lwmod 0027  
                  _lcd_clear 0F4E                  ??_UART_Init 0032                    _lcd_ioset 0643  
                  __pstrings 0699             ___lwdiv@quotient 0025            ?_Inicializaciones 0070  
                   ?_sprintf 002C  CalcularDistancia@distancia1 0045  CalcularDistancia@distancia2 0046  
CalcularDistancia@distancia3 0047  CalcularDistancia@distancia4 0048                   UART_Init@x 003E  
          ??_UART_Write_Text 0075           ??_Inicializaciones 002D              ___aldiv@divisor 0020  
          interrupt_function 0004              ___aldiv@counter 0028                    clear_ram0 0F2C  
        CalcularDistancia@d0 004A          CalcularDistancia@d1 004C          CalcularDistancia@d2 004E  
        CalcularDistancia@d3 0050          CalcularDistancia@t0 003D          CalcularDistancia@t1 003F  
        CalcularDistancia@t2 0041          CalcularDistancia@t3 0043                   ?_lcd_clear 0070  
          UART_Init@baudrate 002E   __size_of_CalcularDistancia 00EF                   ?_lcd_ioset 0074  
                __stringbase 06A8                 ??_lcd_ioinit 0020                  ??_ResetEcho 0074  
         __end_of_lcd_ioinit 1000             __size_of_Trigger 0061             __size_of___aldiv 008F  
           __size_of___lwdiv 003E             __size_of___lwmod 0034           __end_of__stringtab 06A9  
                 sprintf@val 0035              ___lwdiv@divisor 0020              ___lwdiv@counter 0024  
                   __ptext10 07D2                     __ptext11 0F3E                     __ptext20 0215  
                   __ptext12 02FA                     __ptext21 076B                     __ptext13 0FDD  
                   __ptext22 072D                     __ptext14 0F4E                     __ptext23 0460  
                   __ptext15 079F                     __ptext16 07FF                     __ptext17 06ED  
                   __ptext18 0643                     __ptext19 0039            __CFG_BOR4V$BOR21V 0000  
                   _lcd_init 02FA                     _lcd_goto 0F9B                     _lcd_send 079F  
                   _dispctrl 006F                     _lcd_puts 0FBC             __size_of_sprintf 00E5  
              __size_of_echo 0084          UART_Write_Text@text 0020                __size_of_main 0080  
            _PrintDistancias 0564                  ??_lcd_clear 0027                  ??_lcd_ioset 0075  
                   intlevel1 0000                    sprintf@ap 0038                    sprintf@cp 0039  
                  sprintf@sp 003C             ___lwmod@dividend 0029                    stringcode 06A3  
            _UART_Write_Text 0F7A                     sprintf@c 003B                     sprintf@f 002C  
            ___lwmod@divisor 0027              ___lwmod@counter 002B                     stringdir 06A3  
                   stringtab 0699                 ___aldiv@sign 0029                   _UART_Write 0F34  
    __end_of_PrintDistancias 05E2             UART_Write_Text@i 0021  
