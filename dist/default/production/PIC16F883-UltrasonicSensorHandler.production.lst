

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue Mar 29 19:00:31 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F883
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  0007                     	;# 
    40  0009                     	;# 
    41  000A                     	;# 
    42  000B                     	;# 
    43  000C                     	;# 
    44  000D                     	;# 
    45  000E                     	;# 
    46  000E                     	;# 
    47  000F                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0013                     	;# 
    52  0014                     	;# 
    53  0015                     	;# 
    54  0015                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001B                     	;# 
    62  001C                     	;# 
    63  001D                     	;# 
    64  001E                     	;# 
    65  001F                     	;# 
    66  0081                     	;# 
    67  0085                     	;# 
    68  0086                     	;# 
    69  0087                     	;# 
    70  0089                     	;# 
    71  008C                     	;# 
    72  008D                     	;# 
    73  008E                     	;# 
    74  008F                     	;# 
    75  0090                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0093                     	;# 
    80  0093                     	;# 
    81  0094                     	;# 
    82  0095                     	;# 
    83  0096                     	;# 
    84  0097                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  009F                     	;# 
    93  0105                     	;# 
    94  0107                     	;# 
    95  0108                     	;# 
    96  0109                     	;# 
    97  010C                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  0185                     	;# 
   103  0187                     	;# 
   104  0188                     	;# 
   105  0189                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  008F                     	;# 
   151  0090                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0093                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0095                     	;# 
   159  0096                     	;# 
   160  0097                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009A                     	;# 
   164  009B                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  0105                     	;# 
   170  0107                     	;# 
   171  0108                     	;# 
   172  0109                     	;# 
   173  010C                     	;# 
   174  010C                     	;# 
   175  010D                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  0185                     	;# 
   179  0187                     	;# 
   180  0188                     	;# 
   181  0189                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000D                     	;# 
   197  000E                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0014                     	;# 
   205  0015                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001B                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  001D                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  0081                     	;# 
   219  0085                     	;# 
   220  0086                     	;# 
   221  0087                     	;# 
   222  0089                     	;# 
   223  008C                     	;# 
   224  008D                     	;# 
   225  008E                     	;# 
   226  008F                     	;# 
   227  0090                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0093                     	;# 
   232  0093                     	;# 
   233  0094                     	;# 
   234  0095                     	;# 
   235  0096                     	;# 
   236  0097                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009A                     	;# 
   240  009B                     	;# 
   241  009C                     	;# 
   242  009D                     	;# 
   243  009E                     	;# 
   244  009F                     	;# 
   245  0105                     	;# 
   246  0107                     	;# 
   247  0108                     	;# 
   248  0109                     	;# 
   249  010C                     	;# 
   250  010C                     	;# 
   251  010D                     	;# 
   252  010E                     	;# 
   253  010F                     	;# 
   254  0185                     	;# 
   255  0187                     	;# 
   256  0188                     	;# 
   257  0189                     	;# 
   258  018C                     	;# 
   259  018D                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0009                     	;# 
   269  000A                     	;# 
   270  000B                     	;# 
   271  000C                     	;# 
   272  000D                     	;# 
   273  000E                     	;# 
   274  000E                     	;# 
   275  000F                     	;# 
   276  0010                     	;# 
   277  0011                     	;# 
   278  0012                     	;# 
   279  0013                     	;# 
   280  0014                     	;# 
   281  0015                     	;# 
   282  0015                     	;# 
   283  0016                     	;# 
   284  0017                     	;# 
   285  0018                     	;# 
   286  0019                     	;# 
   287  001A                     	;# 
   288  001B                     	;# 
   289  001B                     	;# 
   290  001C                     	;# 
   291  001D                     	;# 
   292  001E                     	;# 
   293  001F                     	;# 
   294  0081                     	;# 
   295  0085                     	;# 
   296  0086                     	;# 
   297  0087                     	;# 
   298  0089                     	;# 
   299  008C                     	;# 
   300  008D                     	;# 
   301  008E                     	;# 
   302  008F                     	;# 
   303  0090                     	;# 
   304  0091                     	;# 
   305  0092                     	;# 
   306  0093                     	;# 
   307  0093                     	;# 
   308  0093                     	;# 
   309  0094                     	;# 
   310  0095                     	;# 
   311  0096                     	;# 
   312  0097                     	;# 
   313  0098                     	;# 
   314  0099                     	;# 
   315  009A                     	;# 
   316  009B                     	;# 
   317  009C                     	;# 
   318  009D                     	;# 
   319  009E                     	;# 
   320  009F                     	;# 
   321  0105                     	;# 
   322  0107                     	;# 
   323  0108                     	;# 
   324  0109                     	;# 
   325  010C                     	;# 
   326  010C                     	;# 
   327  010D                     	;# 
   328  010E                     	;# 
   329  010F                     	;# 
   330  0185                     	;# 
   331  0187                     	;# 
   332  0188                     	;# 
   333  0189                     	;# 
   334  018C                     	;# 
   335  018D                     	;# 
   336  0000                     	;# 
   337  0001                     	;# 
   338  0002                     	;# 
   339  0003                     	;# 
   340  0004                     	;# 
   341  0005                     	;# 
   342  0006                     	;# 
   343  0007                     	;# 
   344  0009                     	;# 
   345  000A                     	;# 
   346  000B                     	;# 
   347  000C                     	;# 
   348  000D                     	;# 
   349  000E                     	;# 
   350  000E                     	;# 
   351  000F                     	;# 
   352  0010                     	;# 
   353  0011                     	;# 
   354  0012                     	;# 
   355  0013                     	;# 
   356  0014                     	;# 
   357  0015                     	;# 
   358  0015                     	;# 
   359  0016                     	;# 
   360  0017                     	;# 
   361  0018                     	;# 
   362  0019                     	;# 
   363  001A                     	;# 
   364  001B                     	;# 
   365  001B                     	;# 
   366  001C                     	;# 
   367  001D                     	;# 
   368  001E                     	;# 
   369  001F                     	;# 
   370  0081                     	;# 
   371  0085                     	;# 
   372  0086                     	;# 
   373  0087                     	;# 
   374  0089                     	;# 
   375  008C                     	;# 
   376  008D                     	;# 
   377  008E                     	;# 
   378  008F                     	;# 
   379  0090                     	;# 
   380  0091                     	;# 
   381  0092                     	;# 
   382  0093                     	;# 
   383  0093                     	;# 
   384  0093                     	;# 
   385  0094                     	;# 
   386  0095                     	;# 
   387  0096                     	;# 
   388  0097                     	;# 
   389  0098                     	;# 
   390  0099                     	;# 
   391  009A                     	;# 
   392  009B                     	;# 
   393  009C                     	;# 
   394  009D                     	;# 
   395  009E                     	;# 
   396  009F                     	;# 
   397  0105                     	;# 
   398  0107                     	;# 
   399  0108                     	;# 
   400  0109                     	;# 
   401  010C                     	;# 
   402  010C                     	;# 
   403  010D                     	;# 
   404  010E                     	;# 
   405  010F                     	;# 
   406  0185                     	;# 
   407  0187                     	;# 
   408  0188                     	;# 
   409  0189                     	;# 
   410  018C                     	;# 
   411  018D                     	;# 
   412                           
   413                           	psect	idataBANK0
   414  0651                     __pidataBANK0:	
   415                           
   416                           ;initializer for _lcdcolumns
   417  0651  3410               	retlw	16
   418                           
   419                           ;initializer for _lcdrows
   420  0652  3402               	retlw	2
   421                           
   422                           	psect	idataBANK1
   423  064D                     __pidataBANK1:	
   424                           
   425                           ;initializer for _distancia1
   426  064D  34A8               	retlw	low (_dist1| 0)
   427                           
   428                           ;initializer for _distancia2
   429  064E  34B0               	retlw	low (_dist2| 0)
   430                           
   431                           ;initializer for _distancia3
   432  064F  34B8               	retlw	low (_dist3| 0)
   433                           
   434                           ;initializer for _distancia4
   435  0650  34C0               	retlw	low (_dist4| 0)
   436                           
   437                           	psect	strings
   438  0500                     __pstrings:	
   439  0500                     stringtab:	
   440  0500                     __stringtab:	
   441                           
   442                           ;	String table - string pointers are 1 byte each
   443  0500  1BFF               	btfsc	btemp+1,7
   444  0501  2D0A               	ljmp	stringcode
   445  0502  1383               	bcf	3,7
   446  0503  187F               	btfsc	btemp+1,0
   447  0504  1783               	bsf	3,7
   448  0505  0800               	movf	0,w
   449  0506  0A84               	incf	4,f
   450  0507  1903               	skipnz
   451  0508  0AFF               	incf	btemp+1,f
   452  0509  0008               	return
   453  050A                     stringcode:	
   454  050A                     stringdir:	
   455  050A  3005               	movlw	high stringdir
   456  050B  008A               	movwf	10
   457  050C  0804               	movf	4,w
   458  050D  0A84               	incf	4,f
   459  050E  0782               	addwf	2,f
   460  050F                     __stringbase:	
   461  050F  3400               	retlw	0
   462  0510                     __end_of__stringtab:	
   463  0510                     _dpowers:	
   464  0510  3401               	retlw	1
   465  0511  3400               	retlw	0
   466  0512  340A               	retlw	10
   467  0513  3400               	retlw	0
   468  0514  3464               	retlw	100
   469  0515  3400               	retlw	0
   470  0516  34E8               	retlw	232
   471  0517  3403               	retlw	3
   472  0518  3410               	retlw	16
   473  0519  3427               	retlw	39
   474  051A                     __end_of_dpowers:	
   475  051A                     _rowaddr:	
   476  051A  3400               	retlw	0
   477  051B  3440               	retlw	64
   478  051C  3414               	retlw	20
   479  051D  3454               	retlw	84
   480  051E                     __end_of_rowaddr:	
   481  000E                     _TMR1	set	14
   482  000B                     _INTCON	set	11
   483  0006                     _PORTB	set	6
   484  001A                     _RCREG	set	26
   485  0010                     _T1CON	set	16
   486  0019                     _TXREG	set	25
   487  00C4                     _CREN	set	196
   488  005F                     _GIE	set	95
   489  0030                     _RB0	set	48
   490  0031                     _RB1	set	49
   491  0032                     _RB2	set	50
   492  0033                     _RB3	set	51
   493  0034                     _RB4	set	52
   494  0035                     _RB5	set	53
   495  0036                     _RB6	set	54
   496  0037                     _RB7	set	55
   497  005B                     _RBIE	set	91
   498  0058                     _RBIF	set	88
   499  0038                     _RC0	set	56
   500  0039                     _RC1	set	57
   501  003A                     _RC2	set	58
   502  003B                     _RC3	set	59
   503  003C                     _RC4	set	60
   504  003D                     _RC5	set	61
   505  0065                     _RCIF	set	101
   506  00C7                     _SPEN	set	199
   507  0080                     _TMR1ON	set	128
   508  0096                     _IOCB	set	150
   509  008F                     _OSCCON	set	143
   510  0099                     _SPBRG	set	153
   511  0086                     _TRISB	set	134
   512  04C2                     _BRGH	set	1218
   513  04C4                     _SYNC	set	1220
   514  0438                     _TRISC0	set	1080
   515  0439                     _TRISC1	set	1081
   516  043A                     _TRISC2	set	1082
   517  043B                     _TRISC3	set	1083
   518  043C                     _TRISC4	set	1084
   519  043D                     _TRISC5	set	1085
   520  043E                     _TRISC6	set	1086
   521  043F                     _TRISC7	set	1087
   522  04C1                     _TRMT	set	1217
   523  04C6                     _TX9	set	1222
   524  04C5                     _TXEN	set	1221
   525  0189                     _ANSELH	set	393
   526  051E                     STR_13:	
   527  051E  3425               	retlw	37	;'%'
   528  051F  3473               	retlw	115	;'s'
   529  0520  342C               	retlw	44	;','
   530  0521  3420               	retlw	32	;' '
   531  0522  3425               	retlw	37	;'%'
   532  0523  3473               	retlw	115	;'s'
   533  0524  342C               	retlw	44	;','
   534  0525  3420               	retlw	32	;' '
   535  0526  3425               	retlw	37	;'%'
   536  0527  3473               	retlw	115	;'s'
   537  0528  342C               	retlw	44	;','
   538  0529  3420               	retlw	32	;' '
   539  052A  3425               	retlw	37	;'%'
   540  052B  3473               	retlw	115	;'s'
   541  052C  342E               	retlw	46	;'.'
   542  052D  340A               	retlw	10
   543  052E  340D               	retlw	13
   544  052F  3400               	retlw	0
   545  0530  3400               	retlw	0
   546  0531                     STR_14:	
   547  0531  3428               	retlw	40	;'('
   548  0532  346E               	retlw	110	;'n'
   549  0533  3475               	retlw	117	;'u'
   550  0534  346C               	retlw	108	;'l'
   551  0535  346C               	retlw	108	;'l'
   552  0536  3429               	retlw	41	;')'
   553  0537  3400               	retlw	0
   554  0538                     STR_3:	
   555  0538  3425               	retlw	37	;'%'
   556  0539  3475               	retlw	117	;'u'
   557  053A  3420               	retlw	32	;' '
   558  053B  3420               	retlw	32	;' '
   559  053C  3420               	retlw	32	;' '
   560  053D  3400               	retlw	0
   561  053E  3400               	retlw	0
   562  053F                     STR_1:	
   563  053F  344E               	retlw	78	;'N'
   564  0540  344F               	retlw	79	;'O'
   565  0541  3450               	retlw	80	;'P'
   566  0542  3445               	retlw	69	;'E'
   567  0543  3400               	retlw	0
   568  0544  3400               	retlw	0
   569  0545                     STR_2:	
   570  0545  344F               	retlw	79	;'O'
   571  0546  3455               	retlw	85	;'U'
   572  0547  3454               	retlw	84	;'T'
   573  0548  3400               	retlw	0
   574  0549  3400               	retlw	0
   575  0538                     
   576                           ; #config settings
   577  0000                     
   578                           	psect	cinit
   579  0013                     start_initialization:	
   580  0013                     __initialization:	
   581                           
   582                           ; Clear objects allocated to COMMON
   583  0013  01F6               	clrf	__pbssCOMMON& (0+127)
   584  0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   585  0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   586  0016  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   587                           
   588                           ; Clear objects allocated to BANK1
   589  0017  1383               	bcf	3,7	;select IRP bank0
   590  0018  30A0               	movlw	low __pbssBANK1
   591  0019  0084               	movwf	4
   592  001A  30C8               	movlw	low (__pbssBANK1+40)
   593  001B  118A  2645  118A   	fcall	clear_ram0
   594                           
   595                           ; Initialize objects allocated to BANK1
   596  001E  1683               	bsf	3,5	;RP0=1, select bank1
   597  001F  1303               	bcf	3,6	;RP1=0, select bank1
   598  0020  118A  264D  118A   	fcall	__pidataBANK1	;fetch initializer
   599  0023  00C8               	movwf	__pdataBANK1& (0+127)
   600  0024  118A  264E  118A   	fcall	__pidataBANK1+1	;fetch initializer
   601  0027  00C9               	movwf	(__pdataBANK1+1)& (0+127)
   602  0028  118A  264F  118A   	fcall	__pidataBANK1+2	;fetch initializer
   603  002B  00CA               	movwf	(__pdataBANK1+2)& (0+127)
   604  002C  118A  2650  118A   	fcall	__pidataBANK1+3	;fetch initializer
   605  002F  00CB               	movwf	(__pdataBANK1+3)& (0+127)
   606                           
   607                           ; Initialize objects allocated to BANK0
   608  0030  1283               	bcf	3,5	;RP0=0, select bank0
   609  0031  1303               	bcf	3,6	;RP1=0, select bank0
   610  0032  118A  2651  118A   	fcall	__pidataBANK0	;fetch initializer
   611  0035  00EE               	movwf	__pdataBANK0& (0+127)
   612  0036  118A  2652         	fcall	__pidataBANK0+1	;fetch initializer
   613  0038  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   614  0039                     end_of_initialization:	
   615                           ;End of C runtime variable initialization code
   616                           
   617  0039                     __end_of__initialization:	
   618  0039  0183               	clrf	3
   619  003A  118A  2C14         	ljmp	_main	;jump to C main() function
   620                           
   621                           	psect	bssCOMMON
   622  0076                     __pbssCOMMON:	
   623  0076                     _rbon:	
   624  0076                     	ds	2
   625  0078                     _dispctrl:	
   626  0078                     	ds	1
   627  0079                     _iomode:	
   628  0079                     	ds	1
   629                           
   630                           	psect	dataBANK0
   631  006E                     __pdataBANK0:	
   632  006E                     _lcdcolumns:	
   633  006E                     	ds	1
   634  006F                     _lcdrows:	
   635  006F                     	ds	1
   636                           
   637                           	psect	bssBANK1
   638  00A0                     __pbssBANK1:	
   639  00A0                     _t4:	
   640  00A0                     	ds	2
   641  00A2                     _t5:	
   642  00A2                     	ds	2
   643  00A4                     _t6:	
   644  00A4                     	ds	2
   645  00A6                     _t7:	
   646  00A6                     	ds	2
   647  00A8                     _dist1:	
   648  00A8                     	ds	8
   649  00B0                     _dist2:	
   650  00B0                     	ds	8
   651  00B8                     _dist3:	
   652  00B8                     	ds	8
   653  00C0                     _dist4:	
   654  00C0                     	ds	8
   655                           
   656                           	psect	dataBANK1
   657  00C8                     __pdataBANK1:	
   658  00C8                     _distancia1:	
   659  00C8                     	ds	1
   660  00C9                     _distancia2:	
   661  00C9                     	ds	1
   662  00CA                     _distancia3:	
   663  00CA                     	ds	1
   664  00CB                     _distancia4:	
   665  00CB                     	ds	1
   666                           
   667                           	psect	clrtext
   668  0645                     clear_ram0:	
   669                           ;	Called with FSR containing the base address, and
   670                           ;	W with the last address+1
   671                           
   672  0645  0064               	clrwdt	;clear the watchdog before getting into this loop
   673  0646                     clrloop0:	
   674  0646  0180               	clrf	0	;clear RAM location pointed to by FSR
   675  0647  0A84               	incf	4,f	;increment pointer
   676  0648  0604               	xorwf	4,w	;XOR with final address
   677  0649  1903               	btfsc	3,2	;have we reached the end yet?
   678  064A  3400               	retlw	0	;all done for this memory range, return
   679  064B  0604               	xorwf	4,w	;XOR again to restore value
   680  064C  2E46               	goto	clrloop0	;do the next byte
   681                           
   682                           	psect	cstackBANK1
   683  00CC                     __pcstackBANK1:	
   684  00CC                     ??_main:	
   685                           
   686                           ; 1 bytes @ 0x0
   687  00CC                     	ds	4
   688                           
   689                           	psect	cstackCOMMON
   690  0070                     __pcstackCOMMON:	
   691  0070                     ?_UART_Write:	
   692  0070                     ?_UART_Write_Text:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_Inicializaciones:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_Trigger:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_ResetEcho:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_main:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_echo:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ??_echo:	
   711                           ; 1 bytes @ 0x0
   712                           
   713                           
   714                           ; 1 bytes @ 0x0
   715  0070                     	ds	4
   716  0074                     ??_UART_Write:	
   717  0074                     ??_Inicializaciones:	
   718                           ; 1 bytes @ 0x4
   719                           
   720  0074                     ??_Trigger:	
   721                           ; 1 bytes @ 0x4
   722                           
   723  0074                     ??_ResetEcho:	
   724                           ; 1 bytes @ 0x4
   725                           
   726  0074                     ??___aldiv:	
   727                           ; 1 bytes @ 0x4
   728                           
   729  0074                     ??___lwdiv:	
   730                           ; 1 bytes @ 0x4
   731                           
   732  0074                     UART_Write@data:	
   733                           ; 1 bytes @ 0x4
   734                           
   735                           
   736                           ; 1 bytes @ 0x4
   737  0074                     	ds	1
   738  0075                     ??_UART_Write_Text:	
   739  0075                     ??___lwmod:	
   740                           ; 1 bytes @ 0x5
   741                           
   742                           
   743                           ; 1 bytes @ 0x5
   744  0075                     	ds	1
   745                           
   746                           	psect	cstackBANK0
   747  0020                     __pcstackBANK0:	
   748  0020                     ?___lwdiv:	
   749  0020                     ?___aldiv:	
   750                           ; 2 bytes @ 0x0
   751                           
   752  0020                     UART_Write_Text@text:	
   753                           ; 4 bytes @ 0x0
   754                           
   755  0020                     ___lwdiv@divisor:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0020                     ___aldiv@divisor:	
   759                           ; 2 bytes @ 0x0
   760                           
   761                           
   762                           ; 4 bytes @ 0x0
   763  0020                     	ds	1
   764  0021                     UART_Write_Text@i:	
   765                           
   766                           ; 2 bytes @ 0x1
   767  0021                     	ds	1
   768  0022                     ___lwdiv@dividend:	
   769                           
   770                           ; 2 bytes @ 0x2
   771  0022                     	ds	2
   772  0024                     ___lwdiv@counter:	
   773  0024                     ___aldiv@dividend:	
   774                           ; 1 bytes @ 0x4
   775                           
   776                           
   777                           ; 4 bytes @ 0x4
   778  0024                     	ds	1
   779  0025                     ___lwdiv@quotient:	
   780                           
   781                           ; 2 bytes @ 0x5
   782  0025                     	ds	2
   783  0027                     ?___lwmod:	
   784  0027                     ___lwmod@divisor:	
   785                           ; 2 bytes @ 0x7
   786                           
   787                           
   788                           ; 2 bytes @ 0x7
   789  0027                     	ds	1
   790  0028                     ___aldiv@counter:	
   791                           
   792                           ; 1 bytes @ 0x8
   793  0028                     	ds	1
   794  0029                     ___aldiv@sign:	
   795  0029                     ___lwmod@dividend:	
   796                           ; 1 bytes @ 0x9
   797                           
   798                           
   799                           ; 2 bytes @ 0x9
   800  0029                     	ds	1
   801  002A                     ___aldiv@quotient:	
   802                           
   803                           ; 4 bytes @ 0xA
   804  002A                     	ds	1
   805  002B                     ___lwmod@counter:	
   806                           
   807                           ; 1 bytes @ 0xB
   808  002B                     	ds	1
   809  002C                     ?_sprintf:	
   810  002C                     sprintf@f:	
   811                           ; 2 bytes @ 0xC
   812                           
   813                           
   814                           ; 1 bytes @ 0xC
   815  002C                     	ds	2
   816  002E                     ?_UART_Init:	
   817  002E                     UART_Init@baudrate:	
   818                           ; 1 bytes @ 0xE
   819                           
   820                           
   821                           ; 4 bytes @ 0xE
   822  002E                     	ds	3
   823  0031                     ??_sprintf:	
   824                           
   825                           ; 1 bytes @ 0x11
   826  0031                     	ds	1
   827  0032                     ??_UART_Init:	
   828                           
   829                           ; 1 bytes @ 0x12
   830  0032                     	ds	2
   831  0034                     sprintf@flag:	
   832                           
   833                           ; 1 bytes @ 0x14
   834  0034                     	ds	1
   835  0035                     sprintf@val:	
   836                           
   837                           ; 2 bytes @ 0x15
   838  0035                     	ds	2
   839  0037                     sprintf@prec:	
   840                           
   841                           ; 1 bytes @ 0x17
   842  0037                     	ds	1
   843  0038                     sprintf@ap:	
   844                           
   845                           ; 1 bytes @ 0x18
   846  0038                     	ds	1
   847  0039                     sprintf@cp:	
   848                           
   849                           ; 2 bytes @ 0x19
   850  0039                     	ds	2
   851  003B                     sprintf@c:	
   852                           
   853                           ; 1 bytes @ 0x1B
   854  003B                     	ds	1
   855  003C                     sprintf@sp:	
   856                           
   857                           ; 1 bytes @ 0x1C
   858  003C                     	ds	1
   859  003D                     ?_CalcularDistancia:	
   860  003D                     ?_PrintDistancias:	
   861                           ; 1 bytes @ 0x1D
   862                           
   863  003D                     PrintDistancias@dist2:	
   864                           ; 1 bytes @ 0x1D
   865                           
   866  003D                     CalcularDistancia@t0:	
   867                           ; 1 bytes @ 0x1D
   868                           
   869                           
   870                           ; 2 bytes @ 0x1D
   871  003D                     	ds	1
   872  003E                     PrintDistancias@dist3:	
   873  003E                     UART_Init@x:	
   874                           ; 1 bytes @ 0x1E
   875                           
   876                           
   877                           ; 2 bytes @ 0x1E
   878  003E                     	ds	1
   879  003F                     PrintDistancias@dist4:	
   880  003F                     CalcularDistancia@t1:	
   881                           ; 1 bytes @ 0x1F
   882                           
   883                           
   884                           ; 2 bytes @ 0x1F
   885  003F                     	ds	1
   886  0040                     ??_PrintDistancias:	
   887                           
   888                           ; 1 bytes @ 0x20
   889  0040                     	ds	1
   890  0041                     CalcularDistancia@t2:	
   891                           
   892                           ; 2 bytes @ 0x21
   893  0041                     	ds	2
   894  0043                     CalcularDistancia@t3:	
   895                           
   896                           ; 2 bytes @ 0x23
   897  0043                     	ds	2
   898  0045                     CalcularDistancia@distancia1:	
   899  0045                     PrintDistancias@dist:	
   900                           ; 1 bytes @ 0x25
   901                           
   902                           
   903                           ; 40 bytes @ 0x25
   904  0045                     	ds	1
   905  0046                     CalcularDistancia@distancia2:	
   906                           
   907                           ; 1 bytes @ 0x26
   908  0046                     	ds	1
   909  0047                     CalcularDistancia@distancia3:	
   910                           
   911                           ; 1 bytes @ 0x27
   912  0047                     	ds	1
   913  0048                     CalcularDistancia@distancia4:	
   914                           
   915                           ; 1 bytes @ 0x28
   916  0048                     	ds	1
   917  0049                     ??_CalcularDistancia:	
   918                           
   919                           ; 1 bytes @ 0x29
   920  0049                     	ds	1
   921  004A                     CalcularDistancia@d0:	
   922                           
   923                           ; 2 bytes @ 0x2A
   924  004A                     	ds	2
   925  004C                     CalcularDistancia@d1:	
   926                           
   927                           ; 2 bytes @ 0x2C
   928  004C                     	ds	2
   929  004E                     CalcularDistancia@d2:	
   930                           
   931                           ; 2 bytes @ 0x2E
   932  004E                     	ds	2
   933  0050                     CalcularDistancia@d3:	
   934                           
   935                           ; 2 bytes @ 0x30
   936  0050                     	ds	29
   937  006D                     PrintDistancias@dist1:	
   938                           
   939                           ; 1 bytes @ 0x4D
   940  006D                     	ds	1
   941                           
   942                           	psect	maintext
   943  0414                     __pmaintext:	
   944 ;;
   945 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   946 ;;
   947 ;; *************** function _main *****************
   948 ;; Defined at:
   949 ;;		line 49 in file "main.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : B00/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   963 ;;      Params:         0       0       0       0
   964 ;;      Locals:         0       0       0       0
   965 ;;      Temps:          0       0       4       0
   966 ;;      Totals:         0       0       4       0
   967 ;;Total ram usage:        4 bytes
   968 ;; Hardware stack levels required when called:    4
   969 ;; This function calls:
   970 ;;		_CalcularDistancia
   971 ;;		_Inicializaciones
   972 ;;		_PrintDistancias
   973 ;;		_ResetEcho
   974 ;;		_Trigger
   975 ;;		_UART_Init
   976 ;; This function is called by:
   977 ;;		Startup code after reset
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           
   982                           ;psect for function _main
   983  0414                     _main:	
   984                           
   985                           ;main.c: 51: Inicializaciones();
   986                           
   987                           ;incstack = 0
   988                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   989  0414  118A  2608  118A   	fcall	_Inicializaciones
   990                           
   991                           ;main.c: 52: UART_Init(9600);
   992  0417  3000               	movlw	0
   993  0418  1283               	bcf	3,5	;RP0=0, select bank0
   994  0419  1303               	bcf	3,6	;RP1=0, select bank0
   995  041A  00B1               	movwf	UART_Init@baudrate+3
   996  041B  3000               	movlw	0
   997  041C  00B0               	movwf	UART_Init@baudrate+2
   998  041D  3025               	movlw	37
   999  041E  00AF               	movwf	UART_Init@baudrate+1
  1000  041F  3080               	movlw	128
  1001  0420  00AE               	movwf	UART_Init@baudrate
  1002  0421  118A  212B  118A   	fcall	_UART_Init
  1003  0424                     l312:	
  1004                           ;main.c: 54: while(1)
  1005                           
  1006                           
  1007                           ;main.c: 55: {
  1008                           ;main.c: 62: Trigger();
  1009  0424  118A  249A  118A   	fcall	_Trigger
  1010                           
  1011                           ;main.c: 63: CalcularDistancia(t4, t5, t6, t7, &distancia1, &distancia2, &distancia3, &d
      +                          istancia4);
  1012  0427  1683               	bsf	3,5	;RP0=1, select bank1
  1013  0428  1303               	bcf	3,6	;RP1=0, select bank1
  1014  0429  0821               	movf	(_t4+1)^(0+128),w
  1015  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1016  042B  1303               	bcf	3,6	;RP1=0, select bank0
  1017  042C  00BE               	movwf	CalcularDistancia@t0+1
  1018  042D  1683               	bsf	3,5	;RP0=1, select bank1
  1019  042E  1303               	bcf	3,6	;RP1=0, select bank1
  1020  042F  0820               	movf	_t4^(0+128),w
  1021  0430  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0431  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0432  00BD               	movwf	CalcularDistancia@t0
  1024  0433  1683               	bsf	3,5	;RP0=1, select bank1
  1025  0434  1303               	bcf	3,6	;RP1=0, select bank1
  1026  0435  0823               	movf	(_t5+1)^(0+128),w
  1027  0436  1283               	bcf	3,5	;RP0=0, select bank0
  1028  0437  1303               	bcf	3,6	;RP1=0, select bank0
  1029  0438  00C0               	movwf	CalcularDistancia@t1+1
  1030  0439  1683               	bsf	3,5	;RP0=1, select bank1
  1031  043A  1303               	bcf	3,6	;RP1=0, select bank1
  1032  043B  0822               	movf	_t5^(0+128),w
  1033  043C  1283               	bcf	3,5	;RP0=0, select bank0
  1034  043D  1303               	bcf	3,6	;RP1=0, select bank0
  1035  043E  00BF               	movwf	CalcularDistancia@t1
  1036  043F  1683               	bsf	3,5	;RP0=1, select bank1
  1037  0440  1303               	bcf	3,6	;RP1=0, select bank1
  1038  0441  0825               	movf	(_t6+1)^(0+128),w
  1039  0442  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0443  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0444  00C2               	movwf	CalcularDistancia@t2+1
  1042  0445  1683               	bsf	3,5	;RP0=1, select bank1
  1043  0446  1303               	bcf	3,6	;RP1=0, select bank1
  1044  0447  0824               	movf	_t6^(0+128),w
  1045  0448  1283               	bcf	3,5	;RP0=0, select bank0
  1046  0449  1303               	bcf	3,6	;RP1=0, select bank0
  1047  044A  00C1               	movwf	CalcularDistancia@t2
  1048  044B  1683               	bsf	3,5	;RP0=1, select bank1
  1049  044C  1303               	bcf	3,6	;RP1=0, select bank1
  1050  044D  0827               	movf	(_t7+1)^(0+128),w
  1051  044E  1283               	bcf	3,5	;RP0=0, select bank0
  1052  044F  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0450  00C4               	movwf	CalcularDistancia@t3+1
  1054  0451  1683               	bsf	3,5	;RP0=1, select bank1
  1055  0452  1303               	bcf	3,6	;RP1=0, select bank1
  1056  0453  0826               	movf	_t7^(0+128),w
  1057  0454  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0455  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0456  00C3               	movwf	CalcularDistancia@t3
  1060  0457  30C8               	movlw	(low (_distancia1| 0))& (0+255)
  1061  0458  1683               	bsf	3,5	;RP0=1, select bank1
  1062  0459  1303               	bcf	3,6	;RP1=0, select bank1
  1063  045A  00CC               	movwf	??_main^(0+128)
  1064  045B  084C               	movf	??_main^(0+128),w
  1065  045C  1283               	bcf	3,5	;RP0=0, select bank0
  1066  045D  1303               	bcf	3,6	;RP1=0, select bank0
  1067  045E  00C5               	movwf	CalcularDistancia@distancia1
  1068  045F  30C9               	movlw	(low (_distancia2| 0))& (0+255)
  1069  0460  1683               	bsf	3,5	;RP0=1, select bank1
  1070  0461  1303               	bcf	3,6	;RP1=0, select bank1
  1071  0462  00CD               	movwf	(??_main+1)^(0+128)
  1072  0463  084D               	movf	(??_main+1)^(0+128),w
  1073  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0465  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0466  00C6               	movwf	CalcularDistancia@distancia2
  1076  0467  30CA               	movlw	(low (_distancia3| 0))& (0+255)
  1077  0468  1683               	bsf	3,5	;RP0=1, select bank1
  1078  0469  1303               	bcf	3,6	;RP1=0, select bank1
  1079  046A  00CE               	movwf	(??_main+2)^(0+128)
  1080  046B  084E               	movf	(??_main+2)^(0+128),w
  1081  046C  1283               	bcf	3,5	;RP0=0, select bank0
  1082  046D  1303               	bcf	3,6	;RP1=0, select bank0
  1083  046E  00C7               	movwf	CalcularDistancia@distancia3
  1084  046F  30CB               	movlw	(low (_distancia4| 0))& (0+255)
  1085  0470  1683               	bsf	3,5	;RP0=1, select bank1
  1086  0471  1303               	bcf	3,6	;RP1=0, select bank1
  1087  0472  00CF               	movwf	(??_main+3)^(0+128)
  1088  0473  084F               	movf	(??_main+3)^(0+128),w
  1089  0474  1283               	bcf	3,5	;RP0=0, select bank0
  1090  0475  1303               	bcf	3,6	;RP1=0, select bank0
  1091  0476  00C8               	movwf	CalcularDistancia@distancia4
  1092  0477  118A  203C  118A   	fcall	_CalcularDistancia
  1093                           
  1094                           ;main.c: 64: PrintDistancias(dist1, dist2, dist3, dist4);
  1095  047A  30B0               	movlw	(low (_dist2| 0))& (0+255)
  1096  047B  1683               	bsf	3,5	;RP0=1, select bank1
  1097  047C  1303               	bcf	3,6	;RP1=0, select bank1
  1098  047D  00CC               	movwf	??_main^(0+128)
  1099  047E  084C               	movf	??_main^(0+128),w
  1100  047F  1283               	bcf	3,5	;RP0=0, select bank0
  1101  0480  1303               	bcf	3,6	;RP1=0, select bank0
  1102  0481  00BD               	movwf	PrintDistancias@dist2
  1103  0482  30B8               	movlw	(low (_dist3| 0))& (0+255)
  1104  0483  1683               	bsf	3,5	;RP0=1, select bank1
  1105  0484  1303               	bcf	3,6	;RP1=0, select bank1
  1106  0485  00CD               	movwf	(??_main+1)^(0+128)
  1107  0486  084D               	movf	(??_main+1)^(0+128),w
  1108  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0489  00BE               	movwf	PrintDistancias@dist3
  1111  048A  30C0               	movlw	(low (_dist4| 0))& (0+255)
  1112  048B  1683               	bsf	3,5	;RP0=1, select bank1
  1113  048C  1303               	bcf	3,6	;RP1=0, select bank1
  1114  048D  00CE               	movwf	(??_main+2)^(0+128)
  1115  048E  084E               	movf	(??_main+2)^(0+128),w
  1116  048F  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0490  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0491  00BF               	movwf	PrintDistancias@dist4
  1119  0492  30A8               	movlw	(low (_dist1| 0))& (0+255)
  1120  0493  118A  25BC  118A   	fcall	_PrintDistancias
  1121                           
  1122                           ;main.c: 65: ResetEcho();
  1123  0496  118A  2622  118A   	fcall	_ResetEcho
  1124  0499  2C24               	goto	l312
  1125  049A                     __end_of_main:	
  1126                           ;main.c: 66: }
  1127                           ;main.c: 67: return;
  1128                           
  1129                           
  1130                           	psect	text1
  1131  012B                     __ptext1:	
  1132 ;; *************** function _UART_Init *****************
  1133 ;; Defined at:
  1134 ;;		line 3 in file "Uart.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  baudrate        4   14[BANK0 ] const long 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  x               2   30[BANK0 ] unsigned int 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      unsigned char 
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0, pclath, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1148 ;;      Params:         0       4       0       0
  1149 ;;      Locals:         0       2       0       0
  1150 ;;      Temps:          0      12       0       0
  1151 ;;      Totals:         0      18       0       0
  1152 ;;Total ram usage:       18 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    2
  1155 ;; This function calls:
  1156 ;;		___aldiv
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           
  1163                           ;psect for function _UART_Init
  1164  012B                     _UART_Init:	
  1165                           
  1166                           ;Uart.c: 5: unsigned int x;
  1167                           ;Uart.c: 6: x = (8000000 - baudrate*64)/(baudrate*64);
  1168                           
  1169                           ;incstack = 0
  1170                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1171  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1172  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1173  012D  082E               	movf	UART_Init@baudrate,w
  1174  012E  00B2               	movwf	??_UART_Init
  1175  012F  082F               	movf	UART_Init@baudrate+1,w
  1176  0130  00B3               	movwf	??_UART_Init+1
  1177  0131  0830               	movf	UART_Init@baudrate+2,w
  1178  0132  00B4               	movwf	??_UART_Init+2
  1179  0133  0831               	movf	UART_Init@baudrate+3,w
  1180  0134  00B5               	movwf	??_UART_Init+3
  1181  0135  3006               	movlw	6
  1182  0136                     u2215:	
  1183  0136  1003               	clrc
  1184  0137  0DB2               	rlf	??_UART_Init,f
  1185  0138  0DB3               	rlf	??_UART_Init+1,f
  1186  0139  0DB4               	rlf	??_UART_Init+2,f
  1187  013A  0DB5               	rlf	??_UART_Init+3,f
  1188  013B  3EFF               	addlw	-1
  1189  013C  1D03               	skipz
  1190  013D  2936               	goto	u2215
  1191  013E  0835               	movf	??_UART_Init+3,w
  1192  013F  00A3               	movwf	___aldiv@divisor+3
  1193  0140  0834               	movf	??_UART_Init+2,w
  1194  0141  00A2               	movwf	___aldiv@divisor+2
  1195  0142  0833               	movf	??_UART_Init+1,w
  1196  0143  00A1               	movwf	___aldiv@divisor+1
  1197  0144  0832               	movf	??_UART_Init,w
  1198  0145  00A0               	movwf	___aldiv@divisor
  1199  0146  3000               	movlw	0
  1200  0147  00B6               	movwf	??_UART_Init+4
  1201  0148  3012               	movlw	18
  1202  0149  00B7               	movwf	??_UART_Init+5
  1203  014A  307A               	movlw	122
  1204  014B  00B8               	movwf	??_UART_Init+6
  1205  014C  3000               	movlw	0
  1206  014D  00B9               	movwf	??_UART_Init+7
  1207  014E  082E               	movf	UART_Init@baudrate,w
  1208  014F  00BA               	movwf	??_UART_Init+8
  1209  0150  082F               	movf	UART_Init@baudrate+1,w
  1210  0151  00BB               	movwf	??_UART_Init+9
  1211  0152  0830               	movf	UART_Init@baudrate+2,w
  1212  0153  00BC               	movwf	??_UART_Init+10
  1213  0154  0831               	movf	UART_Init@baudrate+3,w
  1214  0155  00BD               	movwf	??_UART_Init+11
  1215  0156  3006               	movlw	6
  1216  0157                     u2225:	
  1217  0157  1003               	clrc
  1218  0158  0DBA               	rlf	??_UART_Init+8,f
  1219  0159  0DBB               	rlf	??_UART_Init+9,f
  1220  015A  0DBC               	rlf	??_UART_Init+10,f
  1221  015B  0DBD               	rlf	??_UART_Init+11,f
  1222  015C  3EFF               	addlw	-1
  1223  015D  1D03               	skipz
  1224  015E  2957               	goto	u2225
  1225  015F  09BA               	comf	??_UART_Init+8,f
  1226  0160  09BB               	comf	??_UART_Init+9,f
  1227  0161  09BC               	comf	??_UART_Init+10,f
  1228  0162  09BD               	comf	??_UART_Init+11,f
  1229  0163  0ABA               	incf	??_UART_Init+8,f
  1230  0164  1903               	skipnz
  1231  0165  0ABB               	incf	??_UART_Init+9,f
  1232  0166  1903               	skipnz
  1233  0167  0ABC               	incf	??_UART_Init+10,f
  1234  0168  1903               	skipnz
  1235  0169  0ABD               	incf	??_UART_Init+11,f
  1236  016A  083A               	movf	??_UART_Init+8,w
  1237  016B  07B6               	addwf	??_UART_Init+4,f
  1238  016C  083B               	movf	??_UART_Init+9,w
  1239  016D  1803               	skipnc
  1240  016E  0F3B               	incfsz	??_UART_Init+9,w
  1241  016F  2971               	goto	u2230
  1242  0170  2972               	goto	u2231
  1243  0171                     u2230:	
  1244  0171  07B7               	addwf	??_UART_Init+5,f
  1245  0172                     u2231:	
  1246  0172  083C               	movf	??_UART_Init+10,w
  1247  0173  1803               	skipnc
  1248  0174  0F3C               	incfsz	??_UART_Init+10,w
  1249  0175  2977               	goto	u2232
  1250  0176  2978               	goto	u2233
  1251  0177                     u2232:	
  1252  0177  07B8               	addwf	??_UART_Init+6,f
  1253  0178                     u2233:	
  1254  0178  083D               	movf	??_UART_Init+11,w
  1255  0179  1803               	skipnc
  1256  017A  0A3D               	incf	??_UART_Init+11,w
  1257  017B  07B9               	addwf	??_UART_Init+7,f
  1258  017C  0839               	movf	??_UART_Init+7,w
  1259  017D  00A7               	movwf	___aldiv@dividend+3
  1260  017E  0838               	movf	??_UART_Init+6,w
  1261  017F  00A6               	movwf	___aldiv@dividend+2
  1262  0180  0837               	movf	??_UART_Init+5,w
  1263  0181  00A5               	movwf	___aldiv@dividend+1
  1264  0182  0836               	movf	??_UART_Init+4,w
  1265  0183  00A4               	movwf	___aldiv@dividend
  1266  0184  118A  22FD  118A   	fcall	___aldiv
  1267  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1268  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1269  0189  0821               	movf	?___aldiv+1,w
  1270  018A  00BF               	movwf	UART_Init@x+1
  1271  018B  0820               	movf	?___aldiv,w
  1272  018C  00BE               	movwf	UART_Init@x
  1273                           
  1274                           ;Uart.c: 7: if(x>255)
  1275  018D  3001               	movlw	1
  1276  018E  023F               	subwf	UART_Init@x+1,w
  1277  018F  3000               	movlw	0
  1278  0190  1903               	skipnz
  1279  0191  023E               	subwf	UART_Init@x,w
  1280  0192  1C03               	skipc
  1281  0193  29F7               	goto	l2092
  1282                           
  1283                           ;Uart.c: 8: {
  1284                           ;Uart.c: 9: x = (8000000 - baudrate*16)/(baudrate*16);
  1285  0194  082E               	movf	UART_Init@baudrate,w
  1286  0195  00B2               	movwf	??_UART_Init
  1287  0196  082F               	movf	UART_Init@baudrate+1,w
  1288  0197  00B3               	movwf	??_UART_Init+1
  1289  0198  0830               	movf	UART_Init@baudrate+2,w
  1290  0199  00B4               	movwf	??_UART_Init+2
  1291  019A  0831               	movf	UART_Init@baudrate+3,w
  1292  019B  00B5               	movwf	??_UART_Init+3
  1293  019C  3004               	movlw	4
  1294  019D                     u2255:	
  1295  019D  1003               	clrc
  1296  019E  0DB2               	rlf	??_UART_Init,f
  1297  019F  0DB3               	rlf	??_UART_Init+1,f
  1298  01A0  0DB4               	rlf	??_UART_Init+2,f
  1299  01A1  0DB5               	rlf	??_UART_Init+3,f
  1300  01A2  3EFF               	addlw	-1
  1301  01A3  1D03               	skipz
  1302  01A4  299D               	goto	u2255
  1303  01A5  0835               	movf	??_UART_Init+3,w
  1304  01A6  00A3               	movwf	___aldiv@divisor+3
  1305  01A7  0834               	movf	??_UART_Init+2,w
  1306  01A8  00A2               	movwf	___aldiv@divisor+2
  1307  01A9  0833               	movf	??_UART_Init+1,w
  1308  01AA  00A1               	movwf	___aldiv@divisor+1
  1309  01AB  0832               	movf	??_UART_Init,w
  1310  01AC  00A0               	movwf	___aldiv@divisor
  1311  01AD  3000               	movlw	0
  1312  01AE  00B6               	movwf	??_UART_Init+4
  1313  01AF  3012               	movlw	18
  1314  01B0  00B7               	movwf	??_UART_Init+5
  1315  01B1  307A               	movlw	122
  1316  01B2  00B8               	movwf	??_UART_Init+6
  1317  01B3  3000               	movlw	0
  1318  01B4  00B9               	movwf	??_UART_Init+7
  1319  01B5  082E               	movf	UART_Init@baudrate,w
  1320  01B6  00BA               	movwf	??_UART_Init+8
  1321  01B7  082F               	movf	UART_Init@baudrate+1,w
  1322  01B8  00BB               	movwf	??_UART_Init+9
  1323  01B9  0830               	movf	UART_Init@baudrate+2,w
  1324  01BA  00BC               	movwf	??_UART_Init+10
  1325  01BB  0831               	movf	UART_Init@baudrate+3,w
  1326  01BC  00BD               	movwf	??_UART_Init+11
  1327  01BD  3004               	movlw	4
  1328  01BE                     u2265:	
  1329  01BE  1003               	clrc
  1330  01BF  0DBA               	rlf	??_UART_Init+8,f
  1331  01C0  0DBB               	rlf	??_UART_Init+9,f
  1332  01C1  0DBC               	rlf	??_UART_Init+10,f
  1333  01C2  0DBD               	rlf	??_UART_Init+11,f
  1334  01C3  3EFF               	addlw	-1
  1335  01C4  1D03               	skipz
  1336  01C5  29BE               	goto	u2265
  1337  01C6  09BA               	comf	??_UART_Init+8,f
  1338  01C7  09BB               	comf	??_UART_Init+9,f
  1339  01C8  09BC               	comf	??_UART_Init+10,f
  1340  01C9  09BD               	comf	??_UART_Init+11,f
  1341  01CA  0ABA               	incf	??_UART_Init+8,f
  1342  01CB  1903               	skipnz
  1343  01CC  0ABB               	incf	??_UART_Init+9,f
  1344  01CD  1903               	skipnz
  1345  01CE  0ABC               	incf	??_UART_Init+10,f
  1346  01CF  1903               	skipnz
  1347  01D0  0ABD               	incf	??_UART_Init+11,f
  1348  01D1  083A               	movf	??_UART_Init+8,w
  1349  01D2  07B6               	addwf	??_UART_Init+4,f
  1350  01D3  083B               	movf	??_UART_Init+9,w
  1351  01D4  1803               	skipnc
  1352  01D5  0F3B               	incfsz	??_UART_Init+9,w
  1353  01D6  29D8               	goto	u2270
  1354  01D7  29D9               	goto	u2271
  1355  01D8                     u2270:	
  1356  01D8  07B7               	addwf	??_UART_Init+5,f
  1357  01D9                     u2271:	
  1358  01D9  083C               	movf	??_UART_Init+10,w
  1359  01DA  1803               	skipnc
  1360  01DB  0F3C               	incfsz	??_UART_Init+10,w
  1361  01DC  29DE               	goto	u2272
  1362  01DD  29DF               	goto	u2273
  1363  01DE                     u2272:	
  1364  01DE  07B8               	addwf	??_UART_Init+6,f
  1365  01DF                     u2273:	
  1366  01DF  083D               	movf	??_UART_Init+11,w
  1367  01E0  1803               	skipnc
  1368  01E1  0A3D               	incf	??_UART_Init+11,w
  1369  01E2  07B9               	addwf	??_UART_Init+7,f
  1370  01E3  0839               	movf	??_UART_Init+7,w
  1371  01E4  00A7               	movwf	___aldiv@dividend+3
  1372  01E5  0838               	movf	??_UART_Init+6,w
  1373  01E6  00A6               	movwf	___aldiv@dividend+2
  1374  01E7  0837               	movf	??_UART_Init+5,w
  1375  01E8  00A5               	movwf	___aldiv@dividend+1
  1376  01E9  0836               	movf	??_UART_Init+4,w
  1377  01EA  00A4               	movwf	___aldiv@dividend
  1378  01EB  118A  22FD  118A   	fcall	___aldiv
  1379  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1380  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1381  01F0  0821               	movf	?___aldiv+1,w
  1382  01F1  00BF               	movwf	UART_Init@x+1
  1383  01F2  0820               	movf	?___aldiv,w
  1384  01F3  00BE               	movwf	UART_Init@x
  1385                           
  1386                           ;Uart.c: 10: BRGH = 1;
  1387  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  1388  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  1389  01F6  1518               	bsf	24,2	;volatile
  1390  01F7                     l2092:	
  1391                           
  1392                           ;Uart.c: 11: }
  1393                           ;Uart.c: 12: if(x<256)
  1394  01F7  3001               	movlw	1
  1395  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1396  01F9  023F               	subwf	UART_Init@x+1,w
  1397  01FA  3000               	movlw	0
  1398  01FB  1903               	skipnz
  1399  01FC  023E               	subwf	UART_Init@x,w
  1400  01FD  1803               	skipnc
  1401  01FE  0008               	return
  1402                           
  1403                           ;Uart.c: 13: {
  1404                           ;Uart.c: 14: BRGH = 0;
  1405  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  1406  0200  1303               	bcf	3,6	;RP1=0, select bank1
  1407  0201  1118               	bcf	24,2	;volatile
  1408                           
  1409                           ;Uart.c: 15: SPBRG = x;
  1410  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0204  083E               	movf	UART_Init@x,w
  1413  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1414  0206  1303               	bcf	3,6	;RP1=0, select bank1
  1415  0207  0099               	movwf	25	;volatile
  1416                           
  1417                           ;Uart.c: 16: SYNC = 0;
  1418  0208  1218               	bcf	24,4	;volatile
  1419                           
  1420                           ;Uart.c: 17: SPEN = 1;
  1421  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1422  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1423  020B  1798               	bsf	24,7	;volatile
  1424                           
  1425                           ;Uart.c: 18: TRISC7 = 1;
  1426  020C  1683               	bsf	3,5	;RP0=1, select bank1
  1427  020D  1303               	bcf	3,6	;RP1=0, select bank1
  1428  020E  1787               	bsf	7,7	;volatile
  1429                           
  1430                           ;Uart.c: 19: TRISC6 = 0;
  1431  020F  1307               	bcf	7,6	;volatile
  1432                           
  1433                           ;Uart.c: 20: TX9 = 0;
  1434  0210  1318               	bcf	24,6	;volatile
  1435                           
  1436                           ;Uart.c: 21: CREN = 1;
  1437  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1438  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1439  0213  1618               	bsf	24,4	;volatile
  1440                           
  1441                           ;Uart.c: 22: TXEN = 1;
  1442  0214  1683               	bsf	3,5	;RP0=1, select bank1
  1443  0215  1303               	bcf	3,6	;RP1=0, select bank1
  1444  0216  1698               	bsf	24,5	;volatile
  1445                           
  1446                           ;Uart.c: 23: return 1;
  1447                           ;	Return value of _UART_Init is never used
  1448  0217  0008               	return
  1449  0218                     __end_of_UART_Init:	
  1450                           ;Uart.c: 24: }
  1451                           ;Uart.c: 25: return 0;
  1452                           ;	Return value of _UART_Init is never used
  1453                           
  1454                           
  1455                           	psect	text2
  1456  02FD                     __ptext2:	
  1457 ;; *************** function ___aldiv *****************
  1458 ;; Defined at:
  1459 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\aldiv.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  divisor         4    0[BANK0 ] long 
  1462 ;;  dividend        4    4[BANK0 ] long 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  quotient        4   10[BANK0 ] long 
  1465 ;;  sign            1    9[BANK0 ] unsigned char 
  1466 ;;  counter         1    8[BANK0 ] unsigned char 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  4    0[BANK0 ] long 
  1469 ;; Registers used:
  1470 ;;		wreg, status,2, status,0
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1476 ;;      Params:         0       8       0       0
  1477 ;;      Locals:         0       6       0       0
  1478 ;;      Temps:          1       0       0       0
  1479 ;;      Totals:         1      14       0       0
  1480 ;;Total ram usage:       15 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_UART_Init
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           
  1491                           ;psect for function ___aldiv
  1492  02FD                     ___aldiv:	
  1493                           
  1494                           ;incstack = 0
  1495                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1496  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1497  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1498  02FF  01A9               	clrf	___aldiv@sign
  1499  0300  1FA3               	btfss	___aldiv@divisor+3,7
  1500  0301  2B0F               	goto	l503
  1501  0302  09A0               	comf	___aldiv@divisor,f
  1502  0303  09A1               	comf	___aldiv@divisor+1,f
  1503  0304  09A2               	comf	___aldiv@divisor+2,f
  1504  0305  09A3               	comf	___aldiv@divisor+3,f
  1505  0306  0AA0               	incf	___aldiv@divisor,f
  1506  0307  1903               	skipnz
  1507  0308  0AA1               	incf	___aldiv@divisor+1,f
  1508  0309  1903               	skipnz
  1509  030A  0AA2               	incf	___aldiv@divisor+2,f
  1510  030B  1903               	skipnz
  1511  030C  0AA3               	incf	___aldiv@divisor+3,f
  1512  030D  01A9               	clrf	___aldiv@sign
  1513  030E  0AA9               	incf	___aldiv@sign,f
  1514  030F                     l503:	
  1515  030F  1FA7               	btfss	___aldiv@dividend+3,7
  1516  0310  2B20               	goto	l2054
  1517  0311  09A4               	comf	___aldiv@dividend,f
  1518  0312  09A5               	comf	___aldiv@dividend+1,f
  1519  0313  09A6               	comf	___aldiv@dividend+2,f
  1520  0314  09A7               	comf	___aldiv@dividend+3,f
  1521  0315  0AA4               	incf	___aldiv@dividend,f
  1522  0316  1903               	skipnz
  1523  0317  0AA5               	incf	___aldiv@dividend+1,f
  1524  0318  1903               	skipnz
  1525  0319  0AA6               	incf	___aldiv@dividend+2,f
  1526  031A  1903               	skipnz
  1527  031B  0AA7               	incf	___aldiv@dividend+3,f
  1528  031C  3001               	movlw	1
  1529  031D  00F4               	movwf	??___aldiv
  1530  031E  0874               	movf	??___aldiv,w
  1531  031F  06A9               	xorwf	___aldiv@sign,f
  1532  0320                     l2054:	
  1533  0320  3000               	movlw	0
  1534  0321  00AD               	movwf	___aldiv@quotient+3
  1535  0322  3000               	movlw	0
  1536  0323  00AC               	movwf	___aldiv@quotient+2
  1537  0324  3000               	movlw	0
  1538  0325  00AB               	movwf	___aldiv@quotient+1
  1539  0326  3000               	movlw	0
  1540  0327  00AA               	movwf	___aldiv@quotient
  1541  0328  0823               	movf	___aldiv@divisor+3,w
  1542  0329  0422               	iorwf	___aldiv@divisor+2,w
  1543  032A  0421               	iorwf	___aldiv@divisor+1,w
  1544  032B  0420               	iorwf	___aldiv@divisor,w
  1545  032C  1903               	skipnz
  1546  032D  2B75               	goto	l2076
  1547  032E  01A8               	clrf	___aldiv@counter
  1548  032F  0AA8               	incf	___aldiv@counter,f
  1549  0330                     l2062:	
  1550  0330  1BA3               	btfsc	___aldiv@divisor+3,7
  1551  0331  2B40               	goto	l2064
  1552  0332  3001               	movlw	1
  1553  0333  00F4               	movwf	??___aldiv
  1554  0334                     u2145:	
  1555  0334  1003               	clrc
  1556  0335  0DA0               	rlf	___aldiv@divisor,f
  1557  0336  0DA1               	rlf	___aldiv@divisor+1,f
  1558  0337  0DA2               	rlf	___aldiv@divisor+2,f
  1559  0338  0DA3               	rlf	___aldiv@divisor+3,f
  1560  0339  0BF4               	decfsz	??___aldiv,f
  1561  033A  2B34               	goto	u2145
  1562  033B  3001               	movlw	1
  1563  033C  00F4               	movwf	??___aldiv
  1564  033D  0874               	movf	??___aldiv,w
  1565  033E  07A8               	addwf	___aldiv@counter,f
  1566  033F  2B30               	goto	l2062
  1567  0340                     l2064:	
  1568  0340  3001               	movlw	1
  1569  0341  00F4               	movwf	??___aldiv
  1570  0342                     u2165:	
  1571  0342  1003               	clrc
  1572  0343  0DAA               	rlf	___aldiv@quotient,f
  1573  0344  0DAB               	rlf	___aldiv@quotient+1,f
  1574  0345  0DAC               	rlf	___aldiv@quotient+2,f
  1575  0346  0DAD               	rlf	___aldiv@quotient+3,f
  1576  0347  0BF4               	decfsz	??___aldiv,f
  1577  0348  2B42               	goto	u2165
  1578  0349  0823               	movf	___aldiv@divisor+3,w
  1579  034A  0227               	subwf	___aldiv@dividend+3,w
  1580  034B  1D03               	skipz
  1581  034C  2B57               	goto	u2175
  1582  034D  0822               	movf	___aldiv@divisor+2,w
  1583  034E  0226               	subwf	___aldiv@dividend+2,w
  1584  034F  1D03               	skipz
  1585  0350  2B57               	goto	u2175
  1586  0351  0821               	movf	___aldiv@divisor+1,w
  1587  0352  0225               	subwf	___aldiv@dividend+1,w
  1588  0353  1D03               	skipz
  1589  0354  2B57               	goto	u2175
  1590  0355  0820               	movf	___aldiv@divisor,w
  1591  0356  0224               	subwf	___aldiv@dividend,w
  1592  0357                     u2175:	
  1593  0357  1C03               	skipc
  1594  0358  2B68               	goto	l2072
  1595  0359  0820               	movf	___aldiv@divisor,w
  1596  035A  02A4               	subwf	___aldiv@dividend,f
  1597  035B  0821               	movf	___aldiv@divisor+1,w
  1598  035C  1C03               	skipc
  1599  035D  0F21               	incfsz	___aldiv@divisor+1,w
  1600  035E  02A5               	subwf	___aldiv@dividend+1,f
  1601  035F  0822               	movf	___aldiv@divisor+2,w
  1602  0360  1C03               	skipc
  1603  0361  0F22               	incfsz	___aldiv@divisor+2,w
  1604  0362  02A6               	subwf	___aldiv@dividend+2,f
  1605  0363  0823               	movf	___aldiv@divisor+3,w
  1606  0364  1C03               	skipc
  1607  0365  0F23               	incfsz	___aldiv@divisor+3,w
  1608  0366  02A7               	subwf	___aldiv@dividend+3,f
  1609  0367  142A               	bsf	___aldiv@quotient,0
  1610  0368                     l2072:	
  1611  0368  3001               	movlw	1
  1612  0369                     u2185:	
  1613  0369  1003               	clrc
  1614  036A  0CA3               	rrf	___aldiv@divisor+3,f
  1615  036B  0CA2               	rrf	___aldiv@divisor+2,f
  1616  036C  0CA1               	rrf	___aldiv@divisor+1,f
  1617  036D  0CA0               	rrf	___aldiv@divisor,f
  1618  036E  3EFF               	addlw	-1
  1619  036F  1D03               	skipz
  1620  0370  2B69               	goto	u2185
  1621  0371  3001               	movlw	1
  1622  0372  02A8               	subwf	___aldiv@counter,f
  1623  0373  1D03               	btfss	3,2
  1624  0374  2B40               	goto	l2064
  1625  0375                     l2076:	
  1626  0375  0829               	movf	___aldiv@sign,w
  1627  0376  1903               	btfsc	3,2
  1628  0377  2B83               	goto	l2080
  1629  0378  09AA               	comf	___aldiv@quotient,f
  1630  0379  09AB               	comf	___aldiv@quotient+1,f
  1631  037A  09AC               	comf	___aldiv@quotient+2,f
  1632  037B  09AD               	comf	___aldiv@quotient+3,f
  1633  037C  0AAA               	incf	___aldiv@quotient,f
  1634  037D  1903               	skipnz
  1635  037E  0AAB               	incf	___aldiv@quotient+1,f
  1636  037F  1903               	skipnz
  1637  0380  0AAC               	incf	___aldiv@quotient+2,f
  1638  0381  1903               	skipnz
  1639  0382  0AAD               	incf	___aldiv@quotient+3,f
  1640  0383                     l2080:	
  1641  0383  082D               	movf	___aldiv@quotient+3,w
  1642  0384  00A3               	movwf	?___aldiv+3
  1643  0385  082C               	movf	___aldiv@quotient+2,w
  1644  0386  00A2               	movwf	?___aldiv+2
  1645  0387  082B               	movf	___aldiv@quotient+1,w
  1646  0388  00A1               	movwf	?___aldiv+1
  1647  0389  082A               	movf	___aldiv@quotient,w
  1648  038A  00A0               	movwf	?___aldiv
  1649  038B  0008               	return
  1650  038C                     __end_of___aldiv:	
  1651                           
  1652                           	psect	text3
  1653  049A                     __ptext3:	
  1654 ;; *************** function _Trigger *****************
  1655 ;; Defined at:
  1656 ;;		line 31 in file "Funciones.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1670 ;;      Params:         0       0       0       0
  1671 ;;      Locals:         0       0       0       0
  1672 ;;      Temps:          2       0       0       0
  1673 ;;      Totals:         2       0       0       0
  1674 ;;Total ram usage:        2 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           
  1685                           ;psect for function _Trigger
  1686  049A                     _Trigger:	
  1687                           
  1688                           ;Funciones.c: 32: TRISB = 0b00010000;
  1689                           
  1690                           ;incstack = 0
  1691                           ; Regs used in _Trigger: [wreg]
  1692  049A  3010               	movlw	16
  1693  049B  1683               	bsf	3,5	;RP0=1, select bank1
  1694  049C  1303               	bcf	3,6	;RP1=0, select bank1
  1695  049D  0086               	movwf	6	;volatile
  1696                           
  1697                           ;Funciones.c: 33: RB0 = 1;
  1698  049E  1283               	bcf	3,5	;RP0=0, select bank0
  1699  049F  1303               	bcf	3,6	;RP1=0, select bank0
  1700  04A0  1406               	bsf	6,0	;volatile
  1701                           
  1702                           ;Funciones.c: 34: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1703  04A1  3006               	movlw	6
  1704  04A2  00F4               	movwf	??_Trigger
  1705  04A3                     u2377:	
  1706  04A3  0BF4               	decfsz	??_Trigger,f
  1707  04A4  2CA3               	goto	u2377
  1708  04A5  0000               	nop
  1709                           
  1710                           ;Funciones.c: 35: RB0 = 0;
  1711  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1712  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1713  04A8  1006               	bcf	6,0	;volatile
  1714                           
  1715                           ;Funciones.c: 37: _delay((unsigned long)((50)*(8000000/4000.0)));
  1716  04A9  3082               	movlw	130
  1717  04AA  00F5               	movwf	??_Trigger+1
  1718  04AB  30DD               	movlw	221
  1719  04AC  00F4               	movwf	??_Trigger
  1720  04AD                     u2387:	
  1721  04AD  0BF4               	decfsz	??_Trigger,f
  1722  04AE  2CAD               	goto	u2387
  1723  04AF  0BF5               	decfsz	??_Trigger+1,f
  1724  04B0  2CAD               	goto	u2387
  1725  04B1  2CB2               	nop2
  1726                           
  1727                           ;Funciones.c: 39: TRISB = 0b00100000;
  1728  04B2  3020               	movlw	32
  1729  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  1730  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  1731  04B5  0086               	movwf	6	;volatile
  1732                           
  1733                           ;Funciones.c: 40: RB1 = 1;
  1734  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1735  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1736  04B8  1486               	bsf	6,1	;volatile
  1737                           
  1738                           ;Funciones.c: 41: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1739  04B9  3006               	movlw	6
  1740  04BA  00F4               	movwf	??_Trigger
  1741  04BB                     u2397:	
  1742  04BB  0BF4               	decfsz	??_Trigger,f
  1743  04BC  2CBB               	goto	u2397
  1744  04BD  0000               	nop
  1745                           
  1746                           ;Funciones.c: 42: RB1 = 0;
  1747  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  1748  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  1749  04C0  1086               	bcf	6,1	;volatile
  1750                           
  1751                           ;Funciones.c: 44: _delay((unsigned long)((50)*(8000000/4000.0)));
  1752  04C1  3082               	movlw	130
  1753  04C2  00F5               	movwf	??_Trigger+1
  1754  04C3  30DD               	movlw	221
  1755  04C4  00F4               	movwf	??_Trigger
  1756  04C5                     u2407:	
  1757  04C5  0BF4               	decfsz	??_Trigger,f
  1758  04C6  2CC5               	goto	u2407
  1759  04C7  0BF5               	decfsz	??_Trigger+1,f
  1760  04C8  2CC5               	goto	u2407
  1761  04C9  2CCA               	nop2
  1762                           
  1763                           ;Funciones.c: 46: TRISB = 0b01000000;
  1764  04CA  3040               	movlw	64
  1765  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  1766  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  1767  04CD  0086               	movwf	6	;volatile
  1768                           
  1769                           ;Funciones.c: 47: RB2 = 1;
  1770  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  1771  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  1772  04D0  1506               	bsf	6,2	;volatile
  1773                           
  1774                           ;Funciones.c: 48: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1775  04D1  3006               	movlw	6
  1776  04D2  00F4               	movwf	??_Trigger
  1777  04D3                     u2417:	
  1778  04D3  0BF4               	decfsz	??_Trigger,f
  1779  04D4  2CD3               	goto	u2417
  1780  04D5  0000               	nop
  1781                           
  1782                           ;Funciones.c: 49: RB2 = 0;
  1783  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  1784  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  1785  04D8  1106               	bcf	6,2	;volatile
  1786                           
  1787                           ;Funciones.c: 51: _delay((unsigned long)((50)*(8000000/4000.0)));
  1788  04D9  3082               	movlw	130
  1789  04DA  00F5               	movwf	??_Trigger+1
  1790  04DB  30DD               	movlw	221
  1791  04DC  00F4               	movwf	??_Trigger
  1792  04DD                     u2427:	
  1793  04DD  0BF4               	decfsz	??_Trigger,f
  1794  04DE  2CDD               	goto	u2427
  1795  04DF  0BF5               	decfsz	??_Trigger+1,f
  1796  04E0  2CDD               	goto	u2427
  1797  04E1  2CE2               	nop2
  1798                           
  1799                           ;Funciones.c: 53: TRISB = 0b10000000;
  1800  04E2  3080               	movlw	128
  1801  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  1802  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  1803  04E5  0086               	movwf	6	;volatile
  1804                           
  1805                           ;Funciones.c: 54: RB3 = 1;
  1806  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1807  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  1808  04E8  1586               	bsf	6,3	;volatile
  1809                           
  1810                           ;Funciones.c: 55: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1811  04E9  3006               	movlw	6
  1812  04EA  00F4               	movwf	??_Trigger
  1813  04EB                     u2437:	
  1814  04EB  0BF4               	decfsz	??_Trigger,f
  1815  04EC  2CEB               	goto	u2437
  1816  04ED  0000               	nop
  1817                           
  1818                           ;Funciones.c: 56: RB3= 0;
  1819  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  1820  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  1821  04F0  1186               	bcf	6,3	;volatile
  1822                           
  1823                           ;Funciones.c: 58: _delay((unsigned long)((50)*(8000000/4000.0)));
  1824  04F1  3082               	movlw	130
  1825  04F2  00F5               	movwf	??_Trigger+1
  1826  04F3  30DD               	movlw	221
  1827  04F4  00F4               	movwf	??_Trigger
  1828  04F5                     u2447:	
  1829  04F5  0BF4               	decfsz	??_Trigger,f
  1830  04F6  2CF5               	goto	u2447
  1831  04F7  0BF5               	decfsz	??_Trigger+1,f
  1832  04F8  2CF5               	goto	u2447
  1833  04F9  2CFA               	nop2
  1834  04FA  0008               	return
  1835  04FB                     __end_of_Trigger:	
  1836                           
  1837                           	psect	text4
  1838  0622                     __ptext4:	
  1839 ;; *************** function _ResetEcho *****************
  1840 ;; Defined at:
  1841 ;;		line 109 in file "Funciones.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1855 ;;      Params:         0       0       0       0
  1856 ;;      Locals:         0       0       0       0
  1857 ;;      Temps:          2       0       0       0
  1858 ;;      Totals:         2       0       0       0
  1859 ;;Total ram usage:        2 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           
  1870                           ;psect for function _ResetEcho
  1871  0622                     _ResetEcho:	
  1872                           
  1873                           ;Funciones.c: 111: TRISB = 0b00000000;
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _ResetEcho: [wreg+status,2]
  1877  0622  1683               	bsf	3,5	;RP0=1, select bank1
  1878  0623  1303               	bcf	3,6	;RP1=0, select bank1
  1879  0624  0186               	clrf	6	;volatile
  1880                           
  1881                           ;Funciones.c: 112: _delay((unsigned long)((5)*(8000000/4000.0)));
  1882  0625  300D               	movlw	13
  1883  0626  00F5               	movwf	??_ResetEcho+1
  1884  0627  30FB               	movlw	251
  1885  0628  00F4               	movwf	??_ResetEcho
  1886  0629                     u2457:	
  1887  0629  0BF4               	decfsz	??_ResetEcho,f
  1888  062A  2E29               	goto	u2457
  1889  062B  0BF5               	decfsz	??_ResetEcho+1,f
  1890  062C  2E29               	goto	u2457
  1891  062D  2E2E               	nop2
  1892                           
  1893                           ;Funciones.c: 113: PORTB = 0b00000000;
  1894  062E  1283               	bcf	3,5	;RP0=0, select bank0
  1895  062F  1303               	bcf	3,6	;RP1=0, select bank0
  1896  0630  0186               	clrf	6	;volatile
  1897                           
  1898                           ;Funciones.c: 114: _delay((unsigned long)((5)*(8000000/4000.0)));
  1899  0631  300D               	movlw	13
  1900  0632  00F5               	movwf	??_ResetEcho+1
  1901  0633  30FB               	movlw	251
  1902  0634  00F4               	movwf	??_ResetEcho
  1903  0635                     u2467:	
  1904  0635  0BF4               	decfsz	??_ResetEcho,f
  1905  0636  2E35               	goto	u2467
  1906  0637  0BF5               	decfsz	??_ResetEcho+1,f
  1907  0638  2E35               	goto	u2467
  1908  0639  2E3A               	nop2
  1909  063A  0008               	return
  1910  063B                     __end_of_ResetEcho:	
  1911                           
  1912                           	psect	text5
  1913  05BC                     __ptext5:	
  1914 ;; *************** function _PrintDistancias *****************
  1915 ;; Defined at:
  1916 ;;		line 88 in file "Funciones.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  dist1           1    wreg     PTR unsigned char 
  1919 ;;		 -> dist1(8), 
  1920 ;;  dist2           1   29[BANK0 ] PTR unsigned char 
  1921 ;;		 -> dist2(8), 
  1922 ;;  dist3           1   30[BANK0 ] PTR unsigned char 
  1923 ;;		 -> dist3(8), 
  1924 ;;  dist4           1   31[BANK0 ] PTR unsigned char 
  1925 ;;		 -> dist4(8), 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  dist1           1   77[BANK0 ] PTR unsigned char 
  1928 ;;		 -> dist1(8), 
  1929 ;;  dist           40   37[BANK0 ] unsigned char [40]
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1939 ;;      Params:         0       3       0       0
  1940 ;;      Locals:         0      41       0       0
  1941 ;;      Temps:          0       5       0       0
  1942 ;;      Totals:         0      49       0       0
  1943 ;;Total ram usage:       49 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    3
  1946 ;; This function calls:
  1947 ;;		_UART_Write_Text
  1948 ;;		_sprintf
  1949 ;; This function is called by:
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           
  1955                           ;psect for function _PrintDistancias
  1956  05BC                     _PrintDistancias:	
  1957                           
  1958                           ;incstack = 0
  1959                           ; Regs used in _PrintDistancias: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1960                           ;PrintDistancias@dist1 stored from wreg
  1961  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1962  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1963  05BE  00ED               	movwf	PrintDistancias@dist1
  1964                           
  1965                           ;Funciones.c: 103: char dist[40];
  1966                           ;Funciones.c: 104: sprintf(dist,"%s, %s, %s, %s.\n\r\0", dist1, dist2, dist3, dist4);
  1967  05BF  300F               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1968  05C0  00C0               	movwf	??_PrintDistancias
  1969  05C1  0840               	movf	??_PrintDistancias,w
  1970  05C2  00AC               	movwf	sprintf@f
  1971  05C3  086D               	movf	PrintDistancias@dist1,w
  1972  05C4  00C1               	movwf	??_PrintDistancias+1
  1973  05C5  0841               	movf	??_PrintDistancias+1,w
  1974  05C6  00AD               	movwf	low ((?_sprintf| 0+1))
  1975  05C7  083D               	movf	PrintDistancias@dist2,w
  1976  05C8  00C2               	movwf	??_PrintDistancias+2
  1977  05C9  0842               	movf	??_PrintDistancias+2,w
  1978  05CA  00AE               	movwf	low ((?_sprintf| 0+2))
  1979  05CB  083E               	movf	PrintDistancias@dist3,w
  1980  05CC  00C3               	movwf	??_PrintDistancias+3
  1981  05CD  0843               	movf	??_PrintDistancias+3,w
  1982  05CE  00AF               	movwf	low ((?_sprintf| 0+3))
  1983  05CF  083F               	movf	PrintDistancias@dist4,w
  1984  05D0  00C4               	movwf	??_PrintDistancias+4
  1985  05D1  0844               	movf	??_PrintDistancias+4,w
  1986  05D2  00B0               	movwf	low ((?_sprintf| 0+4))
  1987  05D3  3045               	movlw	(low (PrintDistancias@dist| 0))& (0+255)
  1988  05D4  118A  2218  118A   	fcall	_sprintf
  1989                           
  1990                           ;Funciones.c: 105: UART_Write_Text(dist);
  1991  05D7  3045               	movlw	(low (PrintDistancias@dist| 0))& (0+255)
  1992  05D8  118A  25E7  118A   	fcall	_UART_Write_Text
  1993                           
  1994                           ;Funciones.c: 106: _delay((unsigned long)((50)*(8000000/4000.0)));
  1995  05DB  3082               	movlw	130
  1996  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1997  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1998  05DE  00C1               	movwf	??_PrintDistancias+1
  1999  05DF  30DD               	movlw	221
  2000  05E0  00C0               	movwf	??_PrintDistancias
  2001  05E1                     u2477:	
  2002  05E1  0BC0               	decfsz	??_PrintDistancias,f
  2003  05E2  2DE1               	goto	u2477
  2004  05E3  0BC1               	decfsz	??_PrintDistancias+1,f
  2005  05E4  2DE1               	goto	u2477
  2006  05E5  2DE6               	nop2
  2007  05E6  0008               	return
  2008  05E7                     __end_of_PrintDistancias:	
  2009                           
  2010                           	psect	text6
  2011  05E7                     __ptext6:	
  2012 ;; *************** function _UART_Write_Text *****************
  2013 ;; Defined at:
  2014 ;;		line 50 in file "Uart.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  text            1    wreg     PTR unsigned char 
  2017 ;;		 -> PrintDistancias@dist(40), 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  text            1    0[BANK0 ] PTR unsigned char 
  2020 ;;		 -> PrintDistancias@dist(40), 
  2021 ;;  i               2    1[BANK0 ] int 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2031 ;;      Params:         0       0       0       0
  2032 ;;      Locals:         0       3       0       0
  2033 ;;      Temps:          1       0       0       0
  2034 ;;      Totals:         1       3       0       0
  2035 ;;Total ram usage:        4 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    2
  2038 ;; This function calls:
  2039 ;;		_UART_Write
  2040 ;; This function is called by:
  2041 ;;		_PrintDistancias
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           
  2046                           ;psect for function _UART_Write_Text
  2047  05E7                     _UART_Write_Text:	
  2048                           
  2049                           ;incstack = 0
  2050                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2051                           ;UART_Write_Text@text stored from wreg
  2052  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  2053  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  2054  05E9  00A0               	movwf	UART_Write_Text@text
  2055                           
  2056                           ;Uart.c: 52: int i;
  2057                           ;Uart.c: 53: for(i=0;text[i]!='\0';i++)
  2058  05EA  01A1               	clrf	UART_Write_Text@i
  2059  05EB  01A2               	clrf	UART_Write_Text@i+1
  2060  05EC                     l1978:	
  2061  05EC  0821               	movf	UART_Write_Text@i,w
  2062  05ED  0720               	addwf	UART_Write_Text@text,w
  2063  05EE  00F5               	movwf	??_UART_Write_Text
  2064  05EF  0875               	movf	??_UART_Write_Text,w
  2065  05F0  0084               	movwf	4
  2066  05F1  1383               	bcf	3,7	;select IRP bank0
  2067  05F2  0800               	movf	0,w
  2068  05F3  1903               	btfsc	3,2
  2069  05F4  0008               	return
  2070                           
  2071                           ;Uart.c: 54: UART_Write(text[i]);
  2072  05F5  0821               	movf	UART_Write_Text@i,w
  2073  05F6  0720               	addwf	UART_Write_Text@text,w
  2074  05F7  00F5               	movwf	??_UART_Write_Text
  2075  05F8  0875               	movf	??_UART_Write_Text,w
  2076  05F9  0084               	movwf	4
  2077  05FA  1383               	bcf	3,7	;select IRP bank0
  2078  05FB  0800               	movf	0,w
  2079  05FC  118A  263B  118A   	fcall	_UART_Write
  2080  05FF  3001               	movlw	1
  2081  0600  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0601  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0602  07A1               	addwf	UART_Write_Text@i,f
  2084  0603  1803               	skipnc
  2085  0604  0AA2               	incf	UART_Write_Text@i+1,f
  2086  0605  3000               	movlw	0
  2087  0606  07A2               	addwf	UART_Write_Text@i+1,f
  2088  0607  2DEC               	goto	l1978
  2089  0608                     __end_of_UART_Write_Text:	
  2090                           
  2091                           	psect	text7
  2092  063B                     __ptext7:	
  2093 ;; *************** function _UART_Write *****************
  2094 ;; Defined at:
  2095 ;;		line 44 in file "Uart.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  data            1    wreg     unsigned char 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  data            1    4[COMMON] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2109 ;;      Params:         0       0       0       0
  2110 ;;      Locals:         1       0       0       0
  2111 ;;      Temps:          0       0       0       0
  2112 ;;      Totals:         1       0       0       0
  2113 ;;Total ram usage:        1 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    1
  2116 ;; This function calls:
  2117 ;;		Nothing
  2118 ;; This function is called by:
  2119 ;;		_UART_Write_Text
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           
  2124                           ;psect for function _UART_Write
  2125  063B                     _UART_Write:	
  2126                           
  2127                           ;incstack = 0
  2128                           ; Regs used in _UART_Write: [wreg]
  2129                           ;UART_Write@data stored from wreg
  2130  063B  00F4               	movwf	UART_Write@data
  2131  063C                     l183:	
  2132                           ;Uart.c: 46: while(!TRMT);
  2133                           
  2134  063C  1683               	bsf	3,5	;RP0=1, select bank1
  2135  063D  1303               	bcf	3,6	;RP1=0, select bank1
  2136  063E  1C98               	btfss	24,1	;volatile
  2137  063F  2E3C               	goto	l183
  2138                           
  2139                           ;Uart.c: 47: TXREG = data;
  2140  0640  0874               	movf	UART_Write@data,w
  2141  0641  1283               	bcf	3,5	;RP0=0, select bank0
  2142  0642  1303               	bcf	3,6	;RP1=0, select bank0
  2143  0643  0099               	movwf	25	;volatile
  2144  0644  0008               	return
  2145  0645                     __end_of_UART_Write:	
  2146                           
  2147                           	psect	text8
  2148  0608                     __ptext8:	
  2149 ;; *************** function _Inicializaciones *****************
  2150 ;; Defined at:
  2151 ;;		line 6 in file "Funciones.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2165 ;;      Params:         0       0       0       0
  2166 ;;      Locals:         0       0       0       0
  2167 ;;      Temps:          0       0       0       0
  2168 ;;      Totals:         0       0       0       0
  2169 ;;Total ram usage:        0 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    1
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _Inicializaciones
  2181  0608                     _Inicializaciones:	
  2182                           
  2183                           ;Funciones.c: 7: OSCCON = 0b01110101;
  2184                           
  2185                           ;incstack = 0
  2186                           ; Regs used in _Inicializaciones: [wreg+status,2]
  2187  0608  3075               	movlw	117
  2188  0609  1683               	bsf	3,5	;RP0=1, select bank1
  2189  060A  1303               	bcf	3,6	;RP1=0, select bank1
  2190  060B  008F               	movwf	15	;volatile
  2191                           
  2192                           ;Funciones.c: 10: TRISB = 0b11110000;
  2193  060C  30F0               	movlw	240
  2194  060D  0086               	movwf	6	;volatile
  2195                           
  2196                           ;Funciones.c: 11: PORTB = 0b00000000;
  2197  060E  1283               	bcf	3,5	;RP0=0, select bank0
  2198  060F  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0610  0186               	clrf	6	;volatile
  2200                           
  2201                           ;Funciones.c: 12: ANSELH = 0b00000000;
  2202  0611  1683               	bsf	3,5	;RP0=1, select bank3
  2203  0612  1703               	bsf	3,6	;RP1=1, select bank3
  2204  0613  0189               	clrf	9	;volatile
  2205                           
  2206                           ;Funciones.c: 17: TMR1 = 0;
  2207  0614  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0615  1303               	bcf	3,6	;RP1=0, select bank0
  2209  0616  018E               	clrf	14	;volatile
  2210  0617  018F               	clrf	15	;volatile
  2211                           
  2212                           ;Funciones.c: 18: T1CON = 0b00010000;
  2213  0618  3010               	movlw	16
  2214  0619  0090               	movwf	16	;volatile
  2215                           
  2216                           ;Funciones.c: 21: INTCON = 0b00001000;
  2217  061A  3008               	movlw	8
  2218  061B  008B               	movwf	11	;volatile
  2219                           
  2220                           ;Funciones.c: 22: IOCB = 0b11110000;
  2221  061C  30F0               	movlw	240
  2222  061D  1683               	bsf	3,5	;RP0=1, select bank1
  2223  061E  1303               	bcf	3,6	;RP1=0, select bank1
  2224  061F  0096               	movwf	22	;volatile
  2225                           
  2226                           ;Funciones.c: 23: GIE = 1;
  2227  0620  178B               	bsf	11,7	;volatile
  2228  0621  0008               	return
  2229  0622                     __end_of_Inicializaciones:	
  2230                           
  2231                           	psect	text9
  2232  003C                     __ptext9:	
  2233 ;; *************** function _CalcularDistancia *****************
  2234 ;; Defined at:
  2235 ;;		line 61 in file "Funciones.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  t0              2   29[BANK0 ] unsigned int 
  2238 ;;  t1              2   31[BANK0 ] unsigned int 
  2239 ;;  t2              2   33[BANK0 ] unsigned int 
  2240 ;;  t3              2   35[BANK0 ] unsigned int 
  2241 ;;  distancia1      1   37[BANK0 ] PTR PTR unsigned char 
  2242 ;;		 -> distancia1(1), 
  2243 ;;  distancia2      1   38[BANK0 ] PTR PTR unsigned char 
  2244 ;;		 -> distancia2(1), 
  2245 ;;  distancia3      1   39[BANK0 ] PTR PTR unsigned char 
  2246 ;;		 -> distancia3(1), 
  2247 ;;  distancia4      1   40[BANK0 ] PTR PTR unsigned char 
  2248 ;;		 -> distancia4(1), 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  d3              2   48[BANK0 ] unsigned int 
  2251 ;;  d2              2   46[BANK0 ] unsigned int 
  2252 ;;  d1              2   44[BANK0 ] unsigned int 
  2253 ;;  d0              2   42[BANK0 ] unsigned int 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2263 ;;      Params:         0      12       0       0
  2264 ;;      Locals:         0       8       0       0
  2265 ;;      Temps:          0       1       0       0
  2266 ;;      Totals:         0      21       0       0
  2267 ;;Total ram usage:       21 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    3
  2270 ;; This function calls:
  2271 ;;		___lwdiv
  2272 ;;		_sprintf
  2273 ;; This function is called by:
  2274 ;;		_main
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           
  2279                           ;psect for function _CalcularDistancia
  2280  003C                     _CalcularDistancia:	
  2281                           
  2282                           ;Funciones.c: 64: unsigned int d0,d1,d2,d3;
  2283                           ;Funciones.c: 66: d0 = ( t0 ) / 58;
  2284                           
  2285                           ;incstack = 0
  2286                           ; Regs used in _CalcularDistancia: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2287  003C  303A               	movlw	58
  2288  003D  1283               	bcf	3,5	;RP0=0, select bank0
  2289  003E  1303               	bcf	3,6	;RP1=0, select bank0
  2290  003F  00A0               	movwf	___lwdiv@divisor
  2291  0040  3000               	movlw	0
  2292  0041  00A1               	movwf	___lwdiv@divisor+1
  2293  0042  083E               	movf	CalcularDistancia@t0+1,w
  2294  0043  00A3               	movwf	___lwdiv@dividend+1
  2295  0044  083D               	movf	CalcularDistancia@t0,w
  2296  0045  00A2               	movwf	___lwdiv@dividend
  2297  0046  118A  254A  118A   	fcall	___lwdiv
  2298  0049  1283               	bcf	3,5	;RP0=0, select bank0
  2299  004A  1303               	bcf	3,6	;RP1=0, select bank0
  2300  004B  0821               	movf	?___lwdiv+1,w
  2301  004C  00CB               	movwf	CalcularDistancia@d0+1
  2302  004D  0820               	movf	?___lwdiv,w
  2303  004E  00CA               	movwf	CalcularDistancia@d0
  2304                           
  2305                           ;Funciones.c: 67: d1 = ( t1 ) / 58;
  2306  004F  303A               	movlw	58
  2307  0050  00A0               	movwf	___lwdiv@divisor
  2308  0051  3000               	movlw	0
  2309  0052  00A1               	movwf	___lwdiv@divisor+1
  2310  0053  0840               	movf	CalcularDistancia@t1+1,w
  2311  0054  00A3               	movwf	___lwdiv@dividend+1
  2312  0055  083F               	movf	CalcularDistancia@t1,w
  2313  0056  00A2               	movwf	___lwdiv@dividend
  2314  0057  118A  254A  118A   	fcall	___lwdiv
  2315  005A  1283               	bcf	3,5	;RP0=0, select bank0
  2316  005B  1303               	bcf	3,6	;RP1=0, select bank0
  2317  005C  0821               	movf	?___lwdiv+1,w
  2318  005D  00CD               	movwf	CalcularDistancia@d1+1
  2319  005E  0820               	movf	?___lwdiv,w
  2320  005F  00CC               	movwf	CalcularDistancia@d1
  2321                           
  2322                           ;Funciones.c: 68: d2 = ( t2 ) / 58;
  2323  0060  303A               	movlw	58
  2324  0061  00A0               	movwf	___lwdiv@divisor
  2325  0062  3000               	movlw	0
  2326  0063  00A1               	movwf	___lwdiv@divisor+1
  2327  0064  0842               	movf	CalcularDistancia@t2+1,w
  2328  0065  00A3               	movwf	___lwdiv@dividend+1
  2329  0066  0841               	movf	CalcularDistancia@t2,w
  2330  0067  00A2               	movwf	___lwdiv@dividend
  2331  0068  118A  254A  118A   	fcall	___lwdiv
  2332  006B  1283               	bcf	3,5	;RP0=0, select bank0
  2333  006C  1303               	bcf	3,6	;RP1=0, select bank0
  2334  006D  0821               	movf	?___lwdiv+1,w
  2335  006E  00CF               	movwf	CalcularDistancia@d2+1
  2336  006F  0820               	movf	?___lwdiv,w
  2337  0070  00CE               	movwf	CalcularDistancia@d2
  2338                           
  2339                           ;Funciones.c: 69: d3 = ( t3 ) / 58;
  2340  0071  303A               	movlw	58
  2341  0072  00A0               	movwf	___lwdiv@divisor
  2342  0073  3000               	movlw	0
  2343  0074  00A1               	movwf	___lwdiv@divisor+1
  2344  0075  0844               	movf	CalcularDistancia@t3+1,w
  2345  0076  00A3               	movwf	___lwdiv@dividend+1
  2346  0077  0843               	movf	CalcularDistancia@t3,w
  2347  0078  00A2               	movwf	___lwdiv@dividend
  2348  0079  118A  254A  118A   	fcall	___lwdiv
  2349  007C  1283               	bcf	3,5	;RP0=0, select bank0
  2350  007D  1303               	bcf	3,6	;RP1=0, select bank0
  2351  007E  0821               	movf	?___lwdiv+1,w
  2352  007F  00D1               	movwf	CalcularDistancia@d3+1
  2353  0080  0820               	movf	?___lwdiv,w
  2354  0081  00D0               	movwf	CalcularDistancia@d3
  2355                           
  2356                           ;Funciones.c: 71: if(d0 == 0){ sprintf(*distancia1,"NOPE\0"); }
  2357  0082  084A               	movf	CalcularDistancia@d0,w
  2358  0083  044B               	iorwf	CalcularDistancia@d0+1,w
  2359  0084  1D03               	btfss	3,2
  2360  0085  2888               	goto	l2120
  2361  0086  3030               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2362  0087  2892               	goto	L4
  2363  0088                     l2120:	
  2364                           
  2365                           ;Funciones.c: 72: else if(d0 > 400){ sprintf(*distancia1,"OUT\0"); }
  2366  0088  3001               	movlw	1
  2367  0089  1283               	bcf	3,5	;RP0=0, select bank0
  2368  008A  1303               	bcf	3,6	;RP1=0, select bank0
  2369  008B  024B               	subwf	CalcularDistancia@d0+1,w
  2370  008C  3091               	movlw	145
  2371  008D  1903               	skipnz
  2372  008E  024A               	subwf	CalcularDistancia@d0,w
  2373  008F  1C03               	skipc
  2374  0090  2896               	goto	l2124
  2375  0091  3036               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2376  0092                     L4:	
  2377  0092  00C9               	movwf	??_CalcularDistancia
  2378  0093  0849               	movf	??_CalcularDistancia,w
  2379  0094  00AC               	movwf	sprintf@f
  2380  0095  28A0               	goto	L1
  2381  0096                     l2124:	
  2382                           
  2383                           ;Funciones.c: 73: else { sprintf(*distancia1,"%u   \0", d0); }
  2384  0096  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2385  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0099  00C9               	movwf	??_CalcularDistancia
  2388  009A  0849               	movf	??_CalcularDistancia,w
  2389  009B  00AC               	movwf	sprintf@f
  2390  009C  084B               	movf	CalcularDistancia@d0+1,w
  2391  009D  00AE               	movwf	?_sprintf+2
  2392  009E  084A               	movf	CalcularDistancia@d0,w
  2393  009F  00AD               	movwf	?_sprintf+1
  2394  00A0                     L1:	
  2395  00A0  0845               	movf	CalcularDistancia@distancia1,w
  2396  00A1  0084               	movwf	4
  2397  00A2  1383               	bcf	3,7	;select IRP bank0
  2398  00A3  0800               	movf	0,w
  2399  00A4  118A  2218  118A   	fcall	_sprintf
  2400                           
  2401                           ;Funciones.c: 75: if(d1 == 0){ sprintf(*distancia2,"NOPE\0"); }
  2402  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  2403  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  2404  00A9  084C               	movf	CalcularDistancia@d1,w
  2405  00AA  044D               	iorwf	CalcularDistancia@d1+1,w
  2406  00AB  1D03               	btfss	3,2
  2407  00AC  28AF               	goto	l2130
  2408  00AD  3030               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2409  00AE  28B9               	goto	L5
  2410  00AF                     l2130:	
  2411                           
  2412                           ;Funciones.c: 76: else if(d1 > 400){ sprintf(*distancia2,"OUT\0"); }
  2413  00AF  3001               	movlw	1
  2414  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  2415  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  2416  00B2  024D               	subwf	CalcularDistancia@d1+1,w
  2417  00B3  3091               	movlw	145
  2418  00B4  1903               	skipnz
  2419  00B5  024C               	subwf	CalcularDistancia@d1,w
  2420  00B6  1C03               	skipc
  2421  00B7  28BD               	goto	l2134
  2422  00B8  3036               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2423  00B9                     L5:	
  2424  00B9  00C9               	movwf	??_CalcularDistancia
  2425  00BA  0849               	movf	??_CalcularDistancia,w
  2426  00BB  00AC               	movwf	sprintf@f
  2427  00BC  28C7               	goto	L2
  2428  00BD                     l2134:	
  2429                           
  2430                           ;Funciones.c: 77: else{ sprintf(*distancia2,"%u   \0", d1); }
  2431  00BD  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2432  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  2433  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  2434  00C0  00C9               	movwf	??_CalcularDistancia
  2435  00C1  0849               	movf	??_CalcularDistancia,w
  2436  00C2  00AC               	movwf	sprintf@f
  2437  00C3  084D               	movf	CalcularDistancia@d1+1,w
  2438  00C4  00AE               	movwf	?_sprintf+2
  2439  00C5  084C               	movf	CalcularDistancia@d1,w
  2440  00C6  00AD               	movwf	?_sprintf+1
  2441  00C7                     L2:	
  2442  00C7  0846               	movf	CalcularDistancia@distancia2,w
  2443  00C8  0084               	movwf	4
  2444  00C9  1383               	bcf	3,7	;select IRP bank0
  2445  00CA  0800               	movf	0,w
  2446  00CB  118A  2218  118A   	fcall	_sprintf
  2447                           
  2448                           ;Funciones.c: 79: if(d2 == 0){ sprintf(*distancia3,"NOPE\0"); }
  2449  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  2450  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  2451  00D0  084E               	movf	CalcularDistancia@d2,w
  2452  00D1  044F               	iorwf	CalcularDistancia@d2+1,w
  2453  00D2  1D03               	btfss	3,2
  2454  00D3  28D6               	goto	l2140
  2455  00D4  3030               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2456  00D5  28E0               	goto	L6
  2457  00D6                     l2140:	
  2458                           
  2459                           ;Funciones.c: 80: else if(d2 > 400){ sprintf(*distancia3,"OUT\0"); }
  2460  00D6  3001               	movlw	1
  2461  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  2462  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  2463  00D9  024F               	subwf	CalcularDistancia@d2+1,w
  2464  00DA  3091               	movlw	145
  2465  00DB  1903               	skipnz
  2466  00DC  024E               	subwf	CalcularDistancia@d2,w
  2467  00DD  1C03               	skipc
  2468  00DE  28E4               	goto	l2144
  2469  00DF  3036               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2470  00E0                     L6:	
  2471  00E0  00C9               	movwf	??_CalcularDistancia
  2472  00E1  0849               	movf	??_CalcularDistancia,w
  2473  00E2  00AC               	movwf	sprintf@f
  2474  00E3  28EE               	goto	L3
  2475  00E4                     l2144:	
  2476                           
  2477                           ;Funciones.c: 81: else{ sprintf(*distancia3,"%u   \0", d2); }
  2478  00E4  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2479  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  2480  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  2481  00E7  00C9               	movwf	??_CalcularDistancia
  2482  00E8  0849               	movf	??_CalcularDistancia,w
  2483  00E9  00AC               	movwf	sprintf@f
  2484  00EA  084F               	movf	CalcularDistancia@d2+1,w
  2485  00EB  00AE               	movwf	?_sprintf+2
  2486  00EC  084E               	movf	CalcularDistancia@d2,w
  2487  00ED  00AD               	movwf	?_sprintf+1
  2488  00EE                     L3:	
  2489  00EE  0847               	movf	CalcularDistancia@distancia3,w
  2490  00EF  0084               	movwf	4
  2491  00F0  1383               	bcf	3,7	;select IRP bank0
  2492  00F1  0800               	movf	0,w
  2493  00F2  118A  2218  118A   	fcall	_sprintf
  2494                           
  2495                           ;Funciones.c: 83: if(d3 == 0){ sprintf(*distancia4,"NOPE\0"); }
  2496  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  2497  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  2498  00F7  0850               	movf	CalcularDistancia@d3,w
  2499  00F8  0451               	iorwf	CalcularDistancia@d3+1,w
  2500  00F9  1D03               	btfss	3,2
  2501  00FA  2906               	goto	l2150
  2502  00FB  3030               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2503  00FC  00C9               	movwf	??_CalcularDistancia
  2504  00FD  0849               	movf	??_CalcularDistancia,w
  2505  00FE  00AC               	movwf	sprintf@f
  2506  00FF  0848               	movf	CalcularDistancia@distancia4,w
  2507  0100  0084               	movwf	4
  2508  0101  1383               	bcf	3,7	;select IRP bank0
  2509  0102  0800               	movf	0,w
  2510  0103  118A  2218         	fcall	_sprintf
  2511  0105  0008               	return
  2512  0106                     l2150:	
  2513                           
  2514                           ;Funciones.c: 84: else if(d3 > 400){ sprintf(*distancia4,"OUT\0"); }
  2515  0106  3001               	movlw	1
  2516  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0108  1303               	bcf	3,6	;RP1=0, select bank0
  2518  0109  0251               	subwf	CalcularDistancia@d3+1,w
  2519  010A  3091               	movlw	145
  2520  010B  1903               	skipnz
  2521  010C  0250               	subwf	CalcularDistancia@d3,w
  2522  010D  1C03               	skipc
  2523  010E  291A               	goto	l2154
  2524  010F  3036               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2525  0110  00C9               	movwf	??_CalcularDistancia
  2526  0111  0849               	movf	??_CalcularDistancia,w
  2527  0112  00AC               	movwf	sprintf@f
  2528  0113  0848               	movf	CalcularDistancia@distancia4,w
  2529  0114  0084               	movwf	4
  2530  0115  1383               	bcf	3,7	;select IRP bank0
  2531  0116  0800               	movf	0,w
  2532  0117  118A  2218         	fcall	_sprintf
  2533  0119  0008               	return
  2534  011A                     l2154:	
  2535                           
  2536                           ;Funciones.c: 85: else{ sprintf(*distancia4,"%u   \0", d3); }
  2537  011A  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2538  011B  1283               	bcf	3,5	;RP0=0, select bank0
  2539  011C  1303               	bcf	3,6	;RP1=0, select bank0
  2540  011D  00C9               	movwf	??_CalcularDistancia
  2541  011E  0849               	movf	??_CalcularDistancia,w
  2542  011F  00AC               	movwf	sprintf@f
  2543  0120  0851               	movf	CalcularDistancia@d3+1,w
  2544  0121  00AE               	movwf	?_sprintf+2
  2545  0122  0850               	movf	CalcularDistancia@d3,w
  2546  0123  00AD               	movwf	?_sprintf+1
  2547  0124  0848               	movf	CalcularDistancia@distancia4,w
  2548  0125  0084               	movwf	4
  2549  0126  1383               	bcf	3,7	;select IRP bank0
  2550  0127  0800               	movf	0,w
  2551  0128  118A  2218         	fcall	_sprintf
  2552  012A  0008               	return
  2553  012B                     __end_of_CalcularDistancia:	
  2554                           
  2555                           	psect	text10
  2556  0218                     __ptext10:	
  2557 ;; *************** function _sprintf *****************
  2558 ;; Defined at:
  2559 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  sp              1    wreg     PTR unsigned char 
  2562 ;;		 -> dist4(8), dist3(8), dist2(8), dist1(8), 
  2563 ;;		 -> PrintDistancias@dist(40), 
  2564 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  2565 ;;		 -> STR_13(19), STR_12(7), STR_11(5), STR_10(6), 
  2566 ;;		 -> STR_9(7), STR_8(5), STR_7(6), STR_6(7), 
  2567 ;;		 -> STR_5(5), STR_4(6), STR_3(7), STR_2(5), 
  2568 ;;		 -> STR_1(6), 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  sp              1   28[BANK0 ] PTR unsigned char 
  2571 ;;		 -> dist4(8), dist3(8), dist2(8), dist1(8), 
  2572 ;;		 -> PrintDistancias@dist(40), 
  2573 ;;  tmpval          4    0        struct .
  2574 ;;  cp              2   25[BANK0 ] PTR const unsigned char 
  2575 ;;		 -> STR_14(7), dist4(8), dist3(8), dist2(8), 
  2576 ;;		 -> dist1(8), 
  2577 ;;  val             2   21[BANK0 ] unsigned int 
  2578 ;;  len             2    0        unsigned int 
  2579 ;;  c               1   27[BANK0 ] char 
  2580 ;;  ap              1   24[BANK0 ] PTR void [1]
  2581 ;;		 -> ?_sprintf(2), 
  2582 ;;  prec            1   23[BANK0 ] char 
  2583 ;;  flag            1   20[BANK0 ] unsigned char 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2   12[BANK0 ] int 
  2586 ;; Registers used:
  2587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2593 ;;      Params:         0       5       0       0
  2594 ;;      Locals:         0       9       0       0
  2595 ;;      Temps:          0       3       0       0
  2596 ;;      Totals:         0      17       0       0
  2597 ;;Total ram usage:       17 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; Hardware stack levels required when called:    2
  2600 ;; This function calls:
  2601 ;;		___lwdiv
  2602 ;;		___lwmod
  2603 ;; This function is called by:
  2604 ;;		_CalcularDistancia
  2605 ;;		_PrintDistancias
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           
  2610                           ;psect for function _sprintf
  2611  0218                     _sprintf:	
  2612                           
  2613                           ;incstack = 0
  2614                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2615                           ;sprintf@sp stored from wreg
  2616  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2617  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2618  021A  00BC               	movwf	sprintf@sp
  2619                           
  2620                           ;doprnt.c: 494: va_list ap;
  2621                           ;doprnt.c: 499: signed char c;
  2622                           ;doprnt.c: 506: signed char prec;
  2623                           ;doprnt.c: 508: unsigned char flag;
  2624                           ;doprnt.c: 523: union {
  2625                           ;doprnt.c: 524: unsigned long vd;
  2626                           ;doprnt.c: 525: double integ;
  2627                           ;doprnt.c: 526: } tmpval;
  2628                           ;doprnt.c: 528: unsigned int val;
  2629                           ;doprnt.c: 529: unsigned len;
  2630                           ;doprnt.c: 530: const char * cp;
  2631                           ;doprnt.c: 533: *ap = __va_start();
  2632  021B  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2633  021C  00B1               	movwf	??_sprintf
  2634  021D  0831               	movf	??_sprintf,w
  2635  021E  00B8               	movwf	sprintf@ap
  2636  021F                     l2038:	
  2637                           ;doprnt.c: 536: while(c = *f++) {
  2638                           
  2639  021F  3001               	movlw	1
  2640  0220  07AC               	addwf	sprintf@f,f
  2641  0221  30FF               	movlw	-1
  2642  0222  072C               	addwf	sprintf@f,w
  2643  0223  0084               	movwf	4
  2644  0224  118A  250A  118A   	fcall	stringdir
  2645  0227  00B1               	movwf	??_sprintf
  2646  0228  0831               	movf	??_sprintf,w
  2647  0229  00BB               	movwf	sprintf@c
  2648  022A  083B               	movf	sprintf@c,w
  2649  022B  1903               	btfsc	3,2
  2650  022C  2AF8               	goto	l2040
  2651                           
  2652                           ;doprnt.c: 538: if(c != '%')
  2653  022D  3025               	movlw	37
  2654  022E  063B               	xorwf	sprintf@c,w
  2655  022F  1903               	btfsc	3,2
  2656  0230  2A3D               	goto	l1988
  2657                           
  2658                           ;doprnt.c: 540: {
  2659                           ;doprnt.c: 541: ((*sp++ = (c)));
  2660  0231  083B               	movf	sprintf@c,w
  2661  0232  00B1               	movwf	??_sprintf
  2662  0233  083C               	movf	sprintf@sp,w
  2663  0234  0084               	movwf	4
  2664  0235  0831               	movf	??_sprintf,w
  2665  0236  1383               	bcf	3,7	;select IRP bank0
  2666  0237  0080               	movwf	0
  2667  0238  3001               	movlw	1
  2668  0239  00B1               	movwf	??_sprintf
  2669  023A  0831               	movf	??_sprintf,w
  2670  023B  07BC               	addwf	sprintf@sp,f
  2671                           
  2672                           ;doprnt.c: 542: continue;
  2673  023C  2A1F               	goto	l2038
  2674  023D                     l1988:	
  2675                           
  2676                           ;doprnt.c: 543: }
  2677                           ;doprnt.c: 548: flag = 0;
  2678  023D  01B4               	clrf	sprintf@flag
  2679                           
  2680                           ;doprnt.c: 635: switch(c = *f++) {
  2681  023E  2A77               	goto	l2010
  2682  023F                     l1990:	
  2683                           ;doprnt.c: 728: case 's':
  2684                           
  2685                           ;doprnt.c: 638: goto alldone;
  2686                           
  2687                           ;doprnt.c: 637: case 0:
  2688                           
  2689                           
  2690                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  2691  023F  0838               	movf	sprintf@ap,w
  2692  0240  0084               	movwf	4
  2693  0241  1383               	bcf	3,7	;select IRP bank0
  2694  0242  0800               	movf	0,w
  2695  0243  00B9               	movwf	sprintf@cp
  2696  0244  3000               	movlw	0
  2697  0245  00BA               	movwf	sprintf@cp+1
  2698  0246  3001               	movlw	1
  2699  0247  00B1               	movwf	??_sprintf
  2700  0248  0831               	movf	??_sprintf,w
  2701  0249  07B8               	addwf	sprintf@ap,f
  2702                           
  2703                           ;doprnt.c: 740: if(!cp)
  2704  024A  0839               	movf	sprintf@cp,w
  2705  024B  043A               	iorwf	sprintf@cp+1,w
  2706  024C  1D03               	btfss	3,2
  2707  024D  2A52               	goto	l2004
  2708                           
  2709                           ;doprnt.c: 741: cp = "(null)";
  2710  024E  3022               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2711  024F  00B9               	movwf	sprintf@cp
  2712  0250  3080               	movlw	128
  2713  0251  00BA               	movwf	sprintf@cp+1
  2714  0252                     l2004:	
  2715                           ;doprnt.c: 777: while(*cp)
  2716                           
  2717  0252  083A               	movf	sprintf@cp+1,w
  2718  0253  00FF               	movwf	127
  2719  0254  0839               	movf	sprintf@cp,w
  2720  0255  0084               	movwf	4
  2721  0256  118A  2500  118A   	fcall	stringtab
  2722  0259  3A00               	xorlw	0
  2723  025A  1903               	btfsc	3,2
  2724  025B  2A1F               	goto	l2038
  2725                           
  2726                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
  2727  025C  083A               	movf	sprintf@cp+1,w
  2728  025D  00FF               	movwf	127
  2729  025E  0839               	movf	sprintf@cp,w
  2730  025F  0084               	movwf	4
  2731  0260  118A  2500  118A   	fcall	stringtab
  2732  0263  00B1               	movwf	??_sprintf
  2733  0264  083C               	movf	sprintf@sp,w
  2734  0265  0084               	movwf	4
  2735  0266  0831               	movf	??_sprintf,w
  2736  0267  1383               	bcf	3,7	;select IRP bank0
  2737  0268  0080               	movwf	0
  2738  0269  3001               	movlw	1
  2739  026A  07B9               	addwf	sprintf@cp,f
  2740  026B  1803               	skipnc
  2741  026C  0ABA               	incf	sprintf@cp+1,f
  2742  026D  3001               	movlw	1
  2743  026E  00B1               	movwf	??_sprintf
  2744  026F  0831               	movf	??_sprintf,w
  2745  0270  07BC               	addwf	sprintf@sp,f
  2746  0271  2A52               	goto	l2004
  2747  0272                     l2006:	
  2748                           ;doprnt.c: 817: case 'u':
  2749                           
  2750                           ;doprnt.c: 813: continue;
  2751                           
  2752                           ;doprnt.c: 802: default:
  2753                           
  2754                           ;doprnt.c: 779: continue;
  2755                           
  2756                           
  2757                           ;doprnt.c: 818: flag |= 0xC0;
  2758  0272  30C0               	movlw	192
  2759  0273  00B1               	movwf	??_sprintf
  2760  0274  0831               	movf	??_sprintf,w
  2761  0275  04B4               	iorwf	sprintf@flag,f
  2762                           
  2763                           ;doprnt.c: 822: }
  2764                           
  2765                           ;doprnt.c: 819: break;
  2766  0276  2A8A               	goto	l2012
  2767  0277                     l2010:	
  2768  0277  3001               	movlw	1
  2769  0278  07AC               	addwf	sprintf@f,f
  2770  0279  30FF               	movlw	-1
  2771  027A  072C               	addwf	sprintf@f,w
  2772  027B  0084               	movwf	4
  2773  027C  118A  250A  118A   	fcall	stringdir
  2774  027F  00BB               	movwf	sprintf@c
  2775                           
  2776                           ; Switch size 1, requested type "space"
  2777                           ; Number of cases is 3, Range of values is 0 to 117
  2778                           ; switch strategies available:
  2779                           ; Name         Instructions Cycles
  2780                           ; simple_byte           10     6 (average)
  2781                           ; direct_byte          243     7 (fixed)
  2782                           ; jumptable            260     6 (fixed)
  2783                           ;	Chosen strategy is simple_byte
  2784  0280  3A00               	xorlw	0	; case 0
  2785  0281  1903               	skipnz
  2786  0282  2AF8               	goto	l2040
  2787  0283  3A73               	xorlw	115	; case 115
  2788  0284  1903               	skipnz
  2789  0285  2A3F               	goto	l1990
  2790  0286  3A06               	xorlw	6	; case 117
  2791  0287  1903               	skipnz
  2792  0288  2A72               	goto	l2006
  2793  0289  2A1F               	goto	l2038
  2794  028A                     l2012:	
  2795                           
  2796                           ;doprnt.c: 1273: {
  2797                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2798  028A  0838               	movf	sprintf@ap,w
  2799  028B  0084               	movwf	4
  2800  028C  1383               	bcf	3,7	;select IRP bank0
  2801  028D  0800               	movf	0,w
  2802  028E  00B5               	movwf	sprintf@val
  2803  028F  0A84               	incf	4,f
  2804  0290  0800               	movf	0,w
  2805  0291  00B6               	movwf	sprintf@val+1
  2806  0292  3002               	movlw	2
  2807  0293  00B1               	movwf	??_sprintf
  2808  0294  0831               	movf	??_sprintf,w
  2809  0295  07B8               	addwf	sprintf@ap,f
  2810                           
  2811                           ;doprnt.c: 1287: }
  2812                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2813  0296  01BB               	clrf	sprintf@c
  2814  0297  0ABB               	incf	sprintf@c,f
  2815  0298  3005               	movlw	5
  2816  0299  063B               	xorwf	sprintf@c,w
  2817  029A  1903               	btfsc	3,2
  2818  029B  2AB9               	goto	l2028
  2819  029C                     l2022:	
  2820                           
  2821                           ;doprnt.c: 1306: if(val < dpowers[c])
  2822  029C  083B               	movf	sprintf@c,w
  2823  029D  00B1               	movwf	??_sprintf
  2824  029E  0731               	addwf	??_sprintf,w
  2825  029F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2826  02A0  0084               	movwf	4
  2827  02A1  118A  250A  118A   	fcall	stringdir
  2828  02A4  00B2               	movwf	??_sprintf+1
  2829  02A5  118A  250A  118A   	fcall	stringdir
  2830  02A8  00B3               	movwf	??_sprintf+2
  2831  02A9  0833               	movf	??_sprintf+2,w
  2832  02AA  0236               	subwf	sprintf@val+1,w
  2833  02AB  1D03               	skipz
  2834  02AC  2AAF               	goto	u2075
  2835  02AD  0832               	movf	??_sprintf+1,w
  2836  02AE  0235               	subwf	sprintf@val,w
  2837  02AF                     u2075:	
  2838  02AF  1C03               	btfss	3,0
  2839  02B0  2AB9               	goto	l2028
  2840                           
  2841                           ;doprnt.c: 1307: break;
  2842  02B1  3001               	movlw	1
  2843  02B2  00B1               	movwf	??_sprintf
  2844  02B3  0831               	movf	??_sprintf,w
  2845  02B4  07BB               	addwf	sprintf@c,f
  2846  02B5  3005               	movlw	5
  2847  02B6  063B               	xorwf	sprintf@c,w
  2848  02B7  1D03               	btfss	3,2
  2849  02B8  2A9C               	goto	l2022
  2850  02B9                     l2028:	
  2851                           
  2852                           ;doprnt.c: 1422: {
  2853                           ;doprnt.c: 1469: }
  2854                           ;doprnt.c: 1472: prec = c;
  2855  02B9  083B               	movf	sprintf@c,w
  2856  02BA  00B1               	movwf	??_sprintf
  2857  02BB  0831               	movf	??_sprintf,w
  2858  02BC  00B7               	movwf	sprintf@prec
  2859  02BD                     l2036:	
  2860                           ;doprnt.c: 1474: while(prec--) {
  2861                           
  2862  02BD  30FF               	movlw	255
  2863  02BE  00B1               	movwf	??_sprintf
  2864  02BF  0831               	movf	??_sprintf,w
  2865  02C0  07B7               	addwf	sprintf@prec,f
  2866  02C1  0A37               	incf	sprintf@prec,w
  2867  02C2  1903               	btfsc	3,2
  2868  02C3  2A1F               	goto	l2038
  2869                           
  2870                           ;doprnt.c: 1478: {
  2871                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2872  02C4  300A               	movlw	10
  2873  02C5  00A7               	movwf	___lwmod@divisor
  2874  02C6  3000               	movlw	0
  2875  02C7  00A8               	movwf	___lwmod@divisor+1
  2876  02C8  0837               	movf	sprintf@prec,w
  2877  02C9  00B1               	movwf	??_sprintf
  2878  02CA  0731               	addwf	??_sprintf,w
  2879  02CB  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2880  02CC  0084               	movwf	4
  2881  02CD  118A  250A  118A   	fcall	stringdir
  2882  02D0  00A0               	movwf	___lwdiv@divisor
  2883  02D1  118A  250A  118A   	fcall	stringdir
  2884  02D4  00A1               	movwf	___lwdiv@divisor+1
  2885  02D5  0836               	movf	sprintf@val+1,w
  2886  02D6  00A3               	movwf	___lwdiv@dividend+1
  2887  02D7  0835               	movf	sprintf@val,w
  2888  02D8  00A2               	movwf	___lwdiv@dividend
  2889  02D9  118A  254A  118A   	fcall	___lwdiv
  2890  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2891  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2892  02DE  0821               	movf	?___lwdiv+1,w
  2893  02DF  00AA               	movwf	___lwmod@dividend+1
  2894  02E0  0820               	movf	?___lwdiv,w
  2895  02E1  00A9               	movwf	___lwmod@dividend
  2896  02E2  118A  2588  118A   	fcall	___lwmod
  2897  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2898  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2899  02E7  0827               	movf	?___lwmod,w
  2900  02E8  3E30               	addlw	48
  2901  02E9  00B2               	movwf	??_sprintf+1
  2902  02EA  0832               	movf	??_sprintf+1,w
  2903  02EB  00BB               	movwf	sprintf@c
  2904                           
  2905                           ;doprnt.c: 1523: }
  2906                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2907  02EC  083B               	movf	sprintf@c,w
  2908  02ED  00B1               	movwf	??_sprintf
  2909  02EE  083C               	movf	sprintf@sp,w
  2910  02EF  0084               	movwf	4
  2911  02F0  0831               	movf	??_sprintf,w
  2912  02F1  1383               	bcf	3,7	;select IRP bank0
  2913  02F2  0080               	movwf	0
  2914  02F3  3001               	movlw	1
  2915  02F4  00B1               	movwf	??_sprintf
  2916  02F5  0831               	movf	??_sprintf,w
  2917  02F6  07BC               	addwf	sprintf@sp,f
  2918  02F7  2ABD               	goto	l2036
  2919  02F8                     l2040:	
  2920                           ;doprnt.c: 1525: }
  2921                           ;doprnt.c: 1533: }
  2922                           ;doprnt.c: 1535: alldone:
  2923                           
  2924                           
  2925                           ;doprnt.c: 1538: *sp = 0;
  2926  02F8  083C               	movf	sprintf@sp,w
  2927  02F9  0084               	movwf	4
  2928  02FA  1383               	bcf	3,7	;select IRP bank0
  2929  02FB  0180               	clrf	0
  2930  02FC  0008               	return
  2931  02FD                     __end_of_sprintf:	
  2932                           ;doprnt.c: 1540: return 0;
  2933                           ;	Return value of _sprintf is never used
  2934                           
  2935                           
  2936                           	psect	text11
  2937  0588                     __ptext11:	
  2938 ;; *************** function ___lwmod *****************
  2939 ;; Defined at:
  2940 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  divisor         2    7[BANK0 ] unsigned int 
  2943 ;;  dividend        2    9[BANK0 ] unsigned int 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  counter         1   11[BANK0 ] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  2    7[BANK0 ] unsigned int 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2955 ;;      Params:         0       4       0       0
  2956 ;;      Locals:         0       1       0       0
  2957 ;;      Temps:          1       0       0       0
  2958 ;;      Totals:         1       5       0       0
  2959 ;;Total ram usage:        6 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    1
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_sprintf
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           
  2970                           ;psect for function ___lwmod
  2971  0588                     ___lwmod:	
  2972                           
  2973                           ;incstack = 0
  2974                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2975  0588  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0589  1303               	bcf	3,6	;RP1=0, select bank0
  2977  058A  0827               	movf	___lwmod@divisor,w
  2978  058B  0428               	iorwf	___lwmod@divisor+1,w
  2979  058C  1903               	btfsc	3,2
  2980  058D  2DB7               	goto	l1442
  2981  058E  01AB               	clrf	___lwmod@counter
  2982  058F  0AAB               	incf	___lwmod@counter,f
  2983  0590                     l1432:	
  2984  0590  1BA8               	btfsc	___lwmod@divisor+1,7
  2985  0591  2D9E               	goto	l1434
  2986  0592  3001               	movlw	1
  2987  0593                     u1195:	
  2988  0593  1003               	clrc
  2989  0594  0DA7               	rlf	___lwmod@divisor,f
  2990  0595  0DA8               	rlf	___lwmod@divisor+1,f
  2991  0596  3EFF               	addlw	-1
  2992  0597  1D03               	skipz
  2993  0598  2D93               	goto	u1195
  2994  0599  3001               	movlw	1
  2995  059A  00F5               	movwf	??___lwmod
  2996  059B  0875               	movf	??___lwmod,w
  2997  059C  07AB               	addwf	___lwmod@counter,f
  2998  059D  2D90               	goto	l1432
  2999  059E                     l1434:	
  3000  059E  0828               	movf	___lwmod@divisor+1,w
  3001  059F  022A               	subwf	___lwmod@dividend+1,w
  3002  05A0  1D03               	skipz
  3003  05A1  2DA4               	goto	u1215
  3004  05A2  0827               	movf	___lwmod@divisor,w
  3005  05A3  0229               	subwf	___lwmod@dividend,w
  3006  05A4                     u1215:	
  3007  05A4  1C03               	skipc
  3008  05A5  2DAC               	goto	l1438
  3009  05A6  0827               	movf	___lwmod@divisor,w
  3010  05A7  02A9               	subwf	___lwmod@dividend,f
  3011  05A8  0828               	movf	___lwmod@divisor+1,w
  3012  05A9  1C03               	skipc
  3013  05AA  03AA               	decf	___lwmod@dividend+1,f
  3014  05AB  02AA               	subwf	___lwmod@dividend+1,f
  3015  05AC                     l1438:	
  3016  05AC  3001               	movlw	1
  3017  05AD                     u1225:	
  3018  05AD  1003               	clrc
  3019  05AE  0CA8               	rrf	___lwmod@divisor+1,f
  3020  05AF  0CA7               	rrf	___lwmod@divisor,f
  3021  05B0  3EFF               	addlw	-1
  3022  05B1  1D03               	skipz
  3023  05B2  2DAD               	goto	u1225
  3024  05B3  3001               	movlw	1
  3025  05B4  02AB               	subwf	___lwmod@counter,f
  3026  05B5  1D03               	btfss	3,2
  3027  05B6  2D9E               	goto	l1434
  3028  05B7                     l1442:	
  3029  05B7  082A               	movf	___lwmod@dividend+1,w
  3030  05B8  00A8               	movwf	?___lwmod+1
  3031  05B9  0829               	movf	___lwmod@dividend,w
  3032  05BA  00A7               	movwf	?___lwmod
  3033  05BB  0008               	return
  3034  05BC                     __end_of___lwmod:	
  3035                           
  3036                           	psect	text12
  3037  054A                     __ptext12:	
  3038 ;; *************** function ___lwdiv *****************
  3039 ;; Defined at:
  3040 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  divisor         2    0[BANK0 ] unsigned int 
  3043 ;;  dividend        2    2[BANK0 ] unsigned int 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  quotient        2    5[BANK0 ] unsigned int 
  3046 ;;  counter         1    4[BANK0 ] unsigned char 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  2    0[BANK0 ] unsigned int 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3056 ;;      Params:         0       4       0       0
  3057 ;;      Locals:         0       3       0       0
  3058 ;;      Temps:          1       0       0       0
  3059 ;;      Totals:         1       7       0       0
  3060 ;;Total ram usage:        8 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    1
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_CalcularDistancia
  3067 ;;		_sprintf
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           
  3072                           ;psect for function ___lwdiv
  3073  054A                     ___lwdiv:	
  3074                           
  3075                           ;incstack = 0
  3076                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3077  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3078  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3079  054C  01A5               	clrf	___lwdiv@quotient
  3080  054D  01A6               	clrf	___lwdiv@quotient+1
  3081  054E  0820               	movf	___lwdiv@divisor,w
  3082  054F  0421               	iorwf	___lwdiv@divisor+1,w
  3083  0550  1903               	btfsc	3,2
  3084  0551  2D83               	goto	l1968
  3085  0552  01A4               	clrf	___lwdiv@counter
  3086  0553  0AA4               	incf	___lwdiv@counter,f
  3087  0554                     l1956:	
  3088  0554  1BA1               	btfsc	___lwdiv@divisor+1,7
  3089  0555  2D62               	goto	l1958
  3090  0556  3001               	movlw	1
  3091  0557                     u1965:	
  3092  0557  1003               	clrc
  3093  0558  0DA0               	rlf	___lwdiv@divisor,f
  3094  0559  0DA1               	rlf	___lwdiv@divisor+1,f
  3095  055A  3EFF               	addlw	-1
  3096  055B  1D03               	skipz
  3097  055C  2D57               	goto	u1965
  3098  055D  3001               	movlw	1
  3099  055E  00F4               	movwf	??___lwdiv
  3100  055F  0874               	movf	??___lwdiv,w
  3101  0560  07A4               	addwf	___lwdiv@counter,f
  3102  0561  2D54               	goto	l1956
  3103  0562                     l1958:	
  3104  0562  3001               	movlw	1
  3105  0563                     u1985:	
  3106  0563  1003               	clrc
  3107  0564  0DA5               	rlf	___lwdiv@quotient,f
  3108  0565  0DA6               	rlf	___lwdiv@quotient+1,f
  3109  0566  3EFF               	addlw	-1
  3110  0567  1D03               	skipz
  3111  0568  2D63               	goto	u1985
  3112  0569  0821               	movf	___lwdiv@divisor+1,w
  3113  056A  0223               	subwf	___lwdiv@dividend+1,w
  3114  056B  1D03               	skipz
  3115  056C  2D6F               	goto	u1995
  3116  056D  0820               	movf	___lwdiv@divisor,w
  3117  056E  0222               	subwf	___lwdiv@dividend,w
  3118  056F                     u1995:	
  3119  056F  1C03               	skipc
  3120  0570  2D78               	goto	l1964
  3121  0571  0820               	movf	___lwdiv@divisor,w
  3122  0572  02A2               	subwf	___lwdiv@dividend,f
  3123  0573  0821               	movf	___lwdiv@divisor+1,w
  3124  0574  1C03               	skipc
  3125  0575  03A3               	decf	___lwdiv@dividend+1,f
  3126  0576  02A3               	subwf	___lwdiv@dividend+1,f
  3127  0577  1425               	bsf	___lwdiv@quotient,0
  3128  0578                     l1964:	
  3129  0578  3001               	movlw	1
  3130  0579                     u2005:	
  3131  0579  1003               	clrc
  3132  057A  0CA1               	rrf	___lwdiv@divisor+1,f
  3133  057B  0CA0               	rrf	___lwdiv@divisor,f
  3134  057C  3EFF               	addlw	-1
  3135  057D  1D03               	skipz
  3136  057E  2D79               	goto	u2005
  3137  057F  3001               	movlw	1
  3138  0580  02A4               	subwf	___lwdiv@counter,f
  3139  0581  1D03               	btfss	3,2
  3140  0582  2D62               	goto	l1958
  3141  0583                     l1968:	
  3142  0583  0826               	movf	___lwdiv@quotient+1,w
  3143  0584  00A1               	movwf	?___lwdiv+1
  3144  0585  0825               	movf	___lwdiv@quotient,w
  3145  0586  00A0               	movwf	?___lwdiv
  3146  0587  0008               	return
  3147  0588                     __end_of___lwdiv:	
  3148                           
  3149                           	psect	text13
  3150  038C                     __ptext13:	
  3151 ;; *************** function _echo *****************
  3152 ;; Defined at:
  3153 ;;		line 71 in file "main.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;		None
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3167 ;;      Params:         0       0       0       0
  3168 ;;      Locals:         0       0       0       0
  3169 ;;      Temps:          4       0       0       0
  3170 ;;      Totals:         4       0       0       0
  3171 ;;Total ram usage:        4 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		Interrupt level 1
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           
  3181                           ;psect for function _echo
  3182  038C                     _echo:	
  3183                           
  3184                           ;main.c: 73: if(RBIF == 1)
  3185  038C  1C0B               	btfss	11,0	;volatile
  3186  038D  2C09               	goto	i1l334
  3187                           
  3188                           ;main.c: 74: {
  3189                           ;main.c: 75: RBIE = 0;
  3190  038E  118B               	bcf	11,3	;volatile
  3191                           
  3192                           ;main.c: 81: if ( (RB4 == 1) && (rbon == 0) )
  3193  038F  1E06               	btfss	6,4	;volatile
  3194  0390  2B99               	goto	i1l319
  3195  0391  0876               	movf	_rbon,w
  3196  0392  0477               	iorwf	_rbon+1,w
  3197  0393  1D03               	btfss	3,2
  3198  0394  2B99               	goto	i1l319
  3199                           
  3200                           ;main.c: 82: {
  3201                           ;main.c: 83: TMR1 = 0;
  3202  0395  018E               	clrf	14	;volatile
  3203  0396  018F               	clrf	15	;volatile
  3204                           
  3205                           ;main.c: 84: rbon = 4;
  3206  0397  3004               	movlw	4
  3207  0398  2BEC               	goto	L7
  3208  0399                     i1l319:	
  3209                           ;main.c: 86: }
  3210                           
  3211                           ;main.c: 85: TMR1ON = 1;
  3212                           
  3213                           
  3214                           ;main.c: 88: else if( (RB4 == 0) && (rbon == 4) )
  3215  0399  1A06               	btfsc	6,4	;volatile
  3216  039A  2BAB               	goto	i1l321
  3217  039B  3004               	movlw	4
  3218  039C  0676               	xorwf	_rbon,w
  3219  039D  0477               	iorwf	_rbon+1,w
  3220  039E  1D03               	btfss	3,2
  3221  039F  2BAB               	goto	i1l321
  3222                           
  3223                           ;main.c: 89: {
  3224                           ;main.c: 90: t4 = TMR1;
  3225  03A0  080F               	movf	15,w	;volatile
  3226  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  3227  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  3228  03A3  00A1               	movwf	(_t4+1)^(0+128)
  3229  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  3230  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  3231  03A6  080E               	movf	14,w	;volatile
  3232  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  3233  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  3234  03A9  00A0               	movwf	_t4^(0+128)
  3235  03AA  2C02               	goto	L8
  3236  03AB                     i1l321:	
  3237                           ;main.c: 93: }
  3238                           
  3239                           ;main.c: 92: TMR1ON = 0;
  3240                           
  3241                           ;main.c: 91: rbon = 0;
  3242                           
  3243                           
  3244                           ;main.c: 95: else if ( (RB5 == 1) && (rbon == 0) )
  3245  03AB  1E86               	btfss	6,5	;volatile
  3246  03AC  2BB5               	goto	i1l323
  3247  03AD  0876               	movf	_rbon,w
  3248  03AE  0477               	iorwf	_rbon+1,w
  3249  03AF  1D03               	btfss	3,2
  3250  03B0  2BB5               	goto	i1l323
  3251                           
  3252                           ;main.c: 96: {
  3253                           ;main.c: 97: TMR1 = 0;
  3254  03B1  018E               	clrf	14	;volatile
  3255  03B2  018F               	clrf	15	;volatile
  3256                           
  3257                           ;main.c: 98: rbon = 5;
  3258  03B3  3005               	movlw	5
  3259  03B4  2BEC               	goto	L7
  3260  03B5                     i1l323:	
  3261                           ;main.c: 100: }
  3262                           
  3263                           ;main.c: 99: TMR1ON = 1;
  3264                           
  3265                           
  3266                           ;main.c: 102: else if( (RB5 == 0) && (rbon == 5) )
  3267  03B5  1A86               	btfsc	6,5	;volatile
  3268  03B6  2BC7               	goto	i1l325
  3269  03B7  3005               	movlw	5
  3270  03B8  0676               	xorwf	_rbon,w
  3271  03B9  0477               	iorwf	_rbon+1,w
  3272  03BA  1D03               	btfss	3,2
  3273  03BB  2BC7               	goto	i1l325
  3274                           
  3275                           ;main.c: 103: {
  3276                           ;main.c: 104: t5 = TMR1;
  3277  03BC  080F               	movf	15,w	;volatile
  3278  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  3279  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  3280  03BF  00A3               	movwf	(_t5+1)^(0+128)
  3281  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  3282  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  3283  03C2  080E               	movf	14,w	;volatile
  3284  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  3285  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  3286  03C5  00A2               	movwf	_t5^(0+128)
  3287  03C6  2C02               	goto	L8
  3288  03C7                     i1l325:	
  3289                           ;main.c: 107: }
  3290                           
  3291                           ;main.c: 106: TMR1ON = 0;
  3292                           
  3293                           ;main.c: 105: rbon = 0;
  3294                           
  3295                           
  3296                           ;main.c: 109: else if ( (RB6 == 1) && (rbon == 0) )
  3297  03C7  1F06               	btfss	6,6	;volatile
  3298  03C8  2BD1               	goto	i1l327
  3299  03C9  0876               	movf	_rbon,w
  3300  03CA  0477               	iorwf	_rbon+1,w
  3301  03CB  1D03               	btfss	3,2
  3302  03CC  2BD1               	goto	i1l327
  3303                           
  3304                           ;main.c: 110: {
  3305                           ;main.c: 111: TMR1 = 0;
  3306  03CD  018E               	clrf	14	;volatile
  3307  03CE  018F               	clrf	15	;volatile
  3308                           
  3309                           ;main.c: 112: rbon = 6;
  3310  03CF  3006               	movlw	6
  3311  03D0  2BEC               	goto	L7
  3312  03D1                     i1l327:	
  3313                           ;main.c: 114: }
  3314                           
  3315                           ;main.c: 113: TMR1ON = 1;
  3316                           
  3317                           
  3318                           ;main.c: 116: else if( (RB6 == 0) && (rbon == 6) )
  3319  03D1  1B06               	btfsc	6,6	;volatile
  3320  03D2  2BE3               	goto	i1l329
  3321  03D3  3006               	movlw	6
  3322  03D4  0676               	xorwf	_rbon,w
  3323  03D5  0477               	iorwf	_rbon+1,w
  3324  03D6  1D03               	btfss	3,2
  3325  03D7  2BE3               	goto	i1l329
  3326                           
  3327                           ;main.c: 117: {
  3328                           ;main.c: 118: t6 = TMR1;
  3329  03D8  080F               	movf	15,w	;volatile
  3330  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  3331  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  3332  03DB  00A5               	movwf	(_t6+1)^(0+128)
  3333  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  3334  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  3335  03DE  080E               	movf	14,w	;volatile
  3336  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  3337  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  3338  03E1  00A4               	movwf	_t6^(0+128)
  3339  03E2  2C02               	goto	L8
  3340  03E3                     i1l329:	
  3341                           ;main.c: 121: }
  3342                           
  3343                           ;main.c: 120: TMR1ON = 0;
  3344                           
  3345                           ;main.c: 119: rbon = 0;
  3346                           
  3347                           
  3348                           ;main.c: 123: else if ( (RB7 == 1) && (rbon == 0) )
  3349  03E3  1F86               	btfss	6,7	;volatile
  3350  03E4  2BF1               	goto	i1l331
  3351  03E5  0876               	movf	_rbon,w
  3352  03E6  0477               	iorwf	_rbon+1,w
  3353  03E7  1D03               	btfss	3,2
  3354  03E8  2BF1               	goto	i1l331
  3355                           
  3356                           ;main.c: 124: {
  3357                           ;main.c: 125: TMR1 = 0;
  3358  03E9  018E               	clrf	14	;volatile
  3359  03EA  018F               	clrf	15	;volatile
  3360                           
  3361                           ;main.c: 126: rbon = 7;
  3362  03EB  3007               	movlw	7
  3363  03EC                     L7:	
  3364  03EC  00F6               	movwf	_rbon
  3365  03ED  3000               	movlw	0
  3366  03EE  00F7               	movwf	_rbon+1
  3367                           
  3368                           ;main.c: 127: TMR1ON = 1;
  3369  03EF  1410               	bsf	16,0	;volatile
  3370                           
  3371                           ;main.c: 128: }
  3372  03F0  2C07               	goto	i1l1938
  3373  03F1                     i1l331:	
  3374                           
  3375                           ;main.c: 130: else if( (RB7 == 0) && (rbon == 7) )
  3376  03F1  1B86               	btfsc	6,7	;volatile
  3377  03F2  2C07               	goto	i1l1938
  3378  03F3  3007               	movlw	7
  3379  03F4  0676               	xorwf	_rbon,w
  3380  03F5  0477               	iorwf	_rbon+1,w
  3381  03F6  1D03               	btfss	3,2
  3382  03F7  2C07               	goto	i1l1938
  3383                           
  3384                           ;main.c: 131: {
  3385                           ;main.c: 132: t7 = TMR1;
  3386  03F8  080F               	movf	15,w	;volatile
  3387  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  3388  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  3389  03FB  00A7               	movwf	(_t7+1)^(0+128)
  3390  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  3391  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  3392  03FE  080E               	movf	14,w	;volatile
  3393  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  3394  0400  1303               	bcf	3,6	;RP1=0, select bank1
  3395  0401  00A6               	movwf	_t7^(0+128)
  3396  0402                     L8:	
  3397                           
  3398                           ;main.c: 133: rbon = 0;
  3399  0402  01F6               	clrf	_rbon
  3400  0403  01F7               	clrf	_rbon+1
  3401                           
  3402                           ;main.c: 134: TMR1ON = 0;
  3403  0404  1283               	bcf	3,5	;RP0=0, select bank0
  3404  0405  1303               	bcf	3,6	;RP1=0, select bank0
  3405  0406  1010               	bcf	16,0	;volatile
  3406  0407                     i1l1938:	
  3407                           
  3408                           ;main.c: 135: }
  3409                           ;main.c: 137: RBIF = 0;
  3410  0407  100B               	bcf	11,0	;volatile
  3411                           
  3412                           ;main.c: 138: RBIE = 1;
  3413  0408  158B               	bsf	11,3	;volatile
  3414  0409                     i1l334:	
  3415  0409  0873               	movf	??_echo+3,w
  3416  040A  00FF               	movwf	127
  3417  040B  0872               	movf	??_echo+2,w
  3418  040C  008A               	movwf	10
  3419  040D  0871               	movf	??_echo+1,w
  3420  040E  0084               	movwf	4
  3421  040F  0E70               	swapf	??_echo^(0+-128),w
  3422  0410  0083               	movwf	3
  3423  0411  0EFE               	swapf	126,f
  3424  0412  0E7E               	swapf	126,w
  3425  0413  0009               	retfie
  3426  0414                     __end_of_echo:	
  3427  007E                     btemp	set	126	;btemp
  3428  007E                     wtemp	set	126
  3429  007E                     wtemp0	set	126
  3430  0080                     wtemp1	set	128
  3431  0082                     wtemp2	set	130
  3432  0084                     wtemp3	set	132
  3433  0086                     wtemp4	set	134
  3434  0088                     wtemp5	set	136
  3435  007F                     wtemp6	set	127
  3436  007E                     ttemp	set	126
  3437  007E                     ttemp0	set	126
  3438  0081                     ttemp1	set	129
  3439  0084                     ttemp2	set	132
  3440  0087                     ttemp3	set	135
  3441  007F                     ttemp4	set	127
  3442  007E                     ltemp	set	126
  3443  007E                     ltemp0	set	126
  3444  0082                     ltemp1	set	130
  3445  0086                     ltemp2	set	134
  3446  0080                     ltemp3	set	128
  3447                           
  3448                           	psect	intentry
  3449  0004                     __pintentry:	
  3450                           ;incstack = 0
  3451                           ; Regs used in _echo: [wreg+status,2+status,0]
  3452                           
  3453  0004                     interrupt_function:	
  3454  007E                     saved_w	set	btemp
  3455  0004  00FE               	movwf	btemp
  3456  0005  0E03               	swapf	3,w
  3457  0006  00F0               	movwf	??_echo
  3458  0007  0804               	movf	4,w
  3459  0008  00F1               	movwf	??_echo+1
  3460  0009  080A               	movf	10,w
  3461  000A  00F2               	movwf	??_echo+2
  3462  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3463  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3464  000D  087F               	movf	btemp+1,w
  3465  000E  00F3               	movwf	??_echo+3
  3466  000F  118A  2B8C         	ljmp	_echo


Data Sizes:
    Strings     44
    Constant    14
    Data        6
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     78      80
    BANK1            80      4      48
    BANK2            80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_13(CODE[19]), STR_12(CODE[7]), STR_11(CODE[5]), STR_10(CODE[6]), 
		 -> STR_9(CODE[7]), STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[7]), 
		 -> STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[7]), STR_2(CODE[5]), 
		 -> STR_1(CODE[6]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_14(CODE[7]), dist4(BANK1[8]), dist3(BANK1[8]), dist2(BANK1[8]), 
		 -> dist1(BANK1[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> dist4(BANK1[8]), dist3(BANK1[8]), dist2(BANK1[8]), dist1(BANK1[8]), 
		 -> PrintDistancias@dist(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    distancia4	PTR unsigned char  size(1) Largest target is 8
		 -> dist4(BANK1[8]), 

    distancia3	PTR unsigned char  size(1) Largest target is 8
		 -> dist3(BANK1[8]), 

    distancia2	PTR unsigned char  size(1) Largest target is 8
		 -> dist2(BANK1[8]), 

    distancia1	PTR unsigned char  size(1) Largest target is 8
		 -> dist1(BANK1[8]), 

    PrintDistancias@dist4	PTR unsigned char  size(1) Largest target is 8
		 -> dist4(BANK1[8]), 

    PrintDistancias@dist3	PTR unsigned char  size(1) Largest target is 8
		 -> dist3(BANK1[8]), 

    PrintDistancias@dist2	PTR unsigned char  size(1) Largest target is 8
		 -> dist2(BANK1[8]), 

    PrintDistancias@dist1	PTR unsigned char  size(1) Largest target is 8
		 -> dist1(BANK1[8]), 

    CalcularDistancia@distancia4	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia4(BANK1[1]), 

    CalcularDistancia@distancia3	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia3(BANK1[1]), 

    CalcularDistancia@distancia2	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia2(BANK1[1]), 

    CalcularDistancia@distancia1	PTR PTR unsigned char  size(1) Largest target is 1
		 -> distancia1(BANK1[1]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 40
		 -> PrintDistancias@dist(BANK0[40]), 


Critical Paths under _main in COMMON

    _main->_ResetEcho
    _main->_Trigger
    _UART_Init->___aldiv
    _PrintDistancias->_UART_Write_Text
    _UART_Write_Text->_UART_Write
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _echo in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PrintDistancias
    _UART_Init->___aldiv
    _PrintDistancias->_sprintf
    _CalcularDistancia->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _echo in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _echo in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _echo in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10170
                                              0 BANK1      4     4      0
                  _CalcularDistancia
                   _Inicializaciones
                    _PrintDistancias
                          _ResetEcho
                            _Trigger
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     993
                                             14 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     705
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Trigger                                              2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ResetEcho                                            2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _PrintDistancias                                     49    46      3    3759
                                             29 BANK0     49    46      3
                    _UART_Write_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      4     4      0     191
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Inicializaciones                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CalcularDistancia                                   21     9     12    5418
                                             29 BANK0     21     9     12
                            ___lwdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    18      5    3127
                                             12 BANK0     17    12      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     891
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _echo                                                 4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcularDistancia
     ___lwdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _Inicializaciones
   _PrintDistancias
     _UART_Write_Text
       _UART_Write
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _ResetEcho
   _Trigger
   _UART_Init
     ___aldiv

 _echo (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      4      30       5       60.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      50       3      100.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      8A      10        0.0%
ABS                  0      0      8A       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue Mar 29 19:00:31 2016

  __size_of_Inicializaciones 001A                            pc 0002                  __CFG_CP$OFF 0000  
                         _t4 00A0                           _t5 00A2                           _t6 00A4  
                         _t7 00A6                           fsr 0004                          l312 0424  
                        l183 063C                          l503 030F                          _GIE 005F  
                        _RB0 0030                          _RB1 0031                          _RC0 0038  
                        _RB2 0032                          _RC1 0039                          _RB3 0033  
                        _RC2 003A                          _RB4 0034                          _RC3 003B  
                        _RB5 0035                          _RC4 003C                          _RB6 0036  
                        _RC5 003D                          _RB7 0037                 __CFG_CPD$OFF 0000  
                        _TX9 04C6                          fsr0 0004                          indf 0000  
               __CFG_IESO$ON 0000                 __CFG_LVP$OFF 0000                         l2010 0277  
                       l2012 028A                         l2004 0252                         l2022 029C  
                       l2006 0272                         l2040 02F8                         l2120 0088  
                       l2130 00AF                         l2036 02BD                         l2028 02B9  
                       l2140 00D6                         l2124 0096                         l2038 021F  
                       l2150 0106                         l2134 00BD                         l2062 0330  
                       l2054 0320                         l1432 0590                         l2144 00E4  
                       l2080 0383                         l2072 0368                         l2064 0340  
                       l1434 059E                         l1442 05B7                         l2154 011A  
                       l2076 0375                         l2092 01F7                         l1438 05AC  
                       l1964 0578                         l1956 0554                         l1958 0562  
                       l1990 023F                         l1968 0583                         l1978 05EC  
                       l1988 023D                         STR_1 053F                         STR_2 0545  
                       STR_3 0538                         STR_4 053F                         STR_5 0545  
                       STR_6 0538                         STR_7 053F                         STR_8 0545  
                       STR_9 0538                         _BRGH 04C2                         _CREN 00C4  
                       u2005 0579                         u1215 05A4                         u1225 05AD  
                       _IOCB 0096                         u2230 0171                         u2231 0172  
                       u2215 0136                         u2232 0177                         u2145 0334  
                       u2233 0178                         u2225 0157                         u1195 0593  
                       u2075 02AF                         u2165 0342                         u2270 01D8  
                       u2407 04C5                         u2175 0357                         u2271 01D9  
                       u2255 019D                         u2272 01DE                         u2417 04D3  
                       u2185 0369                         u2273 01DF                         u2265 01BE  
                       u2427 04DD                         u2437 04EB                         u2447 04F5  
                       u2457 0629                         u2377 04A3                         u2467 0635  
                       u2387 04AD                         u2477 05E1                         u2397 04BB  
                       u1965 0557                         _RBIE 005B                         _RBIF 0058  
                       u1985 0563                         u1995 056F                         _RCIF 0065  
                       _TMR1 000E                         _SPEN 00C7                         _TRMT 04C1  
                       _TXEN 04C5                         _SYNC 04C4                 __CFG_WRT$OFF 0000  
              __CFG_FCMEN$ON 0000                         _echo 038C                         _main 0414  
                       _rbon 0076                         btemp 007E                __CFG_BOREN$ON 0000  
                       ltemp 007E                         start 0011                         ttemp 007E  
                       wtemp 007E                __CFG_MCLRE$ON 0000      __end_of_UART_Write_Text 0608  
                      ?_echo 0070              __end_of_Trigger 04FB              __end_of___aldiv 038C  
                      ?_main 0070                        STR_10 053F                        STR_11 0545  
                      STR_12 0538                        STR_13 051E                        STR_14 0531  
              __CFG_WDTE$OFF 0000                        _T1CON 0010              __end_of___lwdiv 0588  
                      i1l321 03AB                        i1l331 03F1                        i1l323 03B5  
                      i1l325 03C7                        i1l334 0409                        i1l327 03D1  
                      i1l319 0399                        i1l329 03E3              __end_of___lwmod 05BC  
                      _RCREG 001A                        _SPBRG 0099                        _PORTB 0006  
                      _TRISB 0086                        _TXREG 0019                  ?_UART_Write 0070  
         __size_of_UART_Init 00ED                        _dist1 00A8                        _dist2 00B0  
                      _dist3 00B8                        _dist4 00C0              __end_of_dpowers 051A  
           ?_PrintDistancias 003D                        pclath 000A                        ltemp0 007E  
                      ltemp1 0082                        ltemp2 0086                        ltemp3 0080  
            __end_of_rowaddr 051E                        ttemp0 007E                        ttemp1 0081  
                      ttemp2 0084                        ttemp3 0087                        ttemp4 007F  
                      status 0003                        wtemp0 007E                        wtemp1 0080  
                      wtemp2 0082                        wtemp3 0084                        wtemp4 0086  
                      wtemp5 0088                        wtemp6 007F              __end_of_sprintf 02FD  
            __initialization 0013                 __end_of_echo 0414                 __end_of_main 049A  
                     ??_echo 0070                       ??_main 00CC                       _ANSELH 0189  
                     i1l1938 0407                       _INTCON 000B                       _OSCCON 008F  
                     _TMR1ON 0080                       _TRISC0 0438                       _TRISC1 0439  
                     _TRISC2 043A                       _TRISC3 043B                       _TRISC4 043C  
                     _TRISC5 043D                       _TRISC6 043E                       _TRISC7 043F  
             __CFG_PWRTE$OFF 0000            __end_of_UART_Init 0218             _Inicializaciones 0608  
        __size_of_UART_Write 000A                    ??_Trigger 0074                    ??___aldiv 0074  
           ?_UART_Write_Text 0070                    ??___lwdiv 0074                    ??___lwmod 0075  
         __size_of_ResetEcho 0019                       _iomode 0079                       saved_w 007E  
                  ??_sprintf 0031      __end_of__initialization 0039               __pcstackCOMMON 0070  
               __pidataBANK0 0651                 __pidataBANK1 064D         PrintDistancias@dist1 006D  
       PrintDistancias@dist2 003D         PrintDistancias@dist3 003E         PrintDistancias@dist4 003F  
                 __pbssBANK1 00A0            __end_of_ResetEcho 063B                   __pmaintext 0414  
                 __pintentry 0004                 ??_UART_Write 0074                   _distancia1 00C8  
                 _distancia2 00C9                   _distancia3 00CA                   _distancia4 00CB  
                 _lcdcolumns 006E                   __stringtab 0500                      _Trigger 049A  
                    ___aldiv 02FD           __end_of_UART_Write 0645                      ___lwdiv 054A  
                    ___lwmod 0588                      __ptext1 012B                      __ptext2 02FD  
                    __ptext3 049A                      __ptext4 0622                      __ptext5 05BC  
                    __ptext6 05E7                      __ptext7 063B                      __ptext8 0608  
                    __ptext9 003C                      _lcdrows 006F                      _dpowers 0510  
           ___aldiv@dividend 0024     __end_of_Inicializaciones 0622                      _rowaddr 051A  
                    _sprintf 0218                      clrloop0 0646         end_of_initialization 0039  
   __size_of_PrintDistancias 002B             ___aldiv@quotient 002A                    _UART_Init 012B  
             UART_Write@data 0074                   ?_UART_Init 002E            _CalcularDistancia 003C  
   __size_of_UART_Write_Text 0021          start_initialization 0013           ?_CalcularDistancia 003D  
        ??_CalcularDistancia 0049                    _ResetEcho 0622                  __pdataBANK0 006E  
                __pdataBANK1 00C8            ??_PrintDistancias 0040    __end_of_CalcularDistancia 012B  
                __pbssCOMMON 0076                    ___latbits 0001                __pcstackBANK0 0020  
              __pcstackBANK1 00CC       __CFG_FOSC$INTRC_CLKOUT 0000                  sprintf@flag 0034  
        PrintDistancias@dist 0045                  sprintf@prec 0037                   ?_ResetEcho 0070  
           ___lwdiv@dividend 0022                     ?_Trigger 0070                     ?___aldiv 0020  
                   ?___lwdiv 0020                     ?___lwmod 0027                  ??_UART_Init 0032  
                  __pstrings 0500             ___lwdiv@quotient 0025            ?_Inicializaciones 0070  
                   ?_sprintf 002C  CalcularDistancia@distancia1 0045  CalcularDistancia@distancia2 0046  
CalcularDistancia@distancia3 0047  CalcularDistancia@distancia4 0048                   UART_Init@x 003E  
          ??_UART_Write_Text 0075           ??_Inicializaciones 0074              ___aldiv@divisor 0020  
          interrupt_function 0004              ___aldiv@counter 0028                    clear_ram0 0645  
        CalcularDistancia@d0 004A          CalcularDistancia@d1 004C          CalcularDistancia@d2 004E  
        CalcularDistancia@d3 0050          CalcularDistancia@t0 003D          CalcularDistancia@t1 003F  
        CalcularDistancia@t2 0041          CalcularDistancia@t3 0043            UART_Init@baudrate 002E  
 __size_of_CalcularDistancia 00EF                  __stringbase 050F                  ??_ResetEcho 0074  
           __size_of_Trigger 0061             __size_of___aldiv 008F             __size_of___lwdiv 003E  
           __size_of___lwmod 0034           __end_of__stringtab 0510                   sprintf@val 0035  
            ___lwdiv@divisor 0020              ___lwdiv@counter 0024                     __ptext10 0218  
                   __ptext11 0588                     __ptext12 054A                     __ptext13 038C  
          __CFG_BOR4V$BOR21V 0000                     _dispctrl 0078             __size_of_sprintf 00E5  
              __size_of_echo 0088          UART_Write_Text@text 0020                __size_of_main 0086  
            _PrintDistancias 05BC                     intlevel1 0000                    sprintf@ap 0038  
                  sprintf@cp 0039                    sprintf@sp 003C             ___lwmod@dividend 0029  
                  stringcode 050A              _UART_Write_Text 05E7                     sprintf@c 003B  
                   sprintf@f 002C              ___lwmod@divisor 0027              ___lwmod@counter 002B  
                   stringdir 050A                     stringtab 0500                 ___aldiv@sign 0029  
                 _UART_Write 063B      __end_of_PrintDistancias 05E7             UART_Write_Text@i 0021  
