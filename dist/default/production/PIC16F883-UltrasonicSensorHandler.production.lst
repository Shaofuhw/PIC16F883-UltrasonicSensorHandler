

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed May 25 21:22:11 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F883
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000E                     	;# 
    45  000F                     	;# 
    46  0010                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0014                     	;# 
    51  0015                     	;# 
    52  0015                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001B                     	;# 
    60  001C                     	;# 
    61  001D                     	;# 
    62  001E                     	;# 
    63  001F                     	;# 
    64  0081                     	;# 
    65  0085                     	;# 
    66  0086                     	;# 
    67  0087                     	;# 
    68  0089                     	;# 
    69  008C                     	;# 
    70  008D                     	;# 
    71  008E                     	;# 
    72  008F                     	;# 
    73  0090                     	;# 
    74  0091                     	;# 
    75  0092                     	;# 
    76  0093                     	;# 
    77  0093                     	;# 
    78  0093                     	;# 
    79  0094                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0097                     	;# 
    83  0098                     	;# 
    84  0099                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  0105                     	;# 
    92  0107                     	;# 
    93  0108                     	;# 
    94  0109                     	;# 
    95  010C                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  010E                     	;# 
    99  010F                     	;# 
   100  0185                     	;# 
   101  0187                     	;# 
   102  0188                     	;# 
   103  0189                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  0089                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  008F                     	;# 
   149  0090                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0093                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0095                     	;# 
   157  0096                     	;# 
   158  0097                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009A                     	;# 
   162  009B                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  0105                     	;# 
   168  0107                     	;# 
   169  0108                     	;# 
   170  0109                     	;# 
   171  010C                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  010F                     	;# 
   176  0185                     	;# 
   177  0187                     	;# 
   178  0188                     	;# 
   179  0189                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182  0000                     	;# 
   183  0001                     	;# 
   184  0002                     	;# 
   185  0003                     	;# 
   186  0004                     	;# 
   187  0005                     	;# 
   188  0006                     	;# 
   189  0007                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0089                     	;# 
   221  008C                     	;# 
   222  008D                     	;# 
   223  008E                     	;# 
   224  008F                     	;# 
   225  0090                     	;# 
   226  0091                     	;# 
   227  0092                     	;# 
   228  0093                     	;# 
   229  0093                     	;# 
   230  0093                     	;# 
   231  0094                     	;# 
   232  0095                     	;# 
   233  0096                     	;# 
   234  0097                     	;# 
   235  0098                     	;# 
   236  0099                     	;# 
   237  009A                     	;# 
   238  009B                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  0105                     	;# 
   244  0107                     	;# 
   245  0108                     	;# 
   246  0109                     	;# 
   247  010C                     	;# 
   248  010C                     	;# 
   249  010D                     	;# 
   250  010E                     	;# 
   251  010F                     	;# 
   252  0185                     	;# 
   253  0187                     	;# 
   254  0188                     	;# 
   255  0189                     	;# 
   256  018C                     	;# 
   257  018D                     	;# 
   258                           
   259                           	psect	strings
   260  0652                     __pstrings:	
   261  0652                     stringtab:	
   262  0652                     __stringtab:	
   263  0652                     stringcode:	
   264                           ;	String table - string pointers are 1 byte each
   265                           
   266  0652                     stringdir:	
   267  0652  3006               	movlw	high stringdir
   268  0653  008A               	movwf	10
   269  0654  0804               	movf	4,w
   270  0655  0A84               	incf	4,f
   271  0656  0782               	addwf	2,f
   272  0657                     __stringbase:	
   273  0657  3400               	retlw	0
   274  0658                     __end_of__stringtab:	
   275  0658                     _dpowers:	
   276  0658  3401               	retlw	1
   277  0659  3400               	retlw	0
   278  065A  340A               	retlw	10
   279  065B  3400               	retlw	0
   280  065C  3464               	retlw	100
   281  065D  3400               	retlw	0
   282  065E  34E8               	retlw	232
   283  065F  3403               	retlw	3
   284  0660  3410               	retlw	16
   285  0661  3427               	retlw	39
   286  0662                     __end_of_dpowers:	
   287  000E                     _TMR1	set	14
   288  000B                     _INTCON	set	11
   289  0006                     _PORTB	set	6
   290  0010                     _T1CON	set	16
   291  0019                     _TXREG	set	25
   292  00C4                     _CREN	set	196
   293  005F                     _GIE	set	95
   294  0030                     _RB0	set	48
   295  0031                     _RB1	set	49
   296  0032                     _RB2	set	50
   297  0033                     _RB3	set	51
   298  0034                     _RB4	set	52
   299  0035                     _RB5	set	53
   300  0036                     _RB6	set	54
   301  0037                     _RB7	set	55
   302  005B                     _RBIE	set	91
   303  0058                     _RBIF	set	88
   304  00C7                     _SPEN	set	199
   305  0080                     _TMR1ON	set	128
   306  0096                     _IOCB	set	150
   307  008F                     _OSCCON	set	143
   308  0099                     _SPBRG	set	153
   309  0086                     _TRISB	set	134
   310  04C2                     _BRGH	set	1218
   311  04C4                     _SYNC	set	1220
   312  0434                     _TRISB4	set	1076
   313  0435                     _TRISB5	set	1077
   314  0436                     _TRISB6	set	1078
   315  0437                     _TRISB7	set	1079
   316  043E                     _TRISC6	set	1086
   317  043F                     _TRISC7	set	1087
   318  04C1                     _TRMT	set	1217
   319  04C6                     _TX9	set	1222
   320  04C5                     _TXEN	set	1221
   321  0189                     _ANSELH	set	393
   322  0662                     STR_1:	
   323  0662  3425               	retlw	37	;'%'
   324  0663  3475               	retlw	117	;'u'
   325  0664  342C               	retlw	44	;','
   326  0665  3425               	retlw	37	;'%'
   327  0666  3475               	retlw	117	;'u'
   328  0667  342C               	retlw	44	;','
   329  0668  3425               	retlw	37	;'%'
   330  0669  3475               	retlw	117	;'u'
   331  066A  342C               	retlw	44	;','
   332  066B  3425               	retlw	37	;'%'
   333  066C  3475               	retlw	117	;'u'
   334  066D  340A               	retlw	10
   335  066E  3400               	retlw	0
   336  066F  3400               	retlw	0
   337                           
   338                           ; #config settings
   339  0000                     
   340                           	psect	cinit
   341  0013                     start_initialization:	
   342  0013                     __initialization:	
   343                           
   344                           ; Clear objects allocated to BANK0
   345  0013  1383               	bcf	3,7	;select IRP bank0
   346  0014  304B               	movlw	low __pbssBANK0
   347  0015  0084               	movwf	4
   348  0016  3070               	movlw	low (__pbssBANK0+37)
   349  0017  118A  26AE  118A   	fcall	clear_ram0
   350                           
   351                           ; Clear objects allocated to BANK1
   352  001A  30A0               	movlw	low __pbssBANK1
   353  001B  0084               	movwf	4
   354  001C  30BC               	movlw	low (__pbssBANK1+28)
   355  001D  118A  26AE         	fcall	clear_ram0
   356  001F                     end_of_initialization:	
   357                           ;End of C runtime variable initialization code
   358                           
   359  001F                     __end_of__initialization:	
   360  001F  0183               	clrf	3
   361  0020  118A  2D58         	ljmp	_main	;jump to C main() function
   362                           
   363                           	psect	bssBANK0
   364  004B                     __pbssBANK0:	
   365  004B                     _t4:	
   366  004B                     	ds	12
   367  0057                     _t5:	
   368  0057                     	ds	12
   369  0063                     _t6:	
   370  0063                     	ds	12
   371  006F                     _rbon:	
   372  006F                     	ds	1
   373                           
   374                           	psect	bssBANK1
   375  00A0                     __pbssBANK1:	
   376  00A0                     _distancias:	
   377  00A0                     	ds	16
   378  00B0                     _t7:	
   379  00B0                     	ds	12
   380                           
   381                           	psect	clrtext
   382  06AE                     clear_ram0:	
   383                           ;	Called with FSR containing the base address, and
   384                           ;	W with the last address+1
   385                           
   386  06AE  0064               	clrwdt	;clear the watchdog before getting into this loop
   387  06AF                     clrloop0:	
   388  06AF  0180               	clrf	0	;clear RAM location pointed to by FSR
   389  06B0  0A84               	incf	4,f	;increment pointer
   390  06B1  0604               	xorwf	4,w	;XOR with final address
   391  06B2  1903               	btfsc	3,2	;have we reached the end yet?
   392  06B3  3400               	retlw	0	;all done for this memory range, return
   393  06B4  0604               	xorwf	4,w	;XOR again to restore value
   394  06B5  2EAF               	goto	clrloop0	;do the next byte
   395                           
   396                           	psect	cstackCOMMON
   397  0070                     __pcstackCOMMON:	
   398  0070                     ?_MediaMedidas:	
   399  0070                     ?_UART_Write_Text:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_Inicializaciones:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_Trigger:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_ResetEcho:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_IntPortb:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_main:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_Interrupcion:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_UART_Write:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     IntPortb@t5:	
   424                           ; 1 bytes @ 0x0
   425                           
   426                           
   427                           ; 1 bytes @ 0x0
   428  0070                     	ds	1
   429  0071                     IntPortb@t6:	
   430                           
   431                           ; 1 bytes @ 0x1
   432  0071                     	ds	1
   433  0072                     IntPortb@t7:	
   434                           
   435                           ; 1 bytes @ 0x2
   436  0072                     	ds	1
   437  0073                     IntPortb@rbon:	
   438                           
   439                           ; 1 bytes @ 0x3
   440  0073                     	ds	1
   441  0074                     ??_IntPortb:	
   442                           
   443                           ; 1 bytes @ 0x4
   444  0074                     	ds	1
   445  0075                     IntPortb@t4:	
   446                           
   447                           ; 1 bytes @ 0x5
   448  0075                     	ds	1
   449  0076                     ??_Interrupcion:	
   450                           
   451                           ; 1 bytes @ 0x6
   452  0076                     	ds	8
   453                           
   454                           	psect	cstackBANK0
   455  0020                     __pcstackBANK0:	
   456  0020                     ??_Inicializaciones:	
   457  0020                     ??_Trigger:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0020                     ?_ShiftArrays:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0020                     ??_ResetEcho:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0020                     ??_UART_Write:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0020                     ?___awdiv:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0020                     ?___lwdiv:	
   473                           ; 2 bytes @ 0x0
   474                           
   475  0020                     ?___aldiv:	
   476                           ; 2 bytes @ 0x0
   477                           
   478  0020                     ShiftArrays@t5:	
   479                           ; 4 bytes @ 0x0
   480                           
   481  0020                     UART_Write@data:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0020                     ___awdiv@divisor:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0020                     ___lwdiv@divisor:	
   488                           ; 2 bytes @ 0x0
   489                           
   490  0020                     ___aldiv@divisor:	
   491                           ; 2 bytes @ 0x0
   492                           
   493                           
   494                           ; 4 bytes @ 0x0
   495  0020                     	ds	1
   496  0021                     ??_UART_Write_Text:	
   497  0021                     ShiftArrays@t6:	
   498                           ; 1 bytes @ 0x1
   499                           
   500  0021                     ResetEcho@rbon:	
   501                           ; 1 bytes @ 0x1
   502                           
   503                           
   504                           ; 1 bytes @ 0x1
   505  0021                     	ds	1
   506  0022                     ShiftArrays@t7:	
   507  0022                     UART_Write_Text@i:	
   508                           ; 1 bytes @ 0x2
   509                           
   510  0022                     ___awdiv@dividend:	
   511                           ; 2 bytes @ 0x2
   512                           
   513  0022                     ___lwdiv@dividend:	
   514                           ; 2 bytes @ 0x2
   515                           
   516                           
   517                           ; 2 bytes @ 0x2
   518  0022                     	ds	1
   519  0023                     ??_ShiftArrays:	
   520                           
   521                           ; 1 bytes @ 0x3
   522  0023                     	ds	1
   523  0024                     ??___awdiv:	
   524  0024                     ??___lwdiv:	
   525                           ; 1 bytes @ 0x4
   526                           
   527  0024                     UART_Write_Text@text:	
   528                           ; 1 bytes @ 0x4
   529                           
   530  0024                     ___aldiv@dividend:	
   531                           ; 1 bytes @ 0x4
   532                           
   533                           
   534                           ; 4 bytes @ 0x4
   535  0024                     	ds	1
   536  0025                     ___awdiv@counter:	
   537  0025                     ___lwdiv@quotient:	
   538                           ; 1 bytes @ 0x5
   539                           
   540                           
   541                           ; 2 bytes @ 0x5
   542  0025                     	ds	1
   543  0026                     ___awdiv@sign:	
   544                           
   545                           ; 1 bytes @ 0x6
   546  0026                     	ds	1
   547  0027                     ___lwdiv@counter:	
   548  0027                     ___awdiv@quotient:	
   549                           ; 1 bytes @ 0x7
   550                           
   551                           
   552                           ; 2 bytes @ 0x7
   553  0027                     	ds	1
   554  0028                     ??_MediaMedidas:	
   555  0028                     ??___aldiv:	
   556                           ; 1 bytes @ 0x8
   557                           
   558  0028                     ?___lwmod:	
   559                           ; 1 bytes @ 0x8
   560                           
   561  0028                     ___lwmod@divisor:	
   562                           ; 2 bytes @ 0x8
   563                           
   564                           
   565                           ; 2 bytes @ 0x8
   566  0028                     	ds	1
   567  0029                     ShiftArrays@t4:	
   568  0029                     ___aldiv@counter:	
   569                           ; 1 bytes @ 0x9
   570                           
   571                           
   572                           ; 1 bytes @ 0x9
   573  0029                     	ds	1
   574  002A                     ShiftArrays@i:	
   575  002A                     ___aldiv@sign:	
   576                           ; 1 bytes @ 0xA
   577                           
   578  002A                     ___lwmod@dividend:	
   579                           ; 1 bytes @ 0xA
   580                           
   581                           
   582                           ; 2 bytes @ 0xA
   583  002A                     	ds	1
   584  002B                     ___aldiv@quotient:	
   585                           
   586                           ; 4 bytes @ 0xB
   587  002B                     	ds	1
   588  002C                     ??___lwmod:	
   589  002C                     MediaMedidas@sum:	
   590                           ; 1 bytes @ 0xC
   591                           
   592                           
   593                           ; 2 bytes @ 0xC
   594  002C                     	ds	1
   595  002D                     ___lwmod@counter:	
   596                           
   597                           ; 1 bytes @ 0xD
   598  002D                     	ds	1
   599  002E                     ?_sprintf:	
   600  002E                     MediaMedidas@num:	
   601                           ; 2 bytes @ 0xE
   602                           
   603  002E                     sprintf@f:	
   604                           ; 1 bytes @ 0xE
   605                           
   606                           
   607                           ; 1 bytes @ 0xE
   608  002E                     	ds	1
   609  002F                     ?_UART_Init:	
   610  002F                     MediaMedidas@t:	
   611                           ; 1 bytes @ 0xF
   612                           
   613  002F                     UART_Init@baudrate:	
   614                           ; 1 bytes @ 0xF
   615                           
   616                           
   617                           ; 4 bytes @ 0xF
   618  002F                     	ds	1
   619  0030                     MediaMedidas@i:	
   620                           
   621                           ; 1 bytes @ 0x10
   622  0030                     	ds	3
   623  0033                     ??_UART_Init:	
   624                           
   625                           ; 1 bytes @ 0x13
   626  0033                     	ds	4
   627  0037                     ??_sprintf:	
   628                           
   629                           ; 1 bytes @ 0x17
   630  0037                     	ds	3
   631  003A                     sprintf@flag:	
   632                           
   633                           ; 1 bytes @ 0x1A
   634  003A                     	ds	1
   635  003B                     sprintf@ap:	
   636                           
   637                           ; 1 bytes @ 0x1B
   638  003B                     	ds	1
   639  003C                     sprintf@val:	
   640                           
   641                           ; 2 bytes @ 0x1C
   642  003C                     	ds	2
   643  003E                     sprintf@prec:	
   644                           
   645                           ; 1 bytes @ 0x1E
   646  003E                     	ds	1
   647  003F                     sprintf@sp:	
   648  003F                     UART_Init@x:	
   649                           ; 1 bytes @ 0x1F
   650                           
   651                           
   652                           ; 2 bytes @ 0x1F
   653  003F                     	ds	1
   654  0040                     sprintf@c:	
   655                           
   656                           ; 1 bytes @ 0x20
   657  0040                     	ds	1
   658  0041                     ?_CalcularDistancia:	
   659  0041                     CalcularDistancia@t5:	
   660                           ; 1 bytes @ 0x21
   661                           
   662                           
   663                           ; 1 bytes @ 0x21
   664  0041                     	ds	1
   665  0042                     CalcularDistancia@t6:	
   666                           
   667                           ; 1 bytes @ 0x22
   668  0042                     	ds	1
   669  0043                     CalcularDistancia@t7:	
   670                           
   671                           ; 1 bytes @ 0x23
   672  0043                     	ds	1
   673  0044                     CalcularDistancia@distancias:	
   674                           
   675                           ; 1 bytes @ 0x24
   676  0044                     	ds	1
   677  0045                     ??_CalcularDistancia:	
   678                           
   679                           ; 1 bytes @ 0x25
   680  0045                     	ds	1
   681  0046                     CalcularDistancia@t4:	
   682                           
   683                           ; 1 bytes @ 0x26
   684  0046                     	ds	1
   685  0047                     ??_main:	
   686                           
   687                           ; 1 bytes @ 0x27
   688  0047                     	ds	4
   689                           
   690                           	psect	maintext
   691  0558                     __pmaintext:	
   692 ;;
   693 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   694 ;;
   695 ;; *************** function _main *****************
   696 ;; Defined at:
   697 ;;		line 41 in file "main.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : B00/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   711 ;;      Params:         0       0       0       0
   712 ;;      Locals:         0       0       0       0
   713 ;;      Temps:          0       4       0       0
   714 ;;      Totals:         0       4       0       0
   715 ;;Total ram usage:        4 bytes
   716 ;; Hardware stack levels required when called:    5
   717 ;; This function calls:
   718 ;;		_CalcularDistancia
   719 ;;		_Inicializaciones
   720 ;;		_ResetEcho
   721 ;;		_ShiftArrays
   722 ;;		_Trigger
   723 ;;		_UART_Init
   724 ;;		_UART_Write_Text
   725 ;; This function is called by:
   726 ;;		Startup code after reset
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           
   731                           ;psect for function _main
   732  0558                     _main:	
   733                           
   734                           ;main.c: 43: Inicializaciones();
   735                           
   736                           ;incstack = 0
   737                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   738  0558  118A  2670  118A   	fcall	_Inicializaciones
   739                           
   740                           ;main.c: 45: UART_Init(9600);
   741  055B  3000               	movlw	0
   742  055C  1283               	bcf	3,5	;RP0=0, select bank0
   743  055D  1303               	bcf	3,6	;RP1=0, select bank0
   744  055E  00B2               	movwf	UART_Init@baudrate+3
   745  055F  3000               	movlw	0
   746  0560  00B1               	movwf	UART_Init@baudrate+2
   747  0561  3025               	movlw	37
   748  0562  00B0               	movwf	UART_Init@baudrate+1
   749  0563  3080               	movlw	128
   750  0564  00AF               	movwf	UART_Init@baudrate
   751  0565  118A  2022  118A   	fcall	_UART_Init
   752  0568                     l131:	
   753                           ;main.c: 47: while (1) {
   754                           
   755                           
   756                           ;main.c: 57: Trigger();
   757  0568  118A  2395  118A   	fcall	_Trigger
   758                           
   759                           ;main.c: 58: ResetEcho(&rbon);
   760  056B  306F               	movlw	(low (_rbon| 0))& (0+255)
   761  056C  118A  268C  118A   	fcall	_ResetEcho
   762                           
   763                           ;main.c: 59: CalcularDistancia(t4, t5, t6, t7, distancias);
   764  056F  3057               	movlw	(low (_t5| 0))& (0+255)
   765  0570  1283               	bcf	3,5	;RP0=0, select bank0
   766  0571  1303               	bcf	3,6	;RP1=0, select bank0
   767  0572  00C7               	movwf	??_main
   768  0573  0847               	movf	??_main,w
   769  0574  00C1               	movwf	CalcularDistancia@t5
   770  0575  3063               	movlw	(low (_t6| 0))& (0+255)
   771  0576  00C8               	movwf	??_main+1
   772  0577  0848               	movf	??_main+1,w
   773  0578  00C2               	movwf	CalcularDistancia@t6
   774  0579  30B0               	movlw	(low (_t7| 0))& (0+255)
   775  057A  00C9               	movwf	??_main+2
   776  057B  0849               	movf	??_main+2,w
   777  057C  00C3               	movwf	CalcularDistancia@t7
   778  057D  30A0               	movlw	(low (_distancias| 0))& (0+255)
   779  057E  00CA               	movwf	??_main+3
   780  057F  084A               	movf	??_main+3,w
   781  0580  00C4               	movwf	CalcularDistancia@distancias
   782  0581  304B               	movlw	(low (_t4| 0))& (0+255)
   783  0582  118A  21BE  118A   	fcall	_CalcularDistancia
   784                           
   785                           ;main.c: 61: ShiftArrays(t4, t5, t6, t7);
   786  0585  3057               	movlw	(low (_t5| 0))& (0+255)
   787  0586  1283               	bcf	3,5	;RP0=0, select bank0
   788  0587  1303               	bcf	3,6	;RP1=0, select bank0
   789  0588  00C7               	movwf	??_main
   790  0589  0847               	movf	??_main,w
   791  058A  00A0               	movwf	ShiftArrays@t5
   792  058B  3063               	movlw	(low (_t6| 0))& (0+255)
   793  058C  00C8               	movwf	??_main+1
   794  058D  0848               	movf	??_main+1,w
   795  058E  00A1               	movwf	ShiftArrays@t6
   796  058F  30B0               	movlw	(low (_t7| 0))& (0+255)
   797  0590  00C9               	movwf	??_main+2
   798  0591  0849               	movf	??_main+2,w
   799  0592  00A2               	movwf	ShiftArrays@t7
   800  0593  304B               	movlw	(low (_t4| 0))& (0+255)
   801  0594  118A  248B  118A   	fcall	_ShiftArrays
   802                           
   803                           ;main.c: 62: UART_Write_Text(distancias);
   804  0597  30A0               	movlw	(low (_distancias| 0))& (0+255)
   805  0598  118A  2631  118A   	fcall	_UART_Write_Text
   806  059B  2D68               	goto	l131
   807  059C                     __end_of_main:	
   808                           ;main.c: 63: }
   809                           ;main.c: 64: return;
   810                           
   811                           
   812                           	psect	text1
   813  0631                     __ptext1:	
   814 ;; *************** function _UART_Write_Text *****************
   815 ;; Defined at:
   816 ;;		line 48 in file "Uart.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  text            1    wreg     PTR unsigned char 
   819 ;;		 -> distancias(16), 
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  text            1    4[BANK0 ] PTR unsigned char 
   822 ;;		 -> distancias(16), 
   823 ;;  i               2    2[BANK0 ] int 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   833 ;;      Params:         0       0       0       0
   834 ;;      Locals:         0       3       0       0
   835 ;;      Temps:          0       1       0       0
   836 ;;      Totals:         0       4       0       0
   837 ;;Total ram usage:        4 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; Hardware stack levels required when called:    3
   840 ;; This function calls:
   841 ;;		_UART_Write
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           
   848                           ;psect for function _UART_Write_Text
   849  0631                     _UART_Write_Text:	
   850                           
   851                           ;incstack = 0
   852                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   853                           ;UART_Write_Text@text stored from wreg
   854  0631  1283               	bcf	3,5	;RP0=0, select bank0
   855  0632  1303               	bcf	3,6	;RP1=0, select bank0
   856  0633  00A4               	movwf	UART_Write_Text@text
   857                           
   858                           ;Uart.c: 50: int i;
   859                           ;Uart.c: 51: for(i=0;text[i]!='\0';i++)
   860  0634  01A2               	clrf	UART_Write_Text@i
   861  0635  01A3               	clrf	UART_Write_Text@i+1
   862  0636                     l1468:	
   863  0636  0822               	movf	UART_Write_Text@i,w
   864  0637  0724               	addwf	UART_Write_Text@text,w
   865  0638  00A1               	movwf	??_UART_Write_Text
   866  0639  0821               	movf	??_UART_Write_Text,w
   867  063A  0084               	movwf	4
   868  063B  1383               	bcf	3,7	;select IRP bank0
   869  063C  0800               	movf	0,w
   870  063D  1903               	btfsc	3,2
   871  063E  0008               	return
   872                           
   873                           ;Uart.c: 52: UART_Write(text[i]);
   874  063F  0822               	movf	UART_Write_Text@i,w
   875  0640  0724               	addwf	UART_Write_Text@text,w
   876  0641  00A1               	movwf	??_UART_Write_Text
   877  0642  0821               	movf	??_UART_Write_Text,w
   878  0643  0084               	movwf	4
   879  0644  1383               	bcf	3,7	;select IRP bank0
   880  0645  0800               	movf	0,w
   881  0646  118A  26A2  118A   	fcall	_UART_Write
   882  0649  3001               	movlw	1
   883  064A  1283               	bcf	3,5	;RP0=0, select bank0
   884  064B  1303               	bcf	3,6	;RP1=0, select bank0
   885  064C  07A2               	addwf	UART_Write_Text@i,f
   886  064D  1803               	skipnc
   887  064E  0AA3               	incf	UART_Write_Text@i+1,f
   888  064F  3000               	movlw	0
   889  0650  07A3               	addwf	UART_Write_Text@i+1,f
   890  0651  2E36               	goto	l1468
   891  0652                     __end_of_UART_Write_Text:	
   892                           
   893                           	psect	text2
   894  06A2                     __ptext2:	
   895 ;; *************** function _UART_Write *****************
   896 ;; Defined at:
   897 ;;		line 43 in file "Uart.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  data            1    wreg     unsigned char 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  data            1    0[BANK0 ] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   911 ;;      Params:         0       0       0       0
   912 ;;      Locals:         0       1       0       0
   913 ;;      Temps:          0       0       0       0
   914 ;;      Totals:         0       1       0       0
   915 ;;Total ram usage:        1 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; Hardware stack levels required when called:    2
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_UART_Write_Text
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           
   926                           ;psect for function _UART_Write
   927  06A2                     _UART_Write:	
   928                           
   929                           ;incstack = 0
   930                           ; Regs used in _UART_Write: [wreg]
   931                           ;UART_Write@data stored from wreg
   932  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   933  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   934  06A4  00A0               	movwf	UART_Write@data
   935  06A5                     l168:	
   936                           ;Uart.c: 44: while (!TRMT);
   937                           
   938  06A5  1683               	bsf	3,5	;RP0=1, select bank1
   939  06A6  1303               	bcf	3,6	;RP1=0, select bank1
   940  06A7  1C98               	btfss	24,1	;volatile
   941  06A8  2EA5               	goto	l168
   942                           
   943                           ;Uart.c: 45: TXREG = data;
   944  06A9  1283               	bcf	3,5	;RP0=0, select bank0
   945  06AA  1303               	bcf	3,6	;RP1=0, select bank0
   946  06AB  0820               	movf	UART_Write@data,w
   947  06AC  0099               	movwf	25	;volatile
   948  06AD  0008               	return
   949  06AE                     __end_of_UART_Write:	
   950                           
   951                           	psect	text3
   952  0022                     __ptext3:	
   953 ;; *************** function _UART_Init *****************
   954 ;; Defined at:
   955 ;;		line 3 in file "Uart.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  baudrate        4   15[BANK0 ] const long 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  x               2   31[BANK0 ] unsigned int 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      unsigned char 
   962 ;; Registers used:
   963 ;;		wreg, status,2, status,0, pclath, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   969 ;;      Params:         0       4       0       0
   970 ;;      Locals:         0       2       0       0
   971 ;;      Temps:          0      12       0       0
   972 ;;      Totals:         0      18       0       0
   973 ;;Total ram usage:       18 bytes
   974 ;; Hardware stack levels used:    1
   975 ;; Hardware stack levels required when called:    3
   976 ;; This function calls:
   977 ;;		___aldiv
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           
   984                           ;psect for function _UART_Init
   985  0022                     _UART_Init:	
   986                           
   987                           ;Uart.c: 5: unsigned int x;
   988                           ;Uart.c: 6: x = (8000000 - baudrate * 64) / (baudrate * 64);
   989                           
   990                           ;incstack = 0
   991                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
   992  0022  1283               	bcf	3,5	;RP0=0, select bank0
   993  0023  1303               	bcf	3,6	;RP1=0, select bank0
   994  0024  082F               	movf	UART_Init@baudrate,w
   995  0025  00B3               	movwf	??_UART_Init
   996  0026  0830               	movf	UART_Init@baudrate+1,w
   997  0027  00B4               	movwf	??_UART_Init+1
   998  0028  0831               	movf	UART_Init@baudrate+2,w
   999  0029  00B5               	movwf	??_UART_Init+2
  1000  002A  0832               	movf	UART_Init@baudrate+3,w
  1001  002B  00B6               	movwf	??_UART_Init+3
  1002  002C  3006               	movlw	6
  1003  002D                     u1515:	
  1004  002D  1003               	clrc
  1005  002E  0DB3               	rlf	??_UART_Init,f
  1006  002F  0DB4               	rlf	??_UART_Init+1,f
  1007  0030  0DB5               	rlf	??_UART_Init+2,f
  1008  0031  0DB6               	rlf	??_UART_Init+3,f
  1009  0032  3EFF               	addlw	-1
  1010  0033  1D03               	skipz
  1011  0034  282D               	goto	u1515
  1012  0035  0836               	movf	??_UART_Init+3,w
  1013  0036  00A3               	movwf	___aldiv@divisor+3
  1014  0037  0835               	movf	??_UART_Init+2,w
  1015  0038  00A2               	movwf	___aldiv@divisor+2
  1016  0039  0834               	movf	??_UART_Init+1,w
  1017  003A  00A1               	movwf	___aldiv@divisor+1
  1018  003B  0833               	movf	??_UART_Init,w
  1019  003C  00A0               	movwf	___aldiv@divisor
  1020  003D  3000               	movlw	0
  1021  003E  00B7               	movwf	??_UART_Init+4
  1022  003F  3012               	movlw	18
  1023  0040  00B8               	movwf	??_UART_Init+5
  1024  0041  307A               	movlw	122
  1025  0042  00B9               	movwf	??_UART_Init+6
  1026  0043  3000               	movlw	0
  1027  0044  00BA               	movwf	??_UART_Init+7
  1028  0045  082F               	movf	UART_Init@baudrate,w
  1029  0046  00BB               	movwf	??_UART_Init+8
  1030  0047  0830               	movf	UART_Init@baudrate+1,w
  1031  0048  00BC               	movwf	??_UART_Init+9
  1032  0049  0831               	movf	UART_Init@baudrate+2,w
  1033  004A  00BD               	movwf	??_UART_Init+10
  1034  004B  0832               	movf	UART_Init@baudrate+3,w
  1035  004C  00BE               	movwf	??_UART_Init+11
  1036  004D  3006               	movlw	6
  1037  004E                     u1525:	
  1038  004E  1003               	clrc
  1039  004F  0DBB               	rlf	??_UART_Init+8,f
  1040  0050  0DBC               	rlf	??_UART_Init+9,f
  1041  0051  0DBD               	rlf	??_UART_Init+10,f
  1042  0052  0DBE               	rlf	??_UART_Init+11,f
  1043  0053  3EFF               	addlw	-1
  1044  0054  1D03               	skipz
  1045  0055  284E               	goto	u1525
  1046  0056  09BB               	comf	??_UART_Init+8,f
  1047  0057  09BC               	comf	??_UART_Init+9,f
  1048  0058  09BD               	comf	??_UART_Init+10,f
  1049  0059  09BE               	comf	??_UART_Init+11,f
  1050  005A  0ABB               	incf	??_UART_Init+8,f
  1051  005B  1903               	skipnz
  1052  005C  0ABC               	incf	??_UART_Init+9,f
  1053  005D  1903               	skipnz
  1054  005E  0ABD               	incf	??_UART_Init+10,f
  1055  005F  1903               	skipnz
  1056  0060  0ABE               	incf	??_UART_Init+11,f
  1057  0061  083B               	movf	??_UART_Init+8,w
  1058  0062  07B7               	addwf	??_UART_Init+4,f
  1059  0063  083C               	movf	??_UART_Init+9,w
  1060  0064  1803               	skipnc
  1061  0065  0F3C               	incfsz	??_UART_Init+9,w
  1062  0066  2868               	goto	u1530
  1063  0067  2869               	goto	u1531
  1064  0068                     u1530:	
  1065  0068  07B8               	addwf	??_UART_Init+5,f
  1066  0069                     u1531:	
  1067  0069  083D               	movf	??_UART_Init+10,w
  1068  006A  1803               	skipnc
  1069  006B  0F3D               	incfsz	??_UART_Init+10,w
  1070  006C  286E               	goto	u1532
  1071  006D  286F               	goto	u1533
  1072  006E                     u1532:	
  1073  006E  07B9               	addwf	??_UART_Init+6,f
  1074  006F                     u1533:	
  1075  006F  083E               	movf	??_UART_Init+11,w
  1076  0070  1803               	skipnc
  1077  0071  0A3E               	incf	??_UART_Init+11,w
  1078  0072  07BA               	addwf	??_UART_Init+7,f
  1079  0073  083A               	movf	??_UART_Init+7,w
  1080  0074  00A7               	movwf	___aldiv@dividend+3
  1081  0075  0839               	movf	??_UART_Init+6,w
  1082  0076  00A6               	movwf	___aldiv@dividend+2
  1083  0077  0838               	movf	??_UART_Init+5,w
  1084  0078  00A5               	movwf	___aldiv@dividend+1
  1085  0079  0837               	movf	??_UART_Init+4,w
  1086  007A  00A4               	movwf	___aldiv@dividend
  1087  007B  118A  2306  118A   	fcall	___aldiv
  1088  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1089  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0080  0821               	movf	?___aldiv+1,w
  1091  0081  00C0               	movwf	UART_Init@x+1
  1092  0082  0820               	movf	?___aldiv,w
  1093  0083  00BF               	movwf	UART_Init@x
  1094                           
  1095                           ;Uart.c: 7: if (x > 255) {
  1096  0084  3001               	movlw	1
  1097  0085  0240               	subwf	UART_Init@x+1,w
  1098  0086  3000               	movlw	0
  1099  0087  1903               	skipnz
  1100  0088  023F               	subwf	UART_Init@x,w
  1101  0089  1C03               	skipc
  1102  008A  28EE               	goto	l1440
  1103                           
  1104                           ;Uart.c: 8: x = (8000000 - baudrate * 16) / (baudrate * 16);
  1105  008B  082F               	movf	UART_Init@baudrate,w
  1106  008C  00B3               	movwf	??_UART_Init
  1107  008D  0830               	movf	UART_Init@baudrate+1,w
  1108  008E  00B4               	movwf	??_UART_Init+1
  1109  008F  0831               	movf	UART_Init@baudrate+2,w
  1110  0090  00B5               	movwf	??_UART_Init+2
  1111  0091  0832               	movf	UART_Init@baudrate+3,w
  1112  0092  00B6               	movwf	??_UART_Init+3
  1113  0093  3004               	movlw	4
  1114  0094                     u1555:	
  1115  0094  1003               	clrc
  1116  0095  0DB3               	rlf	??_UART_Init,f
  1117  0096  0DB4               	rlf	??_UART_Init+1,f
  1118  0097  0DB5               	rlf	??_UART_Init+2,f
  1119  0098  0DB6               	rlf	??_UART_Init+3,f
  1120  0099  3EFF               	addlw	-1
  1121  009A  1D03               	skipz
  1122  009B  2894               	goto	u1555
  1123  009C  0836               	movf	??_UART_Init+3,w
  1124  009D  00A3               	movwf	___aldiv@divisor+3
  1125  009E  0835               	movf	??_UART_Init+2,w
  1126  009F  00A2               	movwf	___aldiv@divisor+2
  1127  00A0  0834               	movf	??_UART_Init+1,w
  1128  00A1  00A1               	movwf	___aldiv@divisor+1
  1129  00A2  0833               	movf	??_UART_Init,w
  1130  00A3  00A0               	movwf	___aldiv@divisor
  1131  00A4  3000               	movlw	0
  1132  00A5  00B7               	movwf	??_UART_Init+4
  1133  00A6  3012               	movlw	18
  1134  00A7  00B8               	movwf	??_UART_Init+5
  1135  00A8  307A               	movlw	122
  1136  00A9  00B9               	movwf	??_UART_Init+6
  1137  00AA  3000               	movlw	0
  1138  00AB  00BA               	movwf	??_UART_Init+7
  1139  00AC  082F               	movf	UART_Init@baudrate,w
  1140  00AD  00BB               	movwf	??_UART_Init+8
  1141  00AE  0830               	movf	UART_Init@baudrate+1,w
  1142  00AF  00BC               	movwf	??_UART_Init+9
  1143  00B0  0831               	movf	UART_Init@baudrate+2,w
  1144  00B1  00BD               	movwf	??_UART_Init+10
  1145  00B2  0832               	movf	UART_Init@baudrate+3,w
  1146  00B3  00BE               	movwf	??_UART_Init+11
  1147  00B4  3004               	movlw	4
  1148  00B5                     u1565:	
  1149  00B5  1003               	clrc
  1150  00B6  0DBB               	rlf	??_UART_Init+8,f
  1151  00B7  0DBC               	rlf	??_UART_Init+9,f
  1152  00B8  0DBD               	rlf	??_UART_Init+10,f
  1153  00B9  0DBE               	rlf	??_UART_Init+11,f
  1154  00BA  3EFF               	addlw	-1
  1155  00BB  1D03               	skipz
  1156  00BC  28B5               	goto	u1565
  1157  00BD  09BB               	comf	??_UART_Init+8,f
  1158  00BE  09BC               	comf	??_UART_Init+9,f
  1159  00BF  09BD               	comf	??_UART_Init+10,f
  1160  00C0  09BE               	comf	??_UART_Init+11,f
  1161  00C1  0ABB               	incf	??_UART_Init+8,f
  1162  00C2  1903               	skipnz
  1163  00C3  0ABC               	incf	??_UART_Init+9,f
  1164  00C4  1903               	skipnz
  1165  00C5  0ABD               	incf	??_UART_Init+10,f
  1166  00C6  1903               	skipnz
  1167  00C7  0ABE               	incf	??_UART_Init+11,f
  1168  00C8  083B               	movf	??_UART_Init+8,w
  1169  00C9  07B7               	addwf	??_UART_Init+4,f
  1170  00CA  083C               	movf	??_UART_Init+9,w
  1171  00CB  1803               	skipnc
  1172  00CC  0F3C               	incfsz	??_UART_Init+9,w
  1173  00CD  28CF               	goto	u1570
  1174  00CE  28D0               	goto	u1571
  1175  00CF                     u1570:	
  1176  00CF  07B8               	addwf	??_UART_Init+5,f
  1177  00D0                     u1571:	
  1178  00D0  083D               	movf	??_UART_Init+10,w
  1179  00D1  1803               	skipnc
  1180  00D2  0F3D               	incfsz	??_UART_Init+10,w
  1181  00D3  28D5               	goto	u1572
  1182  00D4  28D6               	goto	u1573
  1183  00D5                     u1572:	
  1184  00D5  07B9               	addwf	??_UART_Init+6,f
  1185  00D6                     u1573:	
  1186  00D6  083E               	movf	??_UART_Init+11,w
  1187  00D7  1803               	skipnc
  1188  00D8  0A3E               	incf	??_UART_Init+11,w
  1189  00D9  07BA               	addwf	??_UART_Init+7,f
  1190  00DA  083A               	movf	??_UART_Init+7,w
  1191  00DB  00A7               	movwf	___aldiv@dividend+3
  1192  00DC  0839               	movf	??_UART_Init+6,w
  1193  00DD  00A6               	movwf	___aldiv@dividend+2
  1194  00DE  0838               	movf	??_UART_Init+5,w
  1195  00DF  00A5               	movwf	___aldiv@dividend+1
  1196  00E0  0837               	movf	??_UART_Init+4,w
  1197  00E1  00A4               	movwf	___aldiv@dividend
  1198  00E2  118A  2306  118A   	fcall	___aldiv
  1199  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1200  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1201  00E7  0821               	movf	?___aldiv+1,w
  1202  00E8  00C0               	movwf	UART_Init@x+1
  1203  00E9  0820               	movf	?___aldiv,w
  1204  00EA  00BF               	movwf	UART_Init@x
  1205                           
  1206                           ;Uart.c: 9: BRGH = 1;
  1207  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  1208  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  1209  00ED  1518               	bsf	24,2	;volatile
  1210  00EE                     l1440:	
  1211                           
  1212                           ;Uart.c: 10: }
  1213                           ;Uart.c: 11: if (x < 256) {
  1214  00EE  3001               	movlw	1
  1215  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1216  00F0  0240               	subwf	UART_Init@x+1,w
  1217  00F1  3000               	movlw	0
  1218  00F2  1903               	skipnz
  1219  00F3  023F               	subwf	UART_Init@x,w
  1220  00F4  1803               	skipnc
  1221  00F5  0008               	return
  1222                           
  1223                           ;Uart.c: 12: BRGH = 0;
  1224  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  1225  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  1226  00F8  1118               	bcf	24,2	;volatile
  1227                           
  1228                           ;Uart.c: 13: SPBRG = x;
  1229  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1230  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1231  00FB  083F               	movf	UART_Init@x,w
  1232  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1233  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1234  00FE  0099               	movwf	25	;volatile
  1235                           
  1236                           ;Uart.c: 14: SYNC = 0;
  1237  00FF  1218               	bcf	24,4	;volatile
  1238                           
  1239                           ;Uart.c: 15: SPEN = 1;
  1240  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0102  1798               	bsf	24,7	;volatile
  1243                           
  1244                           ;Uart.c: 16: TRISC7 = 1;
  1245  0103  1683               	bsf	3,5	;RP0=1, select bank1
  1246  0104  1303               	bcf	3,6	;RP1=0, select bank1
  1247  0105  1787               	bsf	7,7	;volatile
  1248                           
  1249                           ;Uart.c: 17: TRISC6 = 0;
  1250  0106  1307               	bcf	7,6	;volatile
  1251                           
  1252                           ;Uart.c: 18: TX9 = 0;
  1253  0107  1318               	bcf	24,6	;volatile
  1254                           
  1255                           ;Uart.c: 19: CREN = 1;
  1256  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1258  010A  1618               	bsf	24,4	;volatile
  1259                           
  1260                           ;Uart.c: 20: TXEN = 1;
  1261  010B  1683               	bsf	3,5	;RP0=1, select bank1
  1262  010C  1303               	bcf	3,6	;RP1=0, select bank1
  1263  010D  1698               	bsf	24,5	;volatile
  1264                           
  1265                           ;Uart.c: 21: return 1;
  1266                           ;	Return value of _UART_Init is never used
  1267  010E  0008               	return
  1268  010F                     __end_of_UART_Init:	
  1269                           ;Uart.c: 22: }
  1270                           ;Uart.c: 23: return 0;
  1271                           ;	Return value of _UART_Init is never used
  1272                           
  1273                           
  1274                           	psect	text4
  1275  0306                     __ptext4:	
  1276 ;; *************** function ___aldiv *****************
  1277 ;; Defined at:
  1278 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\aldiv.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  divisor         4    0[BANK0 ] long 
  1281 ;;  dividend        4    4[BANK0 ] long 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  quotient        4   11[BANK0 ] long 
  1284 ;;  sign            1   10[BANK0 ] unsigned char 
  1285 ;;  counter         1    9[BANK0 ] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  4    0[BANK0 ] long 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1295 ;;      Params:         0       8       0       0
  1296 ;;      Locals:         0       6       0       0
  1297 ;;      Temps:          0       1       0       0
  1298 ;;      Totals:         0      15       0       0
  1299 ;;Total ram usage:       15 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    2
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_UART_Init
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function ___aldiv
  1311  0306                     ___aldiv:	
  1312                           
  1313                           ;incstack = 0
  1314                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1315  0306  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0307  1303               	bcf	3,6	;RP1=0, select bank0
  1317  0308  01AA               	clrf	___aldiv@sign
  1318  0309  1FA3               	btfss	___aldiv@divisor+3,7
  1319  030A  2B18               	goto	l341
  1320  030B  09A0               	comf	___aldiv@divisor,f
  1321  030C  09A1               	comf	___aldiv@divisor+1,f
  1322  030D  09A2               	comf	___aldiv@divisor+2,f
  1323  030E  09A3               	comf	___aldiv@divisor+3,f
  1324  030F  0AA0               	incf	___aldiv@divisor,f
  1325  0310  1903               	skipnz
  1326  0311  0AA1               	incf	___aldiv@divisor+1,f
  1327  0312  1903               	skipnz
  1328  0313  0AA2               	incf	___aldiv@divisor+2,f
  1329  0314  1903               	skipnz
  1330  0315  0AA3               	incf	___aldiv@divisor+3,f
  1331  0316  01AA               	clrf	___aldiv@sign
  1332  0317  0AAA               	incf	___aldiv@sign,f
  1333  0318                     l341:	
  1334  0318  1FA7               	btfss	___aldiv@dividend+3,7
  1335  0319  2B29               	goto	l1204
  1336  031A  09A4               	comf	___aldiv@dividend,f
  1337  031B  09A5               	comf	___aldiv@dividend+1,f
  1338  031C  09A6               	comf	___aldiv@dividend+2,f
  1339  031D  09A7               	comf	___aldiv@dividend+3,f
  1340  031E  0AA4               	incf	___aldiv@dividend,f
  1341  031F  1903               	skipnz
  1342  0320  0AA5               	incf	___aldiv@dividend+1,f
  1343  0321  1903               	skipnz
  1344  0322  0AA6               	incf	___aldiv@dividend+2,f
  1345  0323  1903               	skipnz
  1346  0324  0AA7               	incf	___aldiv@dividend+3,f
  1347  0325  3001               	movlw	1
  1348  0326  00A8               	movwf	??___aldiv
  1349  0327  0828               	movf	??___aldiv,w
  1350  0328  06AA               	xorwf	___aldiv@sign,f
  1351  0329                     l1204:	
  1352  0329  3000               	movlw	0
  1353  032A  00AE               	movwf	___aldiv@quotient+3
  1354  032B  3000               	movlw	0
  1355  032C  00AD               	movwf	___aldiv@quotient+2
  1356  032D  3000               	movlw	0
  1357  032E  00AC               	movwf	___aldiv@quotient+1
  1358  032F  3000               	movlw	0
  1359  0330  00AB               	movwf	___aldiv@quotient
  1360  0331  0823               	movf	___aldiv@divisor+3,w
  1361  0332  0422               	iorwf	___aldiv@divisor+2,w
  1362  0333  0421               	iorwf	___aldiv@divisor+1,w
  1363  0334  0420               	iorwf	___aldiv@divisor,w
  1364  0335  1903               	skipnz
  1365  0336  2B7E               	goto	l1226
  1366  0337  01A9               	clrf	___aldiv@counter
  1367  0338  0AA9               	incf	___aldiv@counter,f
  1368  0339                     l1212:	
  1369  0339  1BA3               	btfsc	___aldiv@divisor+3,7
  1370  033A  2B49               	goto	l1214
  1371  033B  3001               	movlw	1
  1372  033C  00A8               	movwf	??___aldiv
  1373  033D                     u1085:	
  1374  033D  1003               	clrc
  1375  033E  0DA0               	rlf	___aldiv@divisor,f
  1376  033F  0DA1               	rlf	___aldiv@divisor+1,f
  1377  0340  0DA2               	rlf	___aldiv@divisor+2,f
  1378  0341  0DA3               	rlf	___aldiv@divisor+3,f
  1379  0342  0BA8               	decfsz	??___aldiv,f
  1380  0343  2B3D               	goto	u1085
  1381  0344  3001               	movlw	1
  1382  0345  00A8               	movwf	??___aldiv
  1383  0346  0828               	movf	??___aldiv,w
  1384  0347  07A9               	addwf	___aldiv@counter,f
  1385  0348  2B39               	goto	l1212
  1386  0349                     l1214:	
  1387  0349  3001               	movlw	1
  1388  034A  00A8               	movwf	??___aldiv
  1389  034B                     u1105:	
  1390  034B  1003               	clrc
  1391  034C  0DAB               	rlf	___aldiv@quotient,f
  1392  034D  0DAC               	rlf	___aldiv@quotient+1,f
  1393  034E  0DAD               	rlf	___aldiv@quotient+2,f
  1394  034F  0DAE               	rlf	___aldiv@quotient+3,f
  1395  0350  0BA8               	decfsz	??___aldiv,f
  1396  0351  2B4B               	goto	u1105
  1397  0352  0823               	movf	___aldiv@divisor+3,w
  1398  0353  0227               	subwf	___aldiv@dividend+3,w
  1399  0354  1D03               	skipz
  1400  0355  2B60               	goto	u1115
  1401  0356  0822               	movf	___aldiv@divisor+2,w
  1402  0357  0226               	subwf	___aldiv@dividend+2,w
  1403  0358  1D03               	skipz
  1404  0359  2B60               	goto	u1115
  1405  035A  0821               	movf	___aldiv@divisor+1,w
  1406  035B  0225               	subwf	___aldiv@dividend+1,w
  1407  035C  1D03               	skipz
  1408  035D  2B60               	goto	u1115
  1409  035E  0820               	movf	___aldiv@divisor,w
  1410  035F  0224               	subwf	___aldiv@dividend,w
  1411  0360                     u1115:	
  1412  0360  1C03               	skipc
  1413  0361  2B71               	goto	l1222
  1414  0362  0820               	movf	___aldiv@divisor,w
  1415  0363  02A4               	subwf	___aldiv@dividend,f
  1416  0364  0821               	movf	___aldiv@divisor+1,w
  1417  0365  1C03               	skipc
  1418  0366  0F21               	incfsz	___aldiv@divisor+1,w
  1419  0367  02A5               	subwf	___aldiv@dividend+1,f
  1420  0368  0822               	movf	___aldiv@divisor+2,w
  1421  0369  1C03               	skipc
  1422  036A  0F22               	incfsz	___aldiv@divisor+2,w
  1423  036B  02A6               	subwf	___aldiv@dividend+2,f
  1424  036C  0823               	movf	___aldiv@divisor+3,w
  1425  036D  1C03               	skipc
  1426  036E  0F23               	incfsz	___aldiv@divisor+3,w
  1427  036F  02A7               	subwf	___aldiv@dividend+3,f
  1428  0370  142B               	bsf	___aldiv@quotient,0
  1429  0371                     l1222:	
  1430  0371  3001               	movlw	1
  1431  0372                     u1125:	
  1432  0372  1003               	clrc
  1433  0373  0CA3               	rrf	___aldiv@divisor+3,f
  1434  0374  0CA2               	rrf	___aldiv@divisor+2,f
  1435  0375  0CA1               	rrf	___aldiv@divisor+1,f
  1436  0376  0CA0               	rrf	___aldiv@divisor,f
  1437  0377  3EFF               	addlw	-1
  1438  0378  1D03               	skipz
  1439  0379  2B72               	goto	u1125
  1440  037A  3001               	movlw	1
  1441  037B  02A9               	subwf	___aldiv@counter,f
  1442  037C  1D03               	btfss	3,2
  1443  037D  2B49               	goto	l1214
  1444  037E                     l1226:	
  1445  037E  082A               	movf	___aldiv@sign,w
  1446  037F  1903               	btfsc	3,2
  1447  0380  2B8C               	goto	l1230
  1448  0381  09AB               	comf	___aldiv@quotient,f
  1449  0382  09AC               	comf	___aldiv@quotient+1,f
  1450  0383  09AD               	comf	___aldiv@quotient+2,f
  1451  0384  09AE               	comf	___aldiv@quotient+3,f
  1452  0385  0AAB               	incf	___aldiv@quotient,f
  1453  0386  1903               	skipnz
  1454  0387  0AAC               	incf	___aldiv@quotient+1,f
  1455  0388  1903               	skipnz
  1456  0389  0AAD               	incf	___aldiv@quotient+2,f
  1457  038A  1903               	skipnz
  1458  038B  0AAE               	incf	___aldiv@quotient+3,f
  1459  038C                     l1230:	
  1460  038C  082E               	movf	___aldiv@quotient+3,w
  1461  038D  00A3               	movwf	?___aldiv+3
  1462  038E  082D               	movf	___aldiv@quotient+2,w
  1463  038F  00A2               	movwf	?___aldiv+2
  1464  0390  082C               	movf	___aldiv@quotient+1,w
  1465  0391  00A1               	movwf	?___aldiv+1
  1466  0392  082B               	movf	___aldiv@quotient,w
  1467  0393  00A0               	movwf	?___aldiv
  1468  0394  0008               	return
  1469  0395                     __end_of___aldiv:	
  1470                           
  1471                           	psect	text5
  1472  0395                     __ptext5:	
  1473 ;; *************** function _Trigger *****************
  1474 ;; Defined at:
  1475 ;;		line 34 in file "Funciones.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1489 ;;      Params:         0       0       0       0
  1490 ;;      Locals:         0       0       0       0
  1491 ;;      Temps:          0       2       0       0
  1492 ;;      Totals:         0       2       0       0
  1493 ;;Total ram usage:        2 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    2
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           
  1504                           ;psect for function _Trigger
  1505  0395                     _Trigger:	
  1506                           
  1507                           ;Funciones.c: 35: GIE = 1;
  1508                           
  1509                           ;incstack = 0
  1510                           ; Regs used in _Trigger: [wreg]
  1511  0395  178B               	bsf	11,7	;volatile
  1512                           
  1513                           ;Funciones.c: 36: RBIE = 1;
  1514  0396  158B               	bsf	11,3	;volatile
  1515                           
  1516                           ;Funciones.c: 38: TRISB = 0b00010000;
  1517  0397  3010               	movlw	16
  1518  0398  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0399  1303               	bcf	3,6	;RP1=0, select bank1
  1520  039A  0086               	movwf	6	;volatile
  1521                           
  1522                           ;Funciones.c: 39: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1523  039B  3006               	movlw	6
  1524  039C  1283               	bcf	3,5	;RP0=0, select bank0
  1525  039D  1303               	bcf	3,6	;RP1=0, select bank0
  1526  039E  00A0               	movwf	??_Trigger
  1527  039F                     u1617:	
  1528  039F  0BA0               	decfsz	??_Trigger,f
  1529  03A0  2B9F               	goto	u1617
  1530  03A1  0000               	nop
  1531                           
  1532                           ;Funciones.c: 40: RB0 = 1;
  1533  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  1534  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  1535  03A4  1406               	bsf	6,0	;volatile
  1536                           
  1537                           ;Funciones.c: 41: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1538  03A5  3006               	movlw	6
  1539  03A6  00A0               	movwf	??_Trigger
  1540  03A7                     u1627:	
  1541  03A7  0BA0               	decfsz	??_Trigger,f
  1542  03A8  2BA7               	goto	u1627
  1543  03A9  0000               	nop
  1544                           
  1545                           ;Funciones.c: 42: RB0 = 0;
  1546  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1547  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1548  03AC  1006               	bcf	6,0	;volatile
  1549                           
  1550                           ;Funciones.c: 44: _delay((unsigned long)((50)*(8000000/4000.0)));
  1551  03AD  3082               	movlw	130
  1552  03AE  00A1               	movwf	??_Trigger+1
  1553  03AF  30DD               	movlw	221
  1554  03B0  00A0               	movwf	??_Trigger
  1555  03B1                     u1637:	
  1556  03B1  0BA0               	decfsz	??_Trigger,f
  1557  03B2  2BB1               	goto	u1637
  1558  03B3  0BA1               	decfsz	??_Trigger+1,f
  1559  03B4  2BB1               	goto	u1637
  1560  03B5  2BB6               	nop2
  1561                           
  1562                           ;Funciones.c: 46: TRISB = 0b00100000;
  1563  03B6  3020               	movlw	32
  1564  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  1565  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  1566  03B9  0086               	movwf	6	;volatile
  1567                           
  1568                           ;Funciones.c: 47: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1569  03BA  3006               	movlw	6
  1570  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1571  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1572  03BD  00A0               	movwf	??_Trigger
  1573  03BE                     u1647:	
  1574  03BE  0BA0               	decfsz	??_Trigger,f
  1575  03BF  2BBE               	goto	u1647
  1576  03C0  0000               	nop
  1577                           
  1578                           ;Funciones.c: 48: RB1 = 1;
  1579  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1580  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1581  03C3  1486               	bsf	6,1	;volatile
  1582                           
  1583                           ;Funciones.c: 49: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1584  03C4  3006               	movlw	6
  1585  03C5  00A0               	movwf	??_Trigger
  1586  03C6                     u1657:	
  1587  03C6  0BA0               	decfsz	??_Trigger,f
  1588  03C7  2BC6               	goto	u1657
  1589  03C8  0000               	nop
  1590                           
  1591                           ;Funciones.c: 50: RB1 = 0;
  1592  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  1593  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  1594  03CB  1086               	bcf	6,1	;volatile
  1595                           
  1596                           ;Funciones.c: 52: _delay((unsigned long)((50)*(8000000/4000.0)));
  1597  03CC  3082               	movlw	130
  1598  03CD  00A1               	movwf	??_Trigger+1
  1599  03CE  30DD               	movlw	221
  1600  03CF  00A0               	movwf	??_Trigger
  1601  03D0                     u1667:	
  1602  03D0  0BA0               	decfsz	??_Trigger,f
  1603  03D1  2BD0               	goto	u1667
  1604  03D2  0BA1               	decfsz	??_Trigger+1,f
  1605  03D3  2BD0               	goto	u1667
  1606  03D4  2BD5               	nop2
  1607                           
  1608                           ;Funciones.c: 54: TRISB = 0b01000000;
  1609  03D5  3040               	movlw	64
  1610  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  1611  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  1612  03D8  0086               	movwf	6	;volatile
  1613                           
  1614                           ;Funciones.c: 55: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1615  03D9  3006               	movlw	6
  1616  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1617  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1618  03DC  00A0               	movwf	??_Trigger
  1619  03DD                     u1677:	
  1620  03DD  0BA0               	decfsz	??_Trigger,f
  1621  03DE  2BDD               	goto	u1677
  1622  03DF  0000               	nop
  1623                           
  1624                           ;Funciones.c: 56: RB2 = 1;
  1625  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  1626  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  1627  03E2  1506               	bsf	6,2	;volatile
  1628                           
  1629                           ;Funciones.c: 57: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1630  03E3  3006               	movlw	6
  1631  03E4  00A0               	movwf	??_Trigger
  1632  03E5                     u1687:	
  1633  03E5  0BA0               	decfsz	??_Trigger,f
  1634  03E6  2BE5               	goto	u1687
  1635  03E7  0000               	nop
  1636                           
  1637                           ;Funciones.c: 58: RB2 = 0;
  1638  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  1639  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  1640  03EA  1106               	bcf	6,2	;volatile
  1641                           
  1642                           ;Funciones.c: 60: _delay((unsigned long)((50)*(8000000/4000.0)));
  1643  03EB  3082               	movlw	130
  1644  03EC  00A1               	movwf	??_Trigger+1
  1645  03ED  30DD               	movlw	221
  1646  03EE  00A0               	movwf	??_Trigger
  1647  03EF                     u1697:	
  1648  03EF  0BA0               	decfsz	??_Trigger,f
  1649  03F0  2BEF               	goto	u1697
  1650  03F1  0BA1               	decfsz	??_Trigger+1,f
  1651  03F2  2BEF               	goto	u1697
  1652  03F3  2BF4               	nop2
  1653                           
  1654                           ;Funciones.c: 62: TRISB = 0b10000000;
  1655  03F4  3080               	movlw	128
  1656  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  1657  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  1658  03F7  0086               	movwf	6	;volatile
  1659                           
  1660                           ;Funciones.c: 63: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1661  03F8  3006               	movlw	6
  1662  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1663  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1664  03FB  00A0               	movwf	??_Trigger
  1665  03FC                     u1707:	
  1666  03FC  0BA0               	decfsz	??_Trigger,f
  1667  03FD  2BFC               	goto	u1707
  1668  03FE  0000               	nop
  1669                           
  1670                           ;Funciones.c: 64: RB3 = 1;
  1671  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1672  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1673  0401  1586               	bsf	6,3	;volatile
  1674                           
  1675                           ;Funciones.c: 65: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1676  0402  3006               	movlw	6
  1677  0403  00A0               	movwf	??_Trigger
  1678  0404                     u1717:	
  1679  0404  0BA0               	decfsz	??_Trigger,f
  1680  0405  2C04               	goto	u1717
  1681  0406  0000               	nop
  1682                           
  1683                           ;Funciones.c: 66: RB3 = 0;
  1684  0407  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0408  1303               	bcf	3,6	;RP1=0, select bank0
  1686  0409  1186               	bcf	6,3	;volatile
  1687                           
  1688                           ;Funciones.c: 68: _delay((unsigned long)((50)*(8000000/4000.0)));
  1689  040A  3082               	movlw	130
  1690  040B  00A1               	movwf	??_Trigger+1
  1691  040C  30DD               	movlw	221
  1692  040D  00A0               	movwf	??_Trigger
  1693  040E                     u1727:	
  1694  040E  0BA0               	decfsz	??_Trigger,f
  1695  040F  2C0E               	goto	u1727
  1696  0410  0BA1               	decfsz	??_Trigger+1,f
  1697  0411  2C0E               	goto	u1727
  1698  0412  2C13               	nop2
  1699                           
  1700                           ;Funciones.c: 70: RBIE = 0;
  1701  0413  118B               	bcf	11,3	;volatile
  1702                           
  1703                           ;Funciones.c: 71: GIE = 0;
  1704  0414  138B               	bcf	11,7	;volatile
  1705  0415  0008               	return
  1706  0416                     __end_of_Trigger:	
  1707                           
  1708                           	psect	text6
  1709  048B                     __ptext6:	
  1710 ;; *************** function _ShiftArrays *****************
  1711 ;; Defined at:
  1712 ;;		line 129 in file "Funciones.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  t4              1    wreg     PTR int 
  1715 ;;		 -> t4(12), 
  1716 ;;  t5              1    0[BANK0 ] PTR int 
  1717 ;;		 -> t5(12), 
  1718 ;;  t6              1    1[BANK0 ] PTR int 
  1719 ;;		 -> t6(12), 
  1720 ;;  t7              1    2[BANK0 ] PTR int 
  1721 ;;		 -> t7(12), 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  t4              1    9[BANK0 ] PTR int 
  1724 ;;		 -> t4(12), 
  1725 ;;  i               1   10[BANK0 ] unsigned char 
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      void 
  1728 ;; Registers used:
  1729 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1735 ;;      Params:         0       3       0       0
  1736 ;;      Locals:         0       2       0       0
  1737 ;;      Temps:          0       6       0       0
  1738 ;;      Totals:         0      11       0       0
  1739 ;;Total ram usage:       11 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; Hardware stack levels required when called:    2
  1742 ;; This function calls:
  1743 ;;		Nothing
  1744 ;; This function is called by:
  1745 ;;		_main
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           
  1750                           ;psect for function _ShiftArrays
  1751  048B                     _ShiftArrays:	
  1752                           
  1753                           ;incstack = 0
  1754                           ; Regs used in _ShiftArrays: [wreg-fsr0h+status,2+status,0]
  1755                           ;ShiftArrays@t4 stored from wreg
  1756  048B  1283               	bcf	3,5	;RP0=0, select bank0
  1757  048C  1303               	bcf	3,6	;RP1=0, select bank0
  1758  048D  00A9               	movwf	ShiftArrays@t4
  1759                           
  1760                           ;Funciones.c: 130: for (char i = 0; i < 4; i++) {
  1761  048E  01AA               	clrf	ShiftArrays@i
  1762  048F                     L1:	
  1763  048F  3004               	movlw	4
  1764  0490  022A               	subwf	ShiftArrays@i,w
  1765  0491  1803               	btfsc	3,0
  1766  0492  0008               	return
  1767                           
  1768                           ;Funciones.c: 131: t4[i + 1] = t4[i];
  1769  0493  082A               	movf	ShiftArrays@i,w
  1770  0494  00A3               	movwf	??_ShiftArrays
  1771  0495  0723               	addwf	??_ShiftArrays,w
  1772  0496  0729               	addwf	ShiftArrays@t4,w
  1773  0497  00A4               	movwf	??_ShiftArrays+1
  1774  0498  0824               	movf	??_ShiftArrays+1,w
  1775  0499  0084               	movwf	4
  1776  049A  1383               	bcf	3,7	;select IRP bank0
  1777  049B  0800               	movf	0,w
  1778  049C  00A5               	movwf	??_ShiftArrays+2
  1779  049D  0A84               	incf	4,f
  1780  049E  0800               	movf	0,w
  1781  049F  00A6               	movwf	??_ShiftArrays+3
  1782  04A0  082A               	movf	ShiftArrays@i,w
  1783  04A1  00A7               	movwf	??_ShiftArrays+4
  1784  04A2  0727               	addwf	??_ShiftArrays+4,w
  1785  04A3  3E02               	addlw	2
  1786  04A4  0729               	addwf	ShiftArrays@t4,w
  1787  04A5  00A8               	movwf	??_ShiftArrays+5
  1788  04A6  0828               	movf	??_ShiftArrays+5,w
  1789  04A7  0084               	movwf	4
  1790  04A8  0825               	movf	??_ShiftArrays+2,w
  1791  04A9  0080               	movwf	0
  1792  04AA  0A84               	incf	4,f
  1793  04AB  0826               	movf	??_ShiftArrays+3,w
  1794  04AC  0080               	movwf	0
  1795                           
  1796                           ;Funciones.c: 132: t5[i + 1] = t5[i];
  1797  04AD  082A               	movf	ShiftArrays@i,w
  1798  04AE  00A3               	movwf	??_ShiftArrays
  1799  04AF  0723               	addwf	??_ShiftArrays,w
  1800  04B0  0720               	addwf	ShiftArrays@t5,w
  1801  04B1  00A4               	movwf	??_ShiftArrays+1
  1802  04B2  0824               	movf	??_ShiftArrays+1,w
  1803  04B3  0084               	movwf	4
  1804  04B4  0800               	movf	0,w
  1805  04B5  00A5               	movwf	??_ShiftArrays+2
  1806  04B6  0A84               	incf	4,f
  1807  04B7  0800               	movf	0,w
  1808  04B8  00A6               	movwf	??_ShiftArrays+3
  1809  04B9  082A               	movf	ShiftArrays@i,w
  1810  04BA  00A7               	movwf	??_ShiftArrays+4
  1811  04BB  0727               	addwf	??_ShiftArrays+4,w
  1812  04BC  3E02               	addlw	2
  1813  04BD  0720               	addwf	ShiftArrays@t5,w
  1814  04BE  00A8               	movwf	??_ShiftArrays+5
  1815  04BF  0828               	movf	??_ShiftArrays+5,w
  1816  04C0  0084               	movwf	4
  1817  04C1  0825               	movf	??_ShiftArrays+2,w
  1818  04C2  0080               	movwf	0
  1819  04C3  0A84               	incf	4,f
  1820  04C4  0826               	movf	??_ShiftArrays+3,w
  1821  04C5  0080               	movwf	0
  1822                           
  1823                           ;Funciones.c: 133: t6[i + 1] = t6[i];
  1824  04C6  082A               	movf	ShiftArrays@i,w
  1825  04C7  00A3               	movwf	??_ShiftArrays
  1826  04C8  0723               	addwf	??_ShiftArrays,w
  1827  04C9  0721               	addwf	ShiftArrays@t6,w
  1828  04CA  00A4               	movwf	??_ShiftArrays+1
  1829  04CB  0824               	movf	??_ShiftArrays+1,w
  1830  04CC  0084               	movwf	4
  1831  04CD  0800               	movf	0,w
  1832  04CE  00A5               	movwf	??_ShiftArrays+2
  1833  04CF  0A84               	incf	4,f
  1834  04D0  0800               	movf	0,w
  1835  04D1  00A6               	movwf	??_ShiftArrays+3
  1836  04D2  082A               	movf	ShiftArrays@i,w
  1837  04D3  00A7               	movwf	??_ShiftArrays+4
  1838  04D4  0727               	addwf	??_ShiftArrays+4,w
  1839  04D5  3E02               	addlw	2
  1840  04D6  0721               	addwf	ShiftArrays@t6,w
  1841  04D7  00A8               	movwf	??_ShiftArrays+5
  1842  04D8  0828               	movf	??_ShiftArrays+5,w
  1843  04D9  0084               	movwf	4
  1844  04DA  0825               	movf	??_ShiftArrays+2,w
  1845  04DB  0080               	movwf	0
  1846  04DC  0A84               	incf	4,f
  1847  04DD  0826               	movf	??_ShiftArrays+3,w
  1848  04DE  0080               	movwf	0
  1849                           
  1850                           ;Funciones.c: 134: t7[i + 1] = t7[i];
  1851  04DF  082A               	movf	ShiftArrays@i,w
  1852  04E0  00A3               	movwf	??_ShiftArrays
  1853  04E1  0723               	addwf	??_ShiftArrays,w
  1854  04E2  0722               	addwf	ShiftArrays@t7,w
  1855  04E3  00A4               	movwf	??_ShiftArrays+1
  1856  04E4  0824               	movf	??_ShiftArrays+1,w
  1857  04E5  0084               	movwf	4
  1858  04E6  0800               	movf	0,w
  1859  04E7  00A5               	movwf	??_ShiftArrays+2
  1860  04E8  0A84               	incf	4,f
  1861  04E9  0800               	movf	0,w
  1862  04EA  00A6               	movwf	??_ShiftArrays+3
  1863  04EB  082A               	movf	ShiftArrays@i,w
  1864  04EC  00A7               	movwf	??_ShiftArrays+4
  1865  04ED  0727               	addwf	??_ShiftArrays+4,w
  1866  04EE  3E02               	addlw	2
  1867  04EF  0722               	addwf	ShiftArrays@t7,w
  1868  04F0  00A8               	movwf	??_ShiftArrays+5
  1869  04F1  0828               	movf	??_ShiftArrays+5,w
  1870  04F2  0084               	movwf	4
  1871  04F3  0825               	movf	??_ShiftArrays+2,w
  1872  04F4  0080               	movwf	0
  1873  04F5  0A84               	incf	4,f
  1874  04F6  0826               	movf	??_ShiftArrays+3,w
  1875  04F7  0080               	movwf	0
  1876  04F8  3001               	movlw	1
  1877  04F9  00A3               	movwf	??_ShiftArrays
  1878  04FA  0823               	movf	??_ShiftArrays,w
  1879  04FB  07AA               	addwf	ShiftArrays@i,f
  1880  04FC  2C8F               	goto	L1
  1881  04FD                     __end_of_ShiftArrays:	
  1882                           
  1883                           	psect	text7
  1884  068C                     __ptext7:	
  1885 ;; *************** function _ResetEcho *****************
  1886 ;; Defined at:
  1887 ;;		line 138 in file "Funciones.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  rbon            1    wreg     PTR unsigned char 
  1890 ;;		 -> rbon(1), NULL(0), 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  rbon            1    1[BANK0 ] PTR unsigned char 
  1893 ;;		 -> rbon(1), NULL(0), 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1903 ;;      Params:         0       0       0       0
  1904 ;;      Locals:         0       1       0       0
  1905 ;;      Temps:          0       1       0       0
  1906 ;;      Totals:         0       2       0       0
  1907 ;;Total ram usage:        2 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    2
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           
  1918                           ;psect for function _ResetEcho
  1919  068C                     _ResetEcho:	
  1920                           
  1921                           ;Funciones.c: 139: rbon = 0;
  1922                           
  1923                           ;incstack = 0
  1924                           ; Regs used in _ResetEcho: [wreg+status,2]
  1925  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1926  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1927  068E  01A1               	clrf	ResetEcho@rbon
  1928                           
  1929                           ;Funciones.c: 140: TRISB = 0b00000000;
  1930  068F  1683               	bsf	3,5	;RP0=1, select bank1
  1931  0690  1303               	bcf	3,6	;RP1=0, select bank1
  1932  0691  0186               	clrf	6	;volatile
  1933                           
  1934                           ;Funciones.c: 141: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1935  0692  3006               	movlw	6
  1936  0693  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0694  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0695  00A0               	movwf	??_ResetEcho
  1939  0696                     u1737:	
  1940  0696  0BA0               	decfsz	??_ResetEcho,f
  1941  0697  2E96               	goto	u1737
  1942  0698  0000               	nop
  1943                           
  1944                           ;Funciones.c: 142: PORTB = 0b00000000;
  1945  0699  1283               	bcf	3,5	;RP0=0, select bank0
  1946  069A  1303               	bcf	3,6	;RP1=0, select bank0
  1947  069B  0186               	clrf	6	;volatile
  1948                           
  1949                           ;Funciones.c: 143: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1950  069C  3006               	movlw	6
  1951  069D  00A0               	movwf	??_ResetEcho
  1952  069E                     u1747:	
  1953  069E  0BA0               	decfsz	??_ResetEcho,f
  1954  069F  2E9E               	goto	u1747
  1955  06A0  0000               	nop
  1956  06A1  0008               	return
  1957  06A2                     __end_of_ResetEcho:	
  1958                           
  1959                           	psect	text8
  1960  0670                     __ptext8:	
  1961 ;; *************** function _Inicializaciones *****************
  1962 ;; Defined at:
  1963 ;;		line 8 in file "Funciones.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1977 ;;      Params:         0       0       0       0
  1978 ;;      Locals:         0       0       0       0
  1979 ;;      Temps:          0       1       0       0
  1980 ;;      Totals:         0       1       0       0
  1981 ;;Total ram usage:        1 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    2
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_main
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           
  1992                           ;psect for function _Inicializaciones
  1993  0670                     _Inicializaciones:	
  1994                           
  1995                           ;Funciones.c: 9: OSCCON = 0b01110101;
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _Inicializaciones: [wreg+status,2]
  1999  0670  3075               	movlw	117
  2000  0671  1683               	bsf	3,5	;RP0=1, select bank1
  2001  0672  1303               	bcf	3,6	;RP1=0, select bank1
  2002  0673  008F               	movwf	15	;volatile
  2003                           
  2004                           ;Funciones.c: 12: TRISB = 0b00000000;
  2005  0674  0186               	clrf	6	;volatile
  2006                           
  2007                           ;Funciones.c: 13: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2008  0675  3003               	movlw	3
  2009  0676  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0677  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0678  00A0               	movwf	??_Inicializaciones
  2012  0679                     u1757:	
  2013  0679  0BA0               	decfsz	??_Inicializaciones,f
  2014  067A  2E79               	goto	u1757
  2015                           
  2016                           ;Funciones.c: 14: ANSELH = 0b00000000;
  2017  067B  1683               	bsf	3,5	;RP0=1, select bank3
  2018  067C  1703               	bsf	3,6	;RP1=1, select bank3
  2019  067D  0189               	clrf	9	;volatile
  2020                           
  2021                           ;Funciones.c: 15: PORTB = 0b00000000;
  2022  067E  1283               	bcf	3,5	;RP0=0, select bank0
  2023  067F  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0680  0186               	clrf	6	;volatile
  2025                           
  2026                           ;Funciones.c: 20: TMR1 = 0;
  2027  0681  018E               	clrf	14	;volatile
  2028  0682  018F               	clrf	15	;volatile
  2029                           
  2030                           ;Funciones.c: 21: T1CON = 0b00010000;
  2031  0683  3010               	movlw	16
  2032  0684  0090               	movwf	16	;volatile
  2033                           
  2034                           ;Funciones.c: 24: INTCON = 0b00001000;
  2035  0685  3008               	movlw	8
  2036  0686  008B               	movwf	11	;volatile
  2037                           
  2038                           ;Funciones.c: 25: IOCB = 0b11110000;
  2039  0687  30F0               	movlw	240
  2040  0688  1683               	bsf	3,5	;RP0=1, select bank1
  2041  0689  1303               	bcf	3,6	;RP1=0, select bank1
  2042  068A  0096               	movwf	22	;volatile
  2043  068B  0008               	return
  2044  068C                     __end_of_Inicializaciones:	
  2045                           
  2046                           	psect	text9
  2047  01BE                     __ptext9:	
  2048 ;; *************** function _CalcularDistancia *****************
  2049 ;; Defined at:
  2050 ;;		line 74 in file "Funciones.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  t4              1    wreg     PTR int 
  2053 ;;		 -> t4(12), 
  2054 ;;  t5              1   33[BANK0 ] PTR int 
  2055 ;;		 -> t5(12), 
  2056 ;;  t6              1   34[BANK0 ] PTR int 
  2057 ;;		 -> t6(12), 
  2058 ;;  t7              1   35[BANK0 ] PTR int 
  2059 ;;		 -> t7(12), 
  2060 ;;  distancias      1   36[BANK0 ] PTR unsigned char 
  2061 ;;		 -> distancias(16), 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  t4              1   38[BANK0 ] PTR int 
  2064 ;;		 -> t4(12), 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2074 ;;      Params:         0       4       0       0
  2075 ;;      Locals:         0       1       0       0
  2076 ;;      Temps:          0       1       0       0
  2077 ;;      Totals:         0       6       0       0
  2078 ;;Total ram usage:        6 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    4
  2081 ;; This function calls:
  2082 ;;		_MediaMedidas
  2083 ;;		___awdiv
  2084 ;;		_sprintf
  2085 ;; This function is called by:
  2086 ;;		_main
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           
  2091                           ;psect for function _CalcularDistancia
  2092  01BE                     _CalcularDistancia:	
  2093                           
  2094                           ;incstack = 0
  2095                           ; Regs used in _CalcularDistancia: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2096                           ;CalcularDistancia@t4 stored from wreg
  2097  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2098  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2099  01C0  00C6               	movwf	CalcularDistancia@t4
  2100                           
  2101                           ;Funciones.c: 76: t4[0] = (t4[0]) / 58;
  2102  01C1  303A               	movlw	58
  2103  01C2  00A0               	movwf	___awdiv@divisor
  2104  01C3  3000               	movlw	0
  2105  01C4  00A1               	movwf	___awdiv@divisor+1
  2106  01C5  0846               	movf	CalcularDistancia@t4,w
  2107  01C6  0084               	movwf	4
  2108  01C7  1383               	bcf	3,7	;select IRP bank0
  2109  01C8  0800               	movf	0,w
  2110  01C9  00A2               	movwf	___awdiv@dividend
  2111  01CA  0A84               	incf	4,f
  2112  01CB  0800               	movf	0,w
  2113  01CC  00A3               	movwf	___awdiv@dividend+1
  2114  01CD  118A  24FD  118A   	fcall	___awdiv
  2115  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2116  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2117  01D2  0846               	movf	CalcularDistancia@t4,w
  2118  01D3  0084               	movwf	4
  2119  01D4  0820               	movf	?___awdiv,w
  2120  01D5  1383               	bcf	3,7	;select IRP bank0
  2121  01D6  0080               	movwf	0
  2122  01D7  0A84               	incf	4,f
  2123  01D8  0821               	movf	?___awdiv+1,w
  2124  01D9  0080               	movwf	0
  2125                           
  2126                           ;Funciones.c: 77: t5[0] = (t5[0]) / 58;
  2127  01DA  303A               	movlw	58
  2128  01DB  00A0               	movwf	___awdiv@divisor
  2129  01DC  3000               	movlw	0
  2130  01DD  00A1               	movwf	___awdiv@divisor+1
  2131  01DE  0841               	movf	CalcularDistancia@t5,w
  2132  01DF  0084               	movwf	4
  2133  01E0  0800               	movf	0,w
  2134  01E1  00A2               	movwf	___awdiv@dividend
  2135  01E2  0A84               	incf	4,f
  2136  01E3  0800               	movf	0,w
  2137  01E4  00A3               	movwf	___awdiv@dividend+1
  2138  01E5  118A  24FD  118A   	fcall	___awdiv
  2139  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2140  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  2141  01EA  0841               	movf	CalcularDistancia@t5,w
  2142  01EB  0084               	movwf	4
  2143  01EC  0820               	movf	?___awdiv,w
  2144  01ED  1383               	bcf	3,7	;select IRP bank0
  2145  01EE  0080               	movwf	0
  2146  01EF  0A84               	incf	4,f
  2147  01F0  0821               	movf	?___awdiv+1,w
  2148  01F1  0080               	movwf	0
  2149                           
  2150                           ;Funciones.c: 78: t6[0] = (t6[0]) / 58;
  2151  01F2  303A               	movlw	58
  2152  01F3  00A0               	movwf	___awdiv@divisor
  2153  01F4  3000               	movlw	0
  2154  01F5  00A1               	movwf	___awdiv@divisor+1
  2155  01F6  0842               	movf	CalcularDistancia@t6,w
  2156  01F7  0084               	movwf	4
  2157  01F8  0800               	movf	0,w
  2158  01F9  00A2               	movwf	___awdiv@dividend
  2159  01FA  0A84               	incf	4,f
  2160  01FB  0800               	movf	0,w
  2161  01FC  00A3               	movwf	___awdiv@dividend+1
  2162  01FD  118A  24FD  118A   	fcall	___awdiv
  2163  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2164  0201  1303               	bcf	3,6	;RP1=0, select bank0
  2165  0202  0842               	movf	CalcularDistancia@t6,w
  2166  0203  0084               	movwf	4
  2167  0204  0820               	movf	?___awdiv,w
  2168  0205  1383               	bcf	3,7	;select IRP bank0
  2169  0206  0080               	movwf	0
  2170  0207  0A84               	incf	4,f
  2171  0208  0821               	movf	?___awdiv+1,w
  2172  0209  0080               	movwf	0
  2173                           
  2174                           ;Funciones.c: 79: t7[0] = (t7[0]) / 58;
  2175  020A  303A               	movlw	58
  2176  020B  00A0               	movwf	___awdiv@divisor
  2177  020C  3000               	movlw	0
  2178  020D  00A1               	movwf	___awdiv@divisor+1
  2179  020E  0843               	movf	CalcularDistancia@t7,w
  2180  020F  0084               	movwf	4
  2181  0210  0800               	movf	0,w
  2182  0211  00A2               	movwf	___awdiv@dividend
  2183  0212  0A84               	incf	4,f
  2184  0213  0800               	movf	0,w
  2185  0214  00A3               	movwf	___awdiv@dividend+1
  2186  0215  118A  24FD  118A   	fcall	___awdiv
  2187  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2189  021A  0843               	movf	CalcularDistancia@t7,w
  2190  021B  0084               	movwf	4
  2191  021C  0820               	movf	?___awdiv,w
  2192  021D  1383               	bcf	3,7	;select IRP bank0
  2193  021E  0080               	movwf	0
  2194  021F  0A84               	incf	4,f
  2195  0220  0821               	movf	?___awdiv+1,w
  2196  0221  0080               	movwf	0
  2197                           
  2198                           ;Funciones.c: 81: MediaMedidas(t4);
  2199  0222  0846               	movf	CalcularDistancia@t4,w
  2200  0223  118A  2416  118A   	fcall	_MediaMedidas
  2201                           
  2202                           ;Funciones.c: 82: MediaMedidas(t5);
  2203  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0228  0841               	movf	CalcularDistancia@t5,w
  2206  0229  118A  2416  118A   	fcall	_MediaMedidas
  2207                           
  2208                           ;Funciones.c: 83: MediaMedidas(t6);
  2209  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2210  022D  1303               	bcf	3,6	;RP1=0, select bank0
  2211  022E  0842               	movf	CalcularDistancia@t6,w
  2212  022F  118A  2416  118A   	fcall	_MediaMedidas
  2213                           
  2214                           ;Funciones.c: 84: MediaMedidas(t7);
  2215  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0234  0843               	movf	CalcularDistancia@t7,w
  2218  0235  118A  2416  118A   	fcall	_MediaMedidas
  2219                           
  2220                           ;Funciones.c: 86: sprintf(distancias, "%u,%u,%u,%u\n\0", t4[5], t5[5], t6[5], t7[5]);
  2221  0238  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2222  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2223  023A  1303               	bcf	3,6	;RP1=0, select bank0
  2224  023B  00C5               	movwf	??_CalcularDistancia
  2225  023C  0845               	movf	??_CalcularDistancia,w
  2226  023D  00AE               	movwf	sprintf@f
  2227  023E  0846               	movf	CalcularDistancia@t4,w
  2228  023F  3E0A               	addlw	10
  2229  0240  0084               	movwf	4
  2230  0241  1383               	bcf	3,7	;select IRP bank0
  2231  0242  0800               	movf	0,w
  2232  0243  00AF               	movwf	?_sprintf+1
  2233  0244  0A84               	incf	4,f
  2234  0245  0800               	movf	0,w
  2235  0246  00B0               	movwf	?_sprintf+2
  2236  0247  0841               	movf	CalcularDistancia@t5,w
  2237  0248  3E0A               	addlw	10
  2238  0249  0084               	movwf	4
  2239  024A  0800               	movf	0,w
  2240  024B  00B1               	movwf	?_sprintf+3
  2241  024C  0A84               	incf	4,f
  2242  024D  0800               	movf	0,w
  2243  024E  00B2               	movwf	?_sprintf+4
  2244  024F  0842               	movf	CalcularDistancia@t6,w
  2245  0250  3E0A               	addlw	10
  2246  0251  0084               	movwf	4
  2247  0252  0800               	movf	0,w
  2248  0253  00B3               	movwf	?_sprintf+5
  2249  0254  0A84               	incf	4,f
  2250  0255  0800               	movf	0,w
  2251  0256  00B4               	movwf	?_sprintf+6
  2252  0257  0843               	movf	CalcularDistancia@t7,w
  2253  0258  3E0A               	addlw	10
  2254  0259  0084               	movwf	4
  2255  025A  0800               	movf	0,w
  2256  025B  00B5               	movwf	?_sprintf+7
  2257  025C  0A84               	incf	4,f
  2258  025D  0800               	movf	0,w
  2259  025E  00B6               	movwf	?_sprintf+8
  2260  025F  0844               	movf	CalcularDistancia@distancias,w
  2261  0260  118A  210F         	fcall	_sprintf
  2262  0262  0008               	return
  2263  0263                     __end_of_CalcularDistancia:	
  2264                           
  2265                           	psect	text10
  2266  010F                     __ptext10:	
  2267 ;; *************** function _sprintf *****************
  2268 ;; Defined at:
  2269 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  sp              1    wreg     PTR unsigned char 
  2272 ;;		 -> distancias(16), 
  2273 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  2274 ;;		 -> STR_1(14), 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  sp              1   31[BANK0 ] PTR unsigned char 
  2277 ;;		 -> distancias(16), 
  2278 ;;  tmpval          4    0        struct .
  2279 ;;  val             2   28[BANK0 ] unsigned int 
  2280 ;;  cp              2    0        PTR const unsigned char 
  2281 ;;  len             2    0        unsigned int 
  2282 ;;  c               1   32[BANK0 ] char 
  2283 ;;  prec            1   30[BANK0 ] char 
  2284 ;;  ap              1   27[BANK0 ] PTR void [1]
  2285 ;;		 -> ?_sprintf(2), 
  2286 ;;  flag            1   26[BANK0 ] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  2   14[BANK0 ] int 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2296 ;;      Params:         0       9       0       0
  2297 ;;      Locals:         0       7       0       0
  2298 ;;      Temps:          0       3       0       0
  2299 ;;      Totals:         0      19       0       0
  2300 ;;Total ram usage:       19 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    3
  2303 ;; This function calls:
  2304 ;;		___lwdiv
  2305 ;;		___lwmod
  2306 ;; This function is called by:
  2307 ;;		_CalcularDistancia
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _sprintf
  2313  010F                     _sprintf:	
  2314                           
  2315                           ;incstack = 0
  2316                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2317                           ;sprintf@sp stored from wreg
  2318  010F  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0110  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0111  00BF               	movwf	sprintf@sp
  2321                           
  2322                           ;doprnt.c: 494: va_list ap;
  2323                           ;doprnt.c: 499: signed char c;
  2324                           ;doprnt.c: 506: signed char prec;
  2325                           ;doprnt.c: 508: unsigned char flag;
  2326                           ;doprnt.c: 523: union {
  2327                           ;doprnt.c: 524: unsigned long vd;
  2328                           ;doprnt.c: 525: double integ;
  2329                           ;doprnt.c: 526: } tmpval;
  2330                           ;doprnt.c: 528: unsigned int val;
  2331                           ;doprnt.c: 529: unsigned len;
  2332                           ;doprnt.c: 530: const char * cp;
  2333                           ;doprnt.c: 533: *ap = __va_start();
  2334  0112  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2335  0113  00B7               	movwf	??_sprintf
  2336  0114  0837               	movf	??_sprintf,w
  2337  0115  00BB               	movwf	sprintf@ap
  2338  0116                     l1184:	
  2339                           ;doprnt.c: 536: while(c = *f++) {
  2340                           
  2341  0116  3001               	movlw	1
  2342  0117  07AE               	addwf	sprintf@f,f
  2343  0118  30FF               	movlw	-1
  2344  0119  072E               	addwf	sprintf@f,w
  2345  011A  0084               	movwf	4
  2346  011B  118A  2652  118A   	fcall	stringdir
  2347  011E  00B7               	movwf	??_sprintf
  2348  011F  0837               	movf	??_sprintf,w
  2349  0120  00C0               	movwf	sprintf@c
  2350  0121  0840               	movf	sprintf@c,w
  2351  0122  1903               	btfsc	3,2
  2352  0123  29B9               	goto	l1186
  2353                           
  2354                           ;doprnt.c: 538: if(c != '%')
  2355  0124  3025               	movlw	37
  2356  0125  0640               	xorwf	sprintf@c,w
  2357  0126  1903               	btfsc	3,2
  2358  0127  2934               	goto	l1150
  2359                           
  2360                           ;doprnt.c: 540: {
  2361                           ;doprnt.c: 541: ((*sp++ = (c)));
  2362  0128  0840               	movf	sprintf@c,w
  2363  0129  00B7               	movwf	??_sprintf
  2364  012A  083F               	movf	sprintf@sp,w
  2365  012B  0084               	movwf	4
  2366  012C  0837               	movf	??_sprintf,w
  2367  012D  1383               	bcf	3,7	;select IRP bank0
  2368  012E  0080               	movwf	0
  2369  012F  3001               	movlw	1
  2370  0130  00B7               	movwf	??_sprintf
  2371  0131  0837               	movf	??_sprintf,w
  2372  0132  07BF               	addwf	sprintf@sp,f
  2373                           
  2374                           ;doprnt.c: 542: continue;
  2375  0133  2916               	goto	l1184
  2376  0134                     l1150:	
  2377                           
  2378                           ;doprnt.c: 543: }
  2379                           ;doprnt.c: 548: flag = 0;
  2380  0134  01BA               	clrf	sprintf@flag
  2381                           
  2382                           ;doprnt.c: 635: switch(c = *f++) {
  2383  0135  293B               	goto	l1156
  2384  0136                     l1152:	
  2385                           ;doprnt.c: 817: case 'u':
  2386                           
  2387                           ;doprnt.c: 813: continue;
  2388                           
  2389                           ;doprnt.c: 802: default:
  2390                           
  2391                           ;doprnt.c: 638: goto alldone;
  2392                           
  2393                           ;doprnt.c: 637: case 0:
  2394                           
  2395                           
  2396                           ;doprnt.c: 818: flag |= 0xC0;
  2397  0136  30C0               	movlw	192
  2398  0137  00B7               	movwf	??_sprintf
  2399  0138  0837               	movf	??_sprintf,w
  2400  0139  04BA               	iorwf	sprintf@flag,f
  2401                           
  2402                           ;doprnt.c: 822: }
  2403                           
  2404                           ;doprnt.c: 819: break;
  2405  013A  294B               	goto	l1158
  2406  013B                     l1156:	
  2407  013B  3001               	movlw	1
  2408  013C  07AE               	addwf	sprintf@f,f
  2409  013D  30FF               	movlw	-1
  2410  013E  072E               	addwf	sprintf@f,w
  2411  013F  0084               	movwf	4
  2412  0140  118A  2652  118A   	fcall	stringdir
  2413  0143  00C0               	movwf	sprintf@c
  2414                           
  2415                           ; Switch size 1, requested type "space"
  2416                           ; Number of cases is 2, Range of values is 0 to 117
  2417                           ; switch strategies available:
  2418                           ; Name         Instructions Cycles
  2419                           ; simple_byte            7     4 (average)
  2420                           ; direct_byte          243     7 (fixed)
  2421                           ; jumptable            260     6 (fixed)
  2422                           ;	Chosen strategy is simple_byte
  2423  0144  3A00               	xorlw	0	; case 0
  2424  0145  1903               	skipnz
  2425  0146  29B9               	goto	l1186
  2426  0147  3A75               	xorlw	117	; case 117
  2427  0148  1903               	skipnz
  2428  0149  2936               	goto	l1152
  2429  014A  2916               	goto	l1184
  2430  014B                     l1158:	
  2431                           
  2432                           ;doprnt.c: 1273: {
  2433                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2434  014B  083B               	movf	sprintf@ap,w
  2435  014C  0084               	movwf	4
  2436  014D  1383               	bcf	3,7	;select IRP bank0
  2437  014E  0800               	movf	0,w
  2438  014F  00BC               	movwf	sprintf@val
  2439  0150  0A84               	incf	4,f
  2440  0151  0800               	movf	0,w
  2441  0152  00BD               	movwf	sprintf@val+1
  2442  0153  3002               	movlw	2
  2443  0154  00B7               	movwf	??_sprintf
  2444  0155  0837               	movf	??_sprintf,w
  2445  0156  07BB               	addwf	sprintf@ap,f
  2446                           
  2447                           ;doprnt.c: 1287: }
  2448                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2449  0157  01C0               	clrf	sprintf@c
  2450  0158  0AC0               	incf	sprintf@c,f
  2451  0159  3005               	movlw	5
  2452  015A  0640               	xorwf	sprintf@c,w
  2453  015B  1903               	btfsc	3,2
  2454  015C  297A               	goto	l1174
  2455  015D                     l1168:	
  2456                           
  2457                           ;doprnt.c: 1306: if(val < dpowers[c])
  2458  015D  0840               	movf	sprintf@c,w
  2459  015E  00B7               	movwf	??_sprintf
  2460  015F  0737               	addwf	??_sprintf,w
  2461  0160  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2462  0161  0084               	movwf	4
  2463  0162  118A  2652  118A   	fcall	stringdir
  2464  0165  00B8               	movwf	??_sprintf+1
  2465  0166  118A  2652  118A   	fcall	stringdir
  2466  0169  00B9               	movwf	??_sprintf+2
  2467  016A  0839               	movf	??_sprintf+2,w
  2468  016B  023D               	subwf	sprintf@val+1,w
  2469  016C  1D03               	skipz
  2470  016D  2970               	goto	u1005
  2471  016E  0838               	movf	??_sprintf+1,w
  2472  016F  023C               	subwf	sprintf@val,w
  2473  0170                     u1005:	
  2474  0170  1C03               	btfss	3,0
  2475  0171  297A               	goto	l1174
  2476                           
  2477                           ;doprnt.c: 1307: break;
  2478  0172  3001               	movlw	1
  2479  0173  00B7               	movwf	??_sprintf
  2480  0174  0837               	movf	??_sprintf,w
  2481  0175  07C0               	addwf	sprintf@c,f
  2482  0176  3005               	movlw	5
  2483  0177  0640               	xorwf	sprintf@c,w
  2484  0178  1D03               	btfss	3,2
  2485  0179  295D               	goto	l1168
  2486  017A                     l1174:	
  2487                           
  2488                           ;doprnt.c: 1422: {
  2489                           ;doprnt.c: 1469: }
  2490                           ;doprnt.c: 1472: prec = c;
  2491  017A  0840               	movf	sprintf@c,w
  2492  017B  00B7               	movwf	??_sprintf
  2493  017C  0837               	movf	??_sprintf,w
  2494  017D  00BE               	movwf	sprintf@prec
  2495  017E                     l1182:	
  2496                           ;doprnt.c: 1474: while(prec--) {
  2497                           
  2498  017E  30FF               	movlw	255
  2499  017F  00B7               	movwf	??_sprintf
  2500  0180  0837               	movf	??_sprintf,w
  2501  0181  07BE               	addwf	sprintf@prec,f
  2502  0182  0A3E               	incf	sprintf@prec,w
  2503  0183  1903               	btfsc	3,2
  2504  0184  2916               	goto	l1184
  2505                           
  2506                           ;doprnt.c: 1478: {
  2507                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2508  0185  300A               	movlw	10
  2509  0186  00A8               	movwf	___lwmod@divisor
  2510  0187  3000               	movlw	0
  2511  0188  00A9               	movwf	___lwmod@divisor+1
  2512  0189  083E               	movf	sprintf@prec,w
  2513  018A  00B7               	movwf	??_sprintf
  2514  018B  0737               	addwf	??_sprintf,w
  2515  018C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2516  018D  0084               	movwf	4
  2517  018E  118A  2652  118A   	fcall	stringdir
  2518  0191  00A0               	movwf	___lwdiv@divisor
  2519  0192  118A  2652  118A   	fcall	stringdir
  2520  0195  00A1               	movwf	___lwdiv@divisor+1
  2521  0196  083D               	movf	sprintf@val+1,w
  2522  0197  00A3               	movwf	___lwdiv@dividend+1
  2523  0198  083C               	movf	sprintf@val,w
  2524  0199  00A2               	movwf	___lwdiv@dividend
  2525  019A  118A  259C  118A   	fcall	___lwdiv
  2526  019D  1283               	bcf	3,5	;RP0=0, select bank0
  2527  019E  1303               	bcf	3,6	;RP1=0, select bank0
  2528  019F  0821               	movf	?___lwdiv+1,w
  2529  01A0  00AB               	movwf	___lwmod@dividend+1
  2530  01A1  0820               	movf	?___lwdiv,w
  2531  01A2  00AA               	movwf	___lwmod@dividend
  2532  01A3  118A  25DA  118A   	fcall	___lwmod
  2533  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  2534  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  2535  01A8  0828               	movf	?___lwmod,w
  2536  01A9  3E30               	addlw	48
  2537  01AA  00B8               	movwf	??_sprintf+1
  2538  01AB  0838               	movf	??_sprintf+1,w
  2539  01AC  00C0               	movwf	sprintf@c
  2540                           
  2541                           ;doprnt.c: 1523: }
  2542                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2543  01AD  0840               	movf	sprintf@c,w
  2544  01AE  00B7               	movwf	??_sprintf
  2545  01AF  083F               	movf	sprintf@sp,w
  2546  01B0  0084               	movwf	4
  2547  01B1  0837               	movf	??_sprintf,w
  2548  01B2  1383               	bcf	3,7	;select IRP bank0
  2549  01B3  0080               	movwf	0
  2550  01B4  3001               	movlw	1
  2551  01B5  00B7               	movwf	??_sprintf
  2552  01B6  0837               	movf	??_sprintf,w
  2553  01B7  07BF               	addwf	sprintf@sp,f
  2554  01B8  297E               	goto	l1182
  2555  01B9                     l1186:	
  2556                           ;doprnt.c: 1525: }
  2557                           ;doprnt.c: 1533: }
  2558                           ;doprnt.c: 1535: alldone:
  2559                           
  2560                           
  2561                           ;doprnt.c: 1538: *sp = 0;
  2562  01B9  083F               	movf	sprintf@sp,w
  2563  01BA  0084               	movwf	4
  2564  01BB  1383               	bcf	3,7	;select IRP bank0
  2565  01BC  0180               	clrf	0
  2566  01BD  0008               	return
  2567  01BE                     __end_of_sprintf:	
  2568                           ;doprnt.c: 1540: return 0;
  2569                           ;	Return value of _sprintf is never used
  2570                           
  2571                           
  2572                           	psect	text11
  2573  05DA                     __ptext11:	
  2574 ;; *************** function ___lwmod *****************
  2575 ;; Defined at:
  2576 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  divisor         2    8[BANK0 ] unsigned int 
  2579 ;;  dividend        2   10[BANK0 ] unsigned int 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  counter         1   13[BANK0 ] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  2    8[BANK0 ] unsigned int 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2591 ;;      Params:         0       4       0       0
  2592 ;;      Locals:         0       1       0       0
  2593 ;;      Temps:          0       1       0       0
  2594 ;;      Totals:         0       6       0       0
  2595 ;;Total ram usage:        6 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    2
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_sprintf
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function ___lwmod
  2607  05DA                     ___lwmod:	
  2608                           
  2609                           ;incstack = 0
  2610                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2611  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2612  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2613  05DC  0828               	movf	___lwmod@divisor,w
  2614  05DD  0429               	iorwf	___lwmod@divisor+1,w
  2615  05DE  1903               	btfsc	3,2
  2616  05DF  2E09               	goto	l1116
  2617  05E0  01AD               	clrf	___lwmod@counter
  2618  05E1  0AAD               	incf	___lwmod@counter,f
  2619  05E2                     l1106:	
  2620  05E2  1BA9               	btfsc	___lwmod@divisor+1,7
  2621  05E3  2DF0               	goto	l1108
  2622  05E4  3001               	movlw	1
  2623  05E5                     u895:	
  2624  05E5  1003               	clrc
  2625  05E6  0DA8               	rlf	___lwmod@divisor,f
  2626  05E7  0DA9               	rlf	___lwmod@divisor+1,f
  2627  05E8  3EFF               	addlw	-1
  2628  05E9  1D03               	skipz
  2629  05EA  2DE5               	goto	u895
  2630  05EB  3001               	movlw	1
  2631  05EC  00AC               	movwf	??___lwmod
  2632  05ED  082C               	movf	??___lwmod,w
  2633  05EE  07AD               	addwf	___lwmod@counter,f
  2634  05EF  2DE2               	goto	l1106
  2635  05F0                     l1108:	
  2636  05F0  0829               	movf	___lwmod@divisor+1,w
  2637  05F1  022B               	subwf	___lwmod@dividend+1,w
  2638  05F2  1D03               	skipz
  2639  05F3  2DF6               	goto	u915
  2640  05F4  0828               	movf	___lwmod@divisor,w
  2641  05F5  022A               	subwf	___lwmod@dividend,w
  2642  05F6                     u915:	
  2643  05F6  1C03               	skipc
  2644  05F7  2DFE               	goto	l1112
  2645  05F8  0828               	movf	___lwmod@divisor,w
  2646  05F9  02AA               	subwf	___lwmod@dividend,f
  2647  05FA  0829               	movf	___lwmod@divisor+1,w
  2648  05FB  1C03               	skipc
  2649  05FC  03AB               	decf	___lwmod@dividend+1,f
  2650  05FD  02AB               	subwf	___lwmod@dividend+1,f
  2651  05FE                     l1112:	
  2652  05FE  3001               	movlw	1
  2653  05FF                     u925:	
  2654  05FF  1003               	clrc
  2655  0600  0CA9               	rrf	___lwmod@divisor+1,f
  2656  0601  0CA8               	rrf	___lwmod@divisor,f
  2657  0602  3EFF               	addlw	-1
  2658  0603  1D03               	skipz
  2659  0604  2DFF               	goto	u925
  2660  0605  3001               	movlw	1
  2661  0606  02AD               	subwf	___lwmod@counter,f
  2662  0607  1D03               	btfss	3,2
  2663  0608  2DF0               	goto	l1108
  2664  0609                     l1116:	
  2665  0609  082B               	movf	___lwmod@dividend+1,w
  2666  060A  00A9               	movwf	?___lwmod+1
  2667  060B  082A               	movf	___lwmod@dividend,w
  2668  060C  00A8               	movwf	?___lwmod
  2669  060D  0008               	return
  2670  060E                     __end_of___lwmod:	
  2671                           
  2672                           	psect	text12
  2673  04FD                     __ptext12:	
  2674 ;; *************** function ___awdiv *****************
  2675 ;; Defined at:
  2676 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  divisor         2    0[BANK0 ] int 
  2679 ;;  dividend        2    2[BANK0 ] int 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  quotient        2    7[BANK0 ] int 
  2682 ;;  sign            1    6[BANK0 ] unsigned char 
  2683 ;;  counter         1    5[BANK0 ] unsigned char 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  2    0[BANK0 ] int 
  2686 ;; Registers used:
  2687 ;;		wreg, status,2, status,0
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2693 ;;      Params:         0       4       0       0
  2694 ;;      Locals:         0       4       0       0
  2695 ;;      Temps:          0       1       0       0
  2696 ;;      Totals:         0       9       0       0
  2697 ;;Total ram usage:        9 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    2
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_CalcularDistancia
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           
  2708                           ;psect for function ___awdiv
  2709  04FD                     ___awdiv:	
  2710                           
  2711                           ;incstack = 0
  2712                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2713  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2714  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2715  04FF  01A6               	clrf	___awdiv@sign
  2716  0500  1FA1               	btfss	___awdiv@divisor+1,7
  2717  0501  2D09               	goto	l1242
  2718  0502  09A0               	comf	___awdiv@divisor,f
  2719  0503  09A1               	comf	___awdiv@divisor+1,f
  2720  0504  0AA0               	incf	___awdiv@divisor,f
  2721  0505  1903               	skipnz
  2722  0506  0AA1               	incf	___awdiv@divisor+1,f
  2723  0507  01A6               	clrf	___awdiv@sign
  2724  0508  0AA6               	incf	___awdiv@sign,f
  2725  0509                     l1242:	
  2726  0509  1FA3               	btfss	___awdiv@dividend+1,7
  2727  050A  2D14               	goto	l1248
  2728  050B  09A2               	comf	___awdiv@dividend,f
  2729  050C  09A3               	comf	___awdiv@dividend+1,f
  2730  050D  0AA2               	incf	___awdiv@dividend,f
  2731  050E  1903               	skipnz
  2732  050F  0AA3               	incf	___awdiv@dividend+1,f
  2733  0510  3001               	movlw	1
  2734  0511  00A4               	movwf	??___awdiv
  2735  0512  0824               	movf	??___awdiv,w
  2736  0513  06A6               	xorwf	___awdiv@sign,f
  2737  0514                     l1248:	
  2738  0514  01A7               	clrf	___awdiv@quotient
  2739  0515  01A8               	clrf	___awdiv@quotient+1
  2740  0516  0820               	movf	___awdiv@divisor,w
  2741  0517  0421               	iorwf	___awdiv@divisor+1,w
  2742  0518  1903               	btfsc	3,2
  2743  0519  2D4B               	goto	l1270
  2744  051A  01A5               	clrf	___awdiv@counter
  2745  051B  0AA5               	incf	___awdiv@counter,f
  2746  051C                     l1258:	
  2747  051C  1BA1               	btfsc	___awdiv@divisor+1,7
  2748  051D  2D2A               	goto	l1260
  2749  051E  3001               	movlw	1
  2750  051F                     u1185:	
  2751  051F  1003               	clrc
  2752  0520  0DA0               	rlf	___awdiv@divisor,f
  2753  0521  0DA1               	rlf	___awdiv@divisor+1,f
  2754  0522  3EFF               	addlw	-1
  2755  0523  1D03               	skipz
  2756  0524  2D1F               	goto	u1185
  2757  0525  3001               	movlw	1
  2758  0526  00A4               	movwf	??___awdiv
  2759  0527  0824               	movf	??___awdiv,w
  2760  0528  07A5               	addwf	___awdiv@counter,f
  2761  0529  2D1C               	goto	l1258
  2762  052A                     l1260:	
  2763  052A  3001               	movlw	1
  2764  052B                     u1205:	
  2765  052B  1003               	clrc
  2766  052C  0DA7               	rlf	___awdiv@quotient,f
  2767  052D  0DA8               	rlf	___awdiv@quotient+1,f
  2768  052E  3EFF               	addlw	-1
  2769  052F  1D03               	skipz
  2770  0530  2D2B               	goto	u1205
  2771  0531  0821               	movf	___awdiv@divisor+1,w
  2772  0532  0223               	subwf	___awdiv@dividend+1,w
  2773  0533  1D03               	skipz
  2774  0534  2D37               	goto	u1215
  2775  0535  0820               	movf	___awdiv@divisor,w
  2776  0536  0222               	subwf	___awdiv@dividend,w
  2777  0537                     u1215:	
  2778  0537  1C03               	skipc
  2779  0538  2D40               	goto	l1266
  2780  0539  0820               	movf	___awdiv@divisor,w
  2781  053A  02A2               	subwf	___awdiv@dividend,f
  2782  053B  0821               	movf	___awdiv@divisor+1,w
  2783  053C  1C03               	skipc
  2784  053D  03A3               	decf	___awdiv@dividend+1,f
  2785  053E  02A3               	subwf	___awdiv@dividend+1,f
  2786  053F  1427               	bsf	___awdiv@quotient,0
  2787  0540                     l1266:	
  2788  0540  3001               	movlw	1
  2789  0541                     u1225:	
  2790  0541  1003               	clrc
  2791  0542  0CA1               	rrf	___awdiv@divisor+1,f
  2792  0543  0CA0               	rrf	___awdiv@divisor,f
  2793  0544  3EFF               	addlw	-1
  2794  0545  1D03               	skipz
  2795  0546  2D41               	goto	u1225
  2796  0547  3001               	movlw	1
  2797  0548  02A5               	subwf	___awdiv@counter,f
  2798  0549  1D03               	btfss	3,2
  2799  054A  2D2A               	goto	l1260
  2800  054B                     l1270:	
  2801  054B  0826               	movf	___awdiv@sign,w
  2802  054C  1903               	btfsc	3,2
  2803  054D  2D53               	goto	l1274
  2804  054E  09A7               	comf	___awdiv@quotient,f
  2805  054F  09A8               	comf	___awdiv@quotient+1,f
  2806  0550  0AA7               	incf	___awdiv@quotient,f
  2807  0551  1903               	skipnz
  2808  0552  0AA8               	incf	___awdiv@quotient+1,f
  2809  0553                     l1274:	
  2810  0553  0828               	movf	___awdiv@quotient+1,w
  2811  0554  00A1               	movwf	?___awdiv+1
  2812  0555  0827               	movf	___awdiv@quotient,w
  2813  0556  00A0               	movwf	?___awdiv
  2814  0557  0008               	return
  2815  0558                     __end_of___awdiv:	
  2816                           
  2817                           	psect	text13
  2818  0416                     __ptext13:	
  2819 ;; *************** function _MediaMedidas *****************
  2820 ;; Defined at:
  2821 ;;		line 89 in file "Funciones.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  t               1    wreg     PTR int 
  2824 ;;		 -> t7(12), t6(12), t5(12), t4(12), 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  t               1   15[BANK0 ] PTR int 
  2827 ;;		 -> t7(12), t6(12), t5(12), t4(12), 
  2828 ;;  i               1   16[BANK0 ] unsigned char 
  2829 ;;  sum             2   12[BANK0 ] unsigned int 
  2830 ;;  num             1   14[BANK0 ] unsigned char 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      void 
  2833 ;; Registers used:
  2834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2840 ;;      Params:         0       0       0       0
  2841 ;;      Locals:         0       5       0       0
  2842 ;;      Temps:          0       4       0       0
  2843 ;;      Totals:         0       9       0       0
  2844 ;;Total ram usage:        9 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:    3
  2847 ;; This function calls:
  2848 ;;		___lwdiv
  2849 ;; This function is called by:
  2850 ;;		_CalcularDistancia
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           
  2855                           ;psect for function _MediaMedidas
  2856  0416                     _MediaMedidas:	
  2857                           
  2858                           ;incstack = 0
  2859                           ; Regs used in _MediaMedidas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2860                           ;MediaMedidas@t stored from wreg
  2861  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0418  00AF               	movwf	MediaMedidas@t
  2864                           
  2865                           ;Funciones.c: 90: char num = 0;
  2866  0419  01AE               	clrf	MediaMedidas@num
  2867                           
  2868                           ;Funciones.c: 91: unsigned int sum = 0;
  2869  041A  01AC               	clrf	MediaMedidas@sum
  2870  041B  01AD               	clrf	MediaMedidas@sum+1
  2871                           
  2872                           ;Funciones.c: 93: for (char i = 0; i < 5; i++) {
  2873  041C  01B0               	clrf	MediaMedidas@i
  2874  041D  3005               	movlw	5
  2875  041E  0230               	subwf	MediaMedidas@i,w
  2876  041F  1803               	btfsc	3,0
  2877  0420  2C72               	goto	l1140
  2878  0421                     l1126:	
  2879                           
  2880                           ;Funciones.c: 94: if ((t[i] > 400) || (t[i] < 0)) {
  2881  0421  0830               	movf	MediaMedidas@i,w
  2882  0422  00A8               	movwf	??_MediaMedidas
  2883  0423  0728               	addwf	??_MediaMedidas,w
  2884  0424  072F               	addwf	MediaMedidas@t,w
  2885  0425  00A9               	movwf	??_MediaMedidas+1
  2886  0426  0829               	movf	??_MediaMedidas+1,w
  2887  0427  0084               	movwf	4
  2888  0428  1383               	bcf	3,7	;select IRP bank0
  2889  0429  0800               	movf	0,w
  2890  042A  00AA               	movwf	??_MediaMedidas+2
  2891  042B  0A84               	incf	4,f
  2892  042C  0800               	movf	0,w
  2893  042D  00AB               	movwf	??_MediaMedidas+3
  2894  042E  082B               	movf	??_MediaMedidas+3,w
  2895  042F  3A80               	xorlw	128
  2896  0430  00FF               	movwf	127
  2897  0431  3081               	movlw	129
  2898  0432  027F               	subwf	127,w
  2899  0433  1D03               	skipz
  2900  0434  2C37               	goto	u955
  2901  0435  3091               	movlw	145
  2902  0436  022A               	subwf	??_MediaMedidas+2,w
  2903  0437                     u955:	
  2904  0437  1803               	skipnc
  2905  0438  2C46               	goto	l1130
  2906  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2907  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2908  043B  0830               	movf	MediaMedidas@i,w
  2909  043C  00A8               	movwf	??_MediaMedidas
  2910  043D  0728               	addwf	??_MediaMedidas,w
  2911  043E  072F               	addwf	MediaMedidas@t,w
  2912  043F  00A9               	movwf	??_MediaMedidas+1
  2913  0440  0829               	movf	??_MediaMedidas+1,w
  2914  0441  0084               	movwf	4
  2915  0442  0A84               	incf	4,f
  2916  0443  1383               	bcf	3,7	;select IRP bank0
  2917  0444  1F80               	btfss	0,7
  2918  0445  2C54               	goto	l1132
  2919  0446                     l1130:	
  2920                           
  2921                           ;Funciones.c: 95: t[i] = 0;
  2922  0446  1283               	bcf	3,5	;RP0=0, select bank0
  2923  0447  1303               	bcf	3,6	;RP1=0, select bank0
  2924  0448  0830               	movf	MediaMedidas@i,w
  2925  0449  00A8               	movwf	??_MediaMedidas
  2926  044A  0728               	addwf	??_MediaMedidas,w
  2927  044B  072F               	addwf	MediaMedidas@t,w
  2928  044C  00A9               	movwf	??_MediaMedidas+1
  2929  044D  0829               	movf	??_MediaMedidas+1,w
  2930  044E  0084               	movwf	4
  2931  044F  1383               	bcf	3,7	;select IRP bank0
  2932  0450  0180               	clrf	0
  2933  0451  0A84               	incf	4,f
  2934  0452  0180               	clrf	0
  2935                           
  2936                           ;Funciones.c: 96: } else {
  2937  0453  2C6A               	goto	l1136
  2938  0454                     l1132:	
  2939                           
  2940                           ;Funciones.c: 97: sum += t[i];
  2941  0454  0830               	movf	MediaMedidas@i,w
  2942  0455  00A8               	movwf	??_MediaMedidas
  2943  0456  0728               	addwf	??_MediaMedidas,w
  2944  0457  072F               	addwf	MediaMedidas@t,w
  2945  0458  00A9               	movwf	??_MediaMedidas+1
  2946  0459  0829               	movf	??_MediaMedidas+1,w
  2947  045A  0084               	movwf	4
  2948  045B  0800               	movf	0,w
  2949  045C  00AA               	movwf	??_MediaMedidas+2
  2950  045D  0A84               	incf	4,f
  2951  045E  0800               	movf	0,w
  2952  045F  00AB               	movwf	??_MediaMedidas+3
  2953  0460  082A               	movf	??_MediaMedidas+2,w
  2954  0461  07AC               	addwf	MediaMedidas@sum,f
  2955  0462  1803               	skipnc
  2956  0463  0AAD               	incf	MediaMedidas@sum+1,f
  2957  0464  082B               	movf	??_MediaMedidas+3,w
  2958  0465  07AD               	addwf	MediaMedidas@sum+1,f
  2959                           
  2960                           ;Funciones.c: 98: num += 1;
  2961  0466  3001               	movlw	1
  2962  0467  00A8               	movwf	??_MediaMedidas
  2963  0468  0828               	movf	??_MediaMedidas,w
  2964  0469  07AE               	addwf	MediaMedidas@num,f
  2965  046A                     l1136:	
  2966  046A  3001               	movlw	1
  2967  046B  00A8               	movwf	??_MediaMedidas
  2968  046C  0828               	movf	??_MediaMedidas,w
  2969  046D  07B0               	addwf	MediaMedidas@i,f
  2970  046E  3005               	movlw	5
  2971  046F  0230               	subwf	MediaMedidas@i,w
  2972  0470  1C03               	skipc
  2973  0471  2C21               	goto	l1126
  2974  0472                     l1140:	
  2975                           
  2976                           ;Funciones.c: 99: }
  2977                           ;Funciones.c: 100: }
  2978                           ;Funciones.c: 101: t[5] = sum / num;
  2979  0472  082E               	movf	MediaMedidas@num,w
  2980  0473  00A8               	movwf	??_MediaMedidas
  2981  0474  01A9               	clrf	??_MediaMedidas+1
  2982  0475  0828               	movf	??_MediaMedidas,w
  2983  0476  00A0               	movwf	___lwdiv@divisor
  2984  0477  0829               	movf	??_MediaMedidas+1,w
  2985  0478  00A1               	movwf	___lwdiv@divisor+1
  2986  0479  082D               	movf	MediaMedidas@sum+1,w
  2987  047A  00A3               	movwf	___lwdiv@dividend+1
  2988  047B  082C               	movf	MediaMedidas@sum,w
  2989  047C  00A2               	movwf	___lwdiv@dividend
  2990  047D  118A  259C         	fcall	___lwdiv
  2991  047F  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0480  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0481  082F               	movf	MediaMedidas@t,w
  2994  0482  3E0A               	addlw	10
  2995  0483  0084               	movwf	4
  2996  0484  0820               	movf	?___lwdiv,w
  2997  0485  1383               	bcf	3,7	;select IRP bank0
  2998  0486  0080               	movwf	0
  2999  0487  0A84               	incf	4,f
  3000  0488  0821               	movf	?___lwdiv+1,w
  3001  0489  0080               	movwf	0
  3002  048A  0008               	return
  3003  048B                     __end_of_MediaMedidas:	
  3004                           
  3005                           	psect	text14
  3006  059C                     __ptext14:	
  3007 ;; *************** function ___lwdiv *****************
  3008 ;; Defined at:
  3009 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  divisor         2    0[BANK0 ] unsigned int 
  3012 ;;  dividend        2    2[BANK0 ] unsigned int 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  quotient        2    5[BANK0 ] unsigned int 
  3015 ;;  counter         1    7[BANK0 ] unsigned char 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  2    0[BANK0 ] unsigned int 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3025 ;;      Params:         0       4       0       0
  3026 ;;      Locals:         0       3       0       0
  3027 ;;      Temps:          0       1       0       0
  3028 ;;      Totals:         0       8       0       0
  3029 ;;Total ram usage:        8 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    2
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		_MediaMedidas
  3036 ;;		_sprintf
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           
  3041                           ;psect for function ___lwdiv
  3042  059C                     ___lwdiv:	
  3043                           
  3044                           ;incstack = 0
  3045                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3046  059C  1283               	bcf	3,5	;RP0=0, select bank0
  3047  059D  1303               	bcf	3,6	;RP1=0, select bank0
  3048  059E  01A5               	clrf	___lwdiv@quotient
  3049  059F  01A6               	clrf	___lwdiv@quotient+1
  3050  05A0  0820               	movf	___lwdiv@divisor,w
  3051  05A1  0421               	iorwf	___lwdiv@divisor+1,w
  3052  05A2  1903               	btfsc	3,2
  3053  05A3  2DD5               	goto	l1094
  3054  05A4  01A7               	clrf	___lwdiv@counter
  3055  05A5  0AA7               	incf	___lwdiv@counter,f
  3056  05A6                     l1082:	
  3057  05A6  1BA1               	btfsc	___lwdiv@divisor+1,7
  3058  05A7  2DB4               	goto	l1084
  3059  05A8  3001               	movlw	1
  3060  05A9                     u825:	
  3061  05A9  1003               	clrc
  3062  05AA  0DA0               	rlf	___lwdiv@divisor,f
  3063  05AB  0DA1               	rlf	___lwdiv@divisor+1,f
  3064  05AC  3EFF               	addlw	-1
  3065  05AD  1D03               	skipz
  3066  05AE  2DA9               	goto	u825
  3067  05AF  3001               	movlw	1
  3068  05B0  00A4               	movwf	??___lwdiv
  3069  05B1  0824               	movf	??___lwdiv,w
  3070  05B2  07A7               	addwf	___lwdiv@counter,f
  3071  05B3  2DA6               	goto	l1082
  3072  05B4                     l1084:	
  3073  05B4  3001               	movlw	1
  3074  05B5                     u845:	
  3075  05B5  1003               	clrc
  3076  05B6  0DA5               	rlf	___lwdiv@quotient,f
  3077  05B7  0DA6               	rlf	___lwdiv@quotient+1,f
  3078  05B8  3EFF               	addlw	-1
  3079  05B9  1D03               	skipz
  3080  05BA  2DB5               	goto	u845
  3081  05BB  0821               	movf	___lwdiv@divisor+1,w
  3082  05BC  0223               	subwf	___lwdiv@dividend+1,w
  3083  05BD  1D03               	skipz
  3084  05BE  2DC1               	goto	u855
  3085  05BF  0820               	movf	___lwdiv@divisor,w
  3086  05C0  0222               	subwf	___lwdiv@dividend,w
  3087  05C1                     u855:	
  3088  05C1  1C03               	skipc
  3089  05C2  2DCA               	goto	l1090
  3090  05C3  0820               	movf	___lwdiv@divisor,w
  3091  05C4  02A2               	subwf	___lwdiv@dividend,f
  3092  05C5  0821               	movf	___lwdiv@divisor+1,w
  3093  05C6  1C03               	skipc
  3094  05C7  03A3               	decf	___lwdiv@dividend+1,f
  3095  05C8  02A3               	subwf	___lwdiv@dividend+1,f
  3096  05C9  1425               	bsf	___lwdiv@quotient,0
  3097  05CA                     l1090:	
  3098  05CA  3001               	movlw	1
  3099  05CB                     u865:	
  3100  05CB  1003               	clrc
  3101  05CC  0CA1               	rrf	___lwdiv@divisor+1,f
  3102  05CD  0CA0               	rrf	___lwdiv@divisor,f
  3103  05CE  3EFF               	addlw	-1
  3104  05CF  1D03               	skipz
  3105  05D0  2DCB               	goto	u865
  3106  05D1  3001               	movlw	1
  3107  05D2  02A7               	subwf	___lwdiv@counter,f
  3108  05D3  1D03               	btfss	3,2
  3109  05D4  2DB4               	goto	l1084
  3110  05D5                     l1094:	
  3111  05D5  0826               	movf	___lwdiv@quotient+1,w
  3112  05D6  00A1               	movwf	?___lwdiv+1
  3113  05D7  0825               	movf	___lwdiv@quotient,w
  3114  05D8  00A0               	movwf	?___lwdiv
  3115  05D9  0008               	return
  3116  05DA                     __end_of___lwdiv:	
  3117                           
  3118                           	psect	text15
  3119  060E                     __ptext15:	
  3120 ;; *************** function _Interrupcion *****************
  3121 ;; Defined at:
  3122 ;;		line 69 in file "main.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3136 ;;      Params:         0       0       0       0
  3137 ;;      Locals:         0       0       0       0
  3138 ;;      Temps:          8       0       0       0
  3139 ;;      Totals:         8       0       0       0
  3140 ;;Total ram usage:        8 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    1
  3143 ;; This function calls:
  3144 ;;		_IntPortb
  3145 ;; This function is called by:
  3146 ;;		Interrupt level 1
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           
  3151                           ;psect for function _Interrupcion
  3152  060E                     _Interrupcion:	
  3153                           
  3154                           ;main.c: 70: if (RBIF == 1)
  3155  060E  1C0B               	btfss	11,0	;volatile
  3156  060F  2E24               	goto	i1l138
  3157                           
  3158                           ;main.c: 71: {
  3159                           ;main.c: 72: IntPortb(t4, t5, t6, t7, &rbon);
  3160  0610  3057               	movlw	(low (_t5| 0))& (0+255)
  3161  0611  00F6               	movwf	??_Interrupcion
  3162  0612  0876               	movf	??_Interrupcion,w
  3163  0613  00F0               	movwf	IntPortb@t5
  3164  0614  3063               	movlw	(low (_t6| 0))& (0+255)
  3165  0615  00F7               	movwf	??_Interrupcion+1
  3166  0616  0877               	movf	??_Interrupcion+1,w
  3167  0617  00F1               	movwf	IntPortb@t6
  3168  0618  30B0               	movlw	(low (_t7| 0))& (0+255)
  3169  0619  00F8               	movwf	??_Interrupcion+2
  3170  061A  0878               	movf	??_Interrupcion+2,w
  3171  061B  00F2               	movwf	IntPortb@t7
  3172  061C  306F               	movlw	(low (_rbon| 0))& (0+255)
  3173  061D  00F9               	movwf	??_Interrupcion+3
  3174  061E  0879               	movf	??_Interrupcion+3,w
  3175  061F  00F3               	movwf	IntPortb@rbon
  3176  0620  304B               	movlw	(low (_t4| 0))& (0+255)
  3177  0621  118A  2263  118A   	fcall	_IntPortb
  3178  0624                     i1l138:	
  3179  0624  087D               	movf	??_Interrupcion+7,w
  3180  0625  1283               	bcf	3,5	;RP0=0, select bank0
  3181  0626  1303               	bcf	3,6	;RP1=0, select bank0
  3182  0627  00FF               	movwf	127
  3183  0628  087C               	movf	??_Interrupcion+6,w
  3184  0629  008A               	movwf	10
  3185  062A  087B               	movf	??_Interrupcion+5,w
  3186  062B  0084               	movwf	4
  3187  062C  0E7A               	swapf	(??_Interrupcion+4)^(0+-128),w
  3188  062D  0083               	movwf	3
  3189  062E  0EFE               	swapf	126,f
  3190  062F  0E7E               	swapf	126,w
  3191  0630  0009               	retfie
  3192  0631                     __end_of_Interrupcion:	
  3193                           
  3194                           	psect	intentry
  3195  0004                     __pintentry:	
  3196                           ;incstack = 0
  3197                           ; Regs used in _Interrupcion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3198                           
  3199  0004                     interrupt_function:	
  3200  007E                     saved_w	set	btemp
  3201  0004  00FE               	movwf	btemp
  3202  0005  0E03               	swapf	3,w
  3203  0006  00FA               	movwf	??_Interrupcion+4
  3204  0007  0804               	movf	4,w
  3205  0008  00FB               	movwf	??_Interrupcion+5
  3206  0009  080A               	movf	10,w
  3207  000A  00FC               	movwf	??_Interrupcion+6
  3208  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3209  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3210  000D  087F               	movf	btemp+1,w
  3211  000E  00FD               	movwf	??_Interrupcion+7
  3212  000F  118A  2E0E         	ljmp	_Interrupcion
  3213                           
  3214                           	psect	text16
  3215  0263                     __ptext16:	
  3216 ;; *************** function _IntPortb *****************
  3217 ;; Defined at:
  3218 ;;		line 146 in file "Funciones.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  t4              1    wreg     PTR int 
  3221 ;;		 -> t4(12), 
  3222 ;;  t5              1    0[COMMON] PTR int 
  3223 ;;		 -> t5(12), 
  3224 ;;  t6              1    1[COMMON] PTR int 
  3225 ;;		 -> t6(12), 
  3226 ;;  t7              1    2[COMMON] PTR int 
  3227 ;;		 -> t7(12), 
  3228 ;;  rbon            1    3[COMMON] PTR unsigned char 
  3229 ;;		 -> rbon(1), 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  t4              1    5[COMMON] PTR int 
  3232 ;;		 -> t4(12), 
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3242 ;;      Params:         4       0       0       0
  3243 ;;      Locals:         1       0       0       0
  3244 ;;      Temps:          1       0       0       0
  3245 ;;      Totals:         6       0       0       0
  3246 ;;Total ram usage:        6 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_Interrupcion
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           
  3256                           ;psect for function _IntPortb
  3257  0263                     _IntPortb:	
  3258                           
  3259                           ;incstack = 0
  3260                           ; Regs used in _IntPortb: [wreg-fsr0h+status,2+status,0]
  3261                           ;IntPortb@t4 stored from wreg
  3262  0263  00F5               	movwf	IntPortb@t4
  3263                           
  3264                           ;Funciones.c: 147: RBIE = 0;
  3265  0264  118B               	bcf	11,3	;volatile
  3266                           
  3267                           ;Funciones.c: 153: if ((RB4 == 1) && (*rbon == 0) && (TRISB4 == 1)) {
  3268  0265  1283               	bcf	3,5	;RP0=0, select bank0
  3269  0266  1303               	bcf	3,6	;RP1=0, select bank0
  3270  0267  1E06               	btfss	6,4	;volatile
  3271  0268  2A79               	goto	i1l83
  3272  0269  0873               	movf	IntPortb@rbon,w
  3273  026A  0084               	movwf	4
  3274  026B  1383               	bcf	3,7	;select IRP bank0
  3275  026C  0800               	movf	0,w
  3276  026D  1D03               	btfss	3,2
  3277  026E  2A79               	goto	i1l83
  3278  026F  1683               	bsf	3,5	;RP0=1, select bank1
  3279  0270  1303               	bcf	3,6	;RP1=0, select bank1
  3280  0271  1E06               	btfss	6,4	;volatile
  3281  0272  2A79               	goto	i1l83
  3282                           
  3283                           ;Funciones.c: 154: TMR1 = 0;
  3284  0273  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0274  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0275  018E               	clrf	14	;volatile
  3287  0276  018F               	clrf	15	;volatile
  3288                           
  3289                           ;Funciones.c: 155: *rbon = 4;
  3290  0277  3004               	movlw	4
  3291  0278  2AE1               	goto	L2
  3292  0279                     i1l83:	
  3293                           ;Funciones.c: 157: } else if ((RB4 == 0) && (*rbon == 4) && (TRISB4 == 1)) {
  3294                           
  3295                           ;Funciones.c: 156: TMR1ON = 1;
  3296                           
  3297  0279  1283               	bcf	3,5	;RP0=0, select bank0
  3298  027A  1A06               	btfsc	6,4	;volatile
  3299  027B  2A89               	goto	i1l85
  3300  027C  0873               	movf	IntPortb@rbon,w
  3301  027D  0084               	movwf	4
  3302  027E  3004               	movlw	4
  3303  027F  1383               	bcf	3,7	;select IRP bank0
  3304  0280  0600               	xorwf	0,w
  3305  0281  1D03               	btfss	3,2
  3306  0282  2A89               	goto	i1l85
  3307  0283  1683               	bsf	3,5	;RP0=1, select bank1
  3308  0284  1303               	bcf	3,6	;RP1=0, select bank1
  3309  0285  1E06               	btfss	6,4	;volatile
  3310  0286  2A89               	goto	i1l85
  3311                           
  3312                           ;Funciones.c: 158: t4[0] = TMR1;
  3313  0287  0875               	movf	IntPortb@t4,w
  3314  0288  2AF7               	goto	L3
  3315  0289                     i1l85:	
  3316                           ;Funciones.c: 161: } else if ((RB5 == 1) && (*rbon == 0) && (TRISB5 == 1)) {
  3317                           
  3318                           ;Funciones.c: 160: TMR1ON = 0;
  3319                           
  3320                           ;Funciones.c: 159: *rbon = 0;
  3321                           
  3322  0289  1283               	bcf	3,5	;RP0=0, select bank0
  3323  028A  1E86               	btfss	6,5	;volatile
  3324  028B  2A9C               	goto	i1l87
  3325  028C  0873               	movf	IntPortb@rbon,w
  3326  028D  0084               	movwf	4
  3327  028E  1383               	bcf	3,7	;select IRP bank0
  3328  028F  0800               	movf	0,w
  3329  0290  1D03               	btfss	3,2
  3330  0291  2A9C               	goto	i1l87
  3331  0292  1683               	bsf	3,5	;RP0=1, select bank1
  3332  0293  1303               	bcf	3,6	;RP1=0, select bank1
  3333  0294  1E86               	btfss	6,5	;volatile
  3334  0295  2A9C               	goto	i1l87
  3335                           
  3336                           ;Funciones.c: 162: TMR1 = 0;
  3337  0296  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0297  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0298  018E               	clrf	14	;volatile
  3340  0299  018F               	clrf	15	;volatile
  3341                           
  3342                           ;Funciones.c: 163: *rbon = 5;
  3343  029A  3005               	movlw	5
  3344  029B  2AE1               	goto	L2
  3345  029C                     i1l87:	
  3346                           ;Funciones.c: 165: } else if ((RB5 == 0) && (*rbon == 5) && (TRISB5 == 1)) {
  3347                           
  3348                           ;Funciones.c: 164: TMR1ON = 1;
  3349                           
  3350  029C  1283               	bcf	3,5	;RP0=0, select bank0
  3351  029D  1A86               	btfsc	6,5	;volatile
  3352  029E  2AAC               	goto	i1l89
  3353  029F  0873               	movf	IntPortb@rbon,w
  3354  02A0  0084               	movwf	4
  3355  02A1  3005               	movlw	5
  3356  02A2  1383               	bcf	3,7	;select IRP bank0
  3357  02A3  0600               	xorwf	0,w
  3358  02A4  1D03               	btfss	3,2
  3359  02A5  2AAC               	goto	i1l89
  3360  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  3361  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  3362  02A8  1E86               	btfss	6,5	;volatile
  3363  02A9  2AAC               	goto	i1l89
  3364                           
  3365                           ;Funciones.c: 166: t5[0] = TMR1;
  3366  02AA  0870               	movf	IntPortb@t5,w
  3367  02AB  2AF7               	goto	L3
  3368  02AC                     i1l89:	
  3369                           ;Funciones.c: 169: } else if ((RB6 == 1) && (*rbon == 0) && (TRISB6 == 1)) {
  3370                           
  3371                           ;Funciones.c: 168: TMR1ON = 0;
  3372                           
  3373                           ;Funciones.c: 167: *rbon = 0;
  3374                           
  3375  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  3376  02AD  1F06               	btfss	6,6	;volatile
  3377  02AE  2ABF               	goto	i1l91
  3378  02AF  0873               	movf	IntPortb@rbon,w
  3379  02B0  0084               	movwf	4
  3380  02B1  1383               	bcf	3,7	;select IRP bank0
  3381  02B2  0800               	movf	0,w
  3382  02B3  1D03               	btfss	3,2
  3383  02B4  2ABF               	goto	i1l91
  3384  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  3385  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  3386  02B7  1F06               	btfss	6,6	;volatile
  3387  02B8  2ABF               	goto	i1l91
  3388                           
  3389                           ;Funciones.c: 170: TMR1 = 0;
  3390  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  3391  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  3392  02BB  018E               	clrf	14	;volatile
  3393  02BC  018F               	clrf	15	;volatile
  3394                           
  3395                           ;Funciones.c: 171: *rbon = 6;
  3396  02BD  3006               	movlw	6
  3397  02BE  2AE1               	goto	L2
  3398  02BF                     i1l91:	
  3399                           ;Funciones.c: 173: } else if ((RB6 == 0) && (*rbon == 6) && (TRISB6 == 1)) {
  3400                           
  3401                           ;Funciones.c: 172: TMR1ON = 1;
  3402                           
  3403  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  3404  02C0  1B06               	btfsc	6,6	;volatile
  3405  02C1  2ACF               	goto	i1l93
  3406  02C2  0873               	movf	IntPortb@rbon,w
  3407  02C3  0084               	movwf	4
  3408  02C4  3006               	movlw	6
  3409  02C5  1383               	bcf	3,7	;select IRP bank0
  3410  02C6  0600               	xorwf	0,w
  3411  02C7  1D03               	btfss	3,2
  3412  02C8  2ACF               	goto	i1l93
  3413  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  3414  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  3415  02CB  1F06               	btfss	6,6	;volatile
  3416  02CC  2ACF               	goto	i1l93
  3417                           
  3418                           ;Funciones.c: 174: t6[0] = TMR1;
  3419  02CD  0871               	movf	IntPortb@t6,w
  3420  02CE  2AF7               	goto	L3
  3421  02CF                     i1l93:	
  3422                           ;Funciones.c: 177: } else if ((RB7 == 1) && (*rbon == 0) && (TRISB7 == 1)) {
  3423                           
  3424                           ;Funciones.c: 176: TMR1ON = 0;
  3425                           
  3426                           ;Funciones.c: 175: *rbon = 0;
  3427                           
  3428  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  3429  02D0  1F86               	btfss	6,7	;volatile
  3430  02D1  2AE8               	goto	i1l95
  3431  02D2  0873               	movf	IntPortb@rbon,w
  3432  02D3  0084               	movwf	4
  3433  02D4  1383               	bcf	3,7	;select IRP bank0
  3434  02D5  0800               	movf	0,w
  3435  02D6  1D03               	btfss	3,2
  3436  02D7  2AE8               	goto	i1l95
  3437  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  3438  02D9  1303               	bcf	3,6	;RP1=0, select bank1
  3439  02DA  1F86               	btfss	6,7	;volatile
  3440  02DB  2AE8               	goto	i1l95
  3441                           
  3442                           ;Funciones.c: 178: TMR1 = 0;
  3443  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  3444  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  3445  02DE  018E               	clrf	14	;volatile
  3446  02DF  018F               	clrf	15	;volatile
  3447                           
  3448                           ;Funciones.c: 179: *rbon = 7;
  3449  02E0  3007               	movlw	7
  3450  02E1                     L2:	
  3451  02E1  00F4               	movwf	??_IntPortb
  3452  02E2  0873               	movf	IntPortb@rbon,w
  3453  02E3  0084               	movwf	4
  3454  02E4  0874               	movf	??_IntPortb,w
  3455  02E5  0080               	movwf	0
  3456                           
  3457                           ;Funciones.c: 180: TMR1ON = 1;
  3458  02E6  1410               	bsf	16,0	;volatile
  3459                           
  3460                           ;Funciones.c: 181: } else if ((RB7 == 0) && (*rbon == 7) && (TRISB7 == 1)) {
  3461  02E7  2B03               	goto	i1l1428
  3462  02E8                     i1l95:	
  3463  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  3464  02E9  1B86               	btfsc	6,7	;volatile
  3465  02EA  2B03               	goto	i1l1428
  3466  02EB  0873               	movf	IntPortb@rbon,w
  3467  02EC  0084               	movwf	4
  3468  02ED  3007               	movlw	7
  3469  02EE  1383               	bcf	3,7	;select IRP bank0
  3470  02EF  0600               	xorwf	0,w
  3471  02F0  1D03               	btfss	3,2
  3472  02F1  2B03               	goto	i1l1428
  3473  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  3474  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  3475  02F4  1F86               	btfss	6,7	;volatile
  3476  02F5  2B03               	goto	i1l1428
  3477                           
  3478                           ;Funciones.c: 182: t7[0] = TMR1;
  3479  02F6  0872               	movf	IntPortb@t7,w
  3480  02F7                     L3:	
  3481  02F7  0084               	movwf	4
  3482  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  3483  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  3484  02FA  080E               	movf	14,w	;volatile
  3485  02FB  0080               	movwf	0
  3486  02FC  0A84               	incf	4,f
  3487  02FD  080F               	movf	15,w	;volatile
  3488  02FE  0080               	movwf	0
  3489                           
  3490                           ;Funciones.c: 183: *rbon = 0;
  3491  02FF  0873               	movf	IntPortb@rbon,w
  3492  0300  0084               	movwf	4
  3493  0301  0180               	clrf	0
  3494                           
  3495                           ;Funciones.c: 184: TMR1ON = 0;
  3496  0302  1010               	bcf	16,0	;volatile
  3497  0303                     i1l1428:	
  3498                           
  3499                           ;Funciones.c: 185: }
  3500                           ;Funciones.c: 187: RBIF = 0;
  3501  0303  100B               	bcf	11,0	;volatile
  3502                           
  3503                           ;Funciones.c: 188: RBIE = 1;
  3504  0304  158B               	bsf	11,3	;volatile
  3505  0305  0008               	return
  3506  0306                     __end_of_IntPortb:	
  3507  007E                     btemp	set	126	;btemp
  3508  007E                     wtemp	set	126
  3509  007E                     wtemp0	set	126
  3510  0080                     wtemp1	set	128
  3511  0082                     wtemp2	set	130
  3512  0084                     wtemp3	set	132
  3513  0086                     wtemp4	set	134
  3514  0088                     wtemp5	set	136
  3515  007F                     wtemp6	set	127
  3516  007E                     ttemp	set	126
  3517  007E                     ttemp0	set	126
  3518  0081                     ttemp1	set	129
  3519  0084                     ttemp2	set	132
  3520  0087                     ttemp3	set	135
  3521  007F                     ttemp4	set	127
  3522  007E                     ltemp	set	126
  3523  007E                     ltemp0	set	126
  3524  0082                     ltemp1	set	130
  3525  0086                     ltemp2	set	134
  3526  0080                     ltemp3	set	128


Data Sizes:
    Strings     14
    Constant    10
    Data        0
    BSS         65
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     43      80
    BANK1            80      0      28
    BANK2            80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> distancias(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 16
		 -> distancias(BANK1[16]), 

    IntPortb@t7	PTR int  size(1) Largest target is 12
		 -> t7(BANK1[12]), 

    IntPortb@t6	PTR int  size(1) Largest target is 12
		 -> t6(BANK0[12]), 

    IntPortb@t5	PTR int  size(1) Largest target is 12
		 -> t5(BANK0[12]), 

    IntPortb@t4	PTR int  size(1) Largest target is 12
		 -> t4(BANK0[12]), 

    IntPortb@rbon	PTR unsigned char  size(1) Largest target is 1
		 -> rbon(BANK0[1]), 

    ResetEcho@rbon	PTR unsigned char  size(1) Largest target is 1
		 -> rbon(BANK0[1]), NULL(NULL[0]), 

    ShiftArrays@t7	PTR int  size(1) Largest target is 12
		 -> t7(BANK1[12]), 

    ShiftArrays@t6	PTR int  size(1) Largest target is 12
		 -> t6(BANK0[12]), 

    ShiftArrays@t5	PTR int  size(1) Largest target is 12
		 -> t5(BANK0[12]), 

    ShiftArrays@t4	PTR int  size(1) Largest target is 12
		 -> t4(BANK0[12]), 

    MediaMedidas@t	PTR int  size(1) Largest target is 12
		 -> t7(BANK1[12]), t6(BANK0[12]), t5(BANK0[12]), t4(BANK0[12]), 

    CalcularDistancia@distancias	PTR unsigned char  size(1) Largest target is 16
		 -> distancias(BANK1[16]), 

    CalcularDistancia@t7	PTR int  size(1) Largest target is 12
		 -> t7(BANK1[12]), 

    CalcularDistancia@t6	PTR int  size(1) Largest target is 12
		 -> t6(BANK0[12]), 

    CalcularDistancia@t5	PTR int  size(1) Largest target is 12
		 -> t5(BANK0[12]), 

    CalcularDistancia@t4	PTR int  size(1) Largest target is 12
		 -> t4(BANK0[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Interrupcion in COMMON

    _Interrupcion->_IntPortb

Critical Paths under _main in BANK0

    _main->_CalcularDistancia
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv
    _CalcularDistancia->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _MediaMedidas->___lwdiv

Critical Paths under _Interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupcion in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4689
                                             39 BANK0      4     4      0
                  _CalcularDistancia
                   _Inicializaciones
                          _ResetEcho
                        _ShiftArrays
                            _Trigger
                          _UART_Init
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      4     4      0     139
                                              1 BANK0      4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     721
                                             15 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _Trigger                                              2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ShiftArrays                                         11     8      3     584
                                              0 BANK0     11     8      3
 ---------------------------------------------------------------------------------
 (1) _ResetEcho                                            2     2      0      28
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Inicializaciones                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CalcularDistancia                                    6     2      4    3217
                                             33 BANK0      6     2      4
                       _MediaMedidas
                            ___awdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    18      9    1106
                                             14 BANK0     19    10      9
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     724
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _MediaMedidas                                         9     9      0     774
                                              8 BANK0      9     9      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     374
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupcion                                         8     8      0     679
                                              6 COMMON     8     8      0
                           _IntPortb
 ---------------------------------------------------------------------------------
 (5) _IntPortb                                             6     2      4     679
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcularDistancia
     _MediaMedidas
       ___lwdiv
     ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _Inicializaciones
   _ResetEcho
   _ShiftArrays
   _Trigger
   _UART_Init
     ___aldiv
   _UART_Write_Text
     _UART_Write

 _Interrupcion (ROOT)
   _IntPortb

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     2B      50       3      100.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      7A       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      7A      10        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed May 25 21:22:11 2016

  __size_of_Inicializaciones 001C                MediaMedidas@i 0030                MediaMedidas@t 002F  
                          pc 0002                  __CFG_CP$OFF 0000                 ___awdiv@sign 0026  
                         _t4 004B                           _t5 0057                           _t6 0063  
                         _t7 00B0                           fsr 0004              MediaMedidas@num 002E  
            MediaMedidas@sum 002C                          l131 0568                          l341 0318  
                        l168 06A5                          _GIE 005F                          _RB0 0030  
                        _RB1 0031                          _RB2 0032                          _RB3 0033  
                        _RB4 0034                          _RB5 0035                          _RB6 0036  
                        _RB7 0037                 __CFG_CPD$OFF 0000                          u825 05A9  
                        u915 05F6                          u845 05B5                          u925 05FF  
                        u855 05C1                          u865 05CB                          u955 0437  
                        u895 05E5                          _TX9 04C6                          fsr0 0004  
                        indf 0000               ??_MediaMedidas 0028                 __CFG_IESO$ON 0000  
               __CFG_LVP$OFF 0000                         l1112 05FE                         l1130 0446  
                       l1106 05E2                         l1132 0454                         l1140 0472  
                       l1108 05F0                         l1116 0609                         l1212 0339  
                       l1204 0329                         l1126 0421                         l1150 0134  
                       l1230 038C                         l1222 0371                         l1214 0349  
                       l1136 046A                         l1152 0136                         l1090 05CA  
                       l1082 05A6                         l1242 0509                         l1226 037E  
                       l1084 05B4                         l1260 052A                         l1156 013B  
                       l1094 05D5                         l1270 054B                         l1182 017E  
                       l1174 017A                         l1158 014B                         l1248 0514  
                       l1168 015D                         l1184 0116                         l1440 00EE  
                       l1274 0553                         l1266 0540                         l1258 051C  
                       l1186 01B9                         l1468 0636                         STR_1 0662  
                       _BRGH 04C2                         _CREN 00C4                         u1005 0170  
                       u1105 034B                         u1115 0360                         u1205 052B  
                       u1125 0372                         u1215 0537                         u1225 0541  
                       _IOCB 0096                         u1085 033D                         u1185 051F  
                       u1530 0068                         u1531 0069                         u1515 002D  
                       u1532 006E                         u1533 006F                         u1525 004E  
                       u1617 039F                         u1570 00CF                         u1707 03FC  
                       u1627 03A7                         u1571 00D0                         u1555 0094  
                       u1572 00D5                         u1717 0404                         u1637 03B1  
                       u1573 00D6                         u1565 00B5                         u1727 040E  
                       u1647 03BE                         u1737 0696                         u1657 03C6  
                       u1747 069E                         u1667 03D0                         u1757 0679  
                       u1677 03DD                         u1687 03E5                         u1697 03EF  
                       _RBIE 005B                         _RBIF 0058                         i1l91 02BF  
                       i1l83 0279                         i1l93 02CF                         i1l85 0289  
                       i1l95 02E8                         i1l87 029C                         i1l89 02AC  
                       _TMR1 000E                         _SPEN 00C7                         _TRMT 04C1  
                       _TXEN 04C5                         _SYNC 04C4                 __CFG_WRT$OFF 0000  
              __CFG_FCMEN$ON 0000                         _main 0558                         _rbon 006F  
                       btemp 007E                __CFG_BOREN$ON 0000                         ltemp 007E  
                 IntPortb@t4 0075                   IntPortb@t5 0070                   IntPortb@t6 0071  
                 IntPortb@t7 0072                         start 0011                         ttemp 007E  
                       wtemp 007E                __CFG_MCLRE$ON 0000      __end_of_UART_Write_Text 0652  
            __end_of_Trigger 0416              __end_of___aldiv 0395                        ?_main 0070  
            __end_of___awdiv 0558                __CFG_WDTE$OFF 0000              ___awdiv@divisor 0020  
                      _T1CON 0010              __end_of___lwdiv 05DA                        i1l138 0624  
            __end_of___lwmod 060E              ___awdiv@counter 0025                        _SPBRG 0099  
                      _PORTB 0006                        _TRISB 0086                        _TXREG 0019  
                ?_UART_Write 0070           __size_of_UART_Init 00ED              __end_of_dpowers 0662  
                      pclath 000A                        ltemp0 007E                        ltemp1 0082  
                      ltemp2 0086                        ltemp3 0080                        ttemp0 007E  
                      ttemp1 0081                        ttemp2 0084                        ttemp3 0087  
                      ttemp4 007F                        status 0003                        wtemp0 007E  
                      wtemp1 0080                        wtemp2 0082                        wtemp3 0084  
                      wtemp4 0086                        wtemp5 0088                        wtemp6 007F  
            __end_of_sprintf 01BE              __initialization 0013                 __end_of_main 059C  
           __end_of_IntPortb 0306                       ??_main 0047             ___awdiv@dividend 0022  
              ??_ShiftArrays 0023                       _ANSELH 0189                       i1l1428 0303  
                     _INTCON 000B                       _OSCCON 008F                       _TMR1ON 0080  
                     _TRISB4 0434                       _TRISB5 0435                       _TRISB6 0436  
                     _TRISB7 0437                       _TRISC6 043E                       _TRISC7 043F  
              ?_Interrupcion 0070               __CFG_PWRTE$OFF 0000         __end_of_MediaMedidas 048B  
          __end_of_UART_Init 010F             _Inicializaciones 0670          __size_of_UART_Write 000C  
                  ??_Trigger 0020                    ??___aldiv 0028                    ??___awdiv 0024  
           ?_UART_Write_Text 0070                    ??___lwdiv 0024                    ??___lwmod 002C  
         __size_of_ResetEcho 0016             ___awdiv@quotient 0027                       saved_w 007E  
               IntPortb@rbon 0073                    ??_sprintf 0037                ResetEcho@rbon 0021  
             ??_Interrupcion 0076      __end_of__initialization 001F          __end_of_ShiftArrays 04FD  
             __pcstackCOMMON 0070                ShiftArrays@t4 0029                ShiftArrays@t5 0020  
              ShiftArrays@t6 0021                ShiftArrays@t7 0022                   __pbssBANK0 004B  
                 __pbssBANK1 00A0            __end_of_ResetEcho 06A2                    ?_IntPortb 0070  
                 __pmaintext 0558                   __pintentry 0004                 ??_UART_Write 0020  
                 _distancias 00A0                   __stringtab 0652                  _ShiftArrays 048B  
      __size_of_MediaMedidas 0075                   ??_IntPortb 0074                      _Trigger 0395  
                    ___aldiv 0306                      ___awdiv 04FD           __end_of_UART_Write 06AE  
                    ___lwdiv 059C                      ___lwmod 05DA                      __ptext1 0631  
                    __ptext2 06A2                      __ptext3 0022                      __ptext4 0306  
                    __ptext5 0395                      __ptext6 048B                      __ptext7 068C  
                    __ptext8 0670                      __ptext9 01BE         __end_of_Interrupcion 0631  
                    _dpowers 0658             ___aldiv@dividend 0024                 _MediaMedidas 0416  
   __end_of_Inicializaciones 068C                      _sprintf 010F                      clrloop0 06AF  
       end_of_initialization 001F             ___aldiv@quotient 002B                    _UART_Init 0022  
             UART_Write@data 0020                   ?_UART_Init 002F            _CalcularDistancia 01BE  
   __size_of_UART_Write_Text 0021          start_initialization 0013           ?_CalcularDistancia 0041  
        ??_CalcularDistancia 0045                    _ResetEcho 068C            __size_of_IntPortb 00A3  
      __size_of_Interrupcion 0023    __end_of_CalcularDistancia 0263                    ___latbits 0001  
              __pcstackBANK0 0020       __CFG_FOSC$INTRC_CLKOUT 0000                 ?_ShiftArrays 0020  
               ShiftArrays@i 002A                  sprintf@flag 003A                  sprintf@prec 003E  
               _Interrupcion 060E                   ?_ResetEcho 0070             ___lwdiv@dividend 0022  
                   ?_Trigger 0070                     ?___aldiv 0020                     ?___awdiv 0020  
                   ?___lwdiv 0020                     ?___lwmod 0028                  ??_UART_Init 0033  
                  __pstrings 0652             ___lwdiv@quotient 0025            ?_Inicializaciones 0070  
                   ?_sprintf 002E  CalcularDistancia@distancias 0044                   UART_Init@x 003F  
          ??_UART_Write_Text 0021           ??_Inicializaciones 0020              ___aldiv@divisor 0020  
          interrupt_function 0004              ___aldiv@counter 0029                    clear_ram0 06AE  
        CalcularDistancia@t4 0046          CalcularDistancia@t5 0041          CalcularDistancia@t6 0042  
        CalcularDistancia@t7 0043            UART_Init@baudrate 002F   __size_of_CalcularDistancia 00A5  
                __stringbase 0657                     _IntPortb 0263                  ??_ResetEcho 0020  
           __size_of_Trigger 0081             __size_of___aldiv 008F             __size_of___awdiv 005B  
           __size_of___lwdiv 003E             __size_of___lwmod 0034           __end_of__stringtab 0658  
                 sprintf@val 003C              ___lwdiv@divisor 0020              ___lwdiv@counter 0027  
                   __ptext10 010F                     __ptext11 05DA                     __ptext12 04FD  
                   __ptext13 0416                     __ptext14 059C                     __ptext15 060E  
                   __ptext16 0263            __CFG_BOR4V$BOR21V 0000             __size_of_sprintf 00AF  
        UART_Write_Text@text 0024         __size_of_ShiftArrays 0072                __size_of_main 0044  
                   intlevel1 0000                    sprintf@ap 003B                    sprintf@sp 003F  
           ___lwmod@dividend 002A                    stringcode 0652              _UART_Write_Text 0631  
                   sprintf@c 0040                     sprintf@f 002E              ___lwmod@divisor 0028  
            ___lwmod@counter 002D                     stringdir 0652                ?_MediaMedidas 0070  
                   stringtab 0652                 ___aldiv@sign 002A                   _UART_Write 06A2  
           UART_Write_Text@i 0022  
