

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Mar 02 12:44:20 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F883
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  0007                     	;# 
    40  0009                     	;# 
    41  000A                     	;# 
    42  000B                     	;# 
    43  000C                     	;# 
    44  000D                     	;# 
    45  000E                     	;# 
    46  000E                     	;# 
    47  000F                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0013                     	;# 
    52  0014                     	;# 
    53  0015                     	;# 
    54  0015                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001B                     	;# 
    62  001C                     	;# 
    63  001D                     	;# 
    64  001E                     	;# 
    65  001F                     	;# 
    66  0081                     	;# 
    67  0085                     	;# 
    68  0086                     	;# 
    69  0087                     	;# 
    70  0089                     	;# 
    71  008C                     	;# 
    72  008D                     	;# 
    73  008E                     	;# 
    74  008F                     	;# 
    75  0090                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0093                     	;# 
    80  0093                     	;# 
    81  0094                     	;# 
    82  0095                     	;# 
    83  0096                     	;# 
    84  0097                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  009F                     	;# 
    93  0105                     	;# 
    94  0107                     	;# 
    95  0108                     	;# 
    96  0109                     	;# 
    97  010C                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  0185                     	;# 
   103  0187                     	;# 
   104  0188                     	;# 
   105  0189                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  008F                     	;# 
   151  0090                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0093                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0095                     	;# 
   159  0096                     	;# 
   160  0097                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009A                     	;# 
   164  009B                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  0105                     	;# 
   170  0107                     	;# 
   171  0108                     	;# 
   172  0109                     	;# 
   173  010C                     	;# 
   174  010C                     	;# 
   175  010D                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  0185                     	;# 
   179  0187                     	;# 
   180  0188                     	;# 
   181  0189                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000D                     	;# 
   197  000E                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0014                     	;# 
   205  0015                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001B                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  001D                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  0081                     	;# 
   219  0085                     	;# 
   220  0086                     	;# 
   221  0087                     	;# 
   222  0089                     	;# 
   223  008C                     	;# 
   224  008D                     	;# 
   225  008E                     	;# 
   226  008F                     	;# 
   227  0090                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0093                     	;# 
   232  0093                     	;# 
   233  0094                     	;# 
   234  0095                     	;# 
   235  0096                     	;# 
   236  0097                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009A                     	;# 
   240  009B                     	;# 
   241  009C                     	;# 
   242  009D                     	;# 
   243  009E                     	;# 
   244  009F                     	;# 
   245  0105                     	;# 
   246  0107                     	;# 
   247  0108                     	;# 
   248  0109                     	;# 
   249  010C                     	;# 
   250  010C                     	;# 
   251  010D                     	;# 
   252  010E                     	;# 
   253  010F                     	;# 
   254  0185                     	;# 
   255  0187                     	;# 
   256  0188                     	;# 
   257  0189                     	;# 
   258  018C                     	;# 
   259  018D                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0009                     	;# 
   269  000A                     	;# 
   270  000B                     	;# 
   271  000C                     	;# 
   272  000D                     	;# 
   273  000E                     	;# 
   274  000E                     	;# 
   275  000F                     	;# 
   276  0010                     	;# 
   277  0011                     	;# 
   278  0012                     	;# 
   279  0013                     	;# 
   280  0014                     	;# 
   281  0015                     	;# 
   282  0015                     	;# 
   283  0016                     	;# 
   284  0017                     	;# 
   285  0018                     	;# 
   286  0019                     	;# 
   287  001A                     	;# 
   288  001B                     	;# 
   289  001B                     	;# 
   290  001C                     	;# 
   291  001D                     	;# 
   292  001E                     	;# 
   293  001F                     	;# 
   294  0081                     	;# 
   295  0085                     	;# 
   296  0086                     	;# 
   297  0087                     	;# 
   298  0089                     	;# 
   299  008C                     	;# 
   300  008D                     	;# 
   301  008E                     	;# 
   302  008F                     	;# 
   303  0090                     	;# 
   304  0091                     	;# 
   305  0092                     	;# 
   306  0093                     	;# 
   307  0093                     	;# 
   308  0093                     	;# 
   309  0094                     	;# 
   310  0095                     	;# 
   311  0096                     	;# 
   312  0097                     	;# 
   313  0098                     	;# 
   314  0099                     	;# 
   315  009A                     	;# 
   316  009B                     	;# 
   317  009C                     	;# 
   318  009D                     	;# 
   319  009E                     	;# 
   320  009F                     	;# 
   321  0105                     	;# 
   322  0107                     	;# 
   323  0108                     	;# 
   324  0109                     	;# 
   325  010C                     	;# 
   326  010C                     	;# 
   327  010D                     	;# 
   328  010E                     	;# 
   329  010F                     	;# 
   330  0185                     	;# 
   331  0187                     	;# 
   332  0188                     	;# 
   333  0189                     	;# 
   334  018C                     	;# 
   335  018D                     	;# 
   336                           
   337                           	psect	idataBANK0
   338  0499                     __pidataBANK0:	
   339                           
   340                           ;initializer for _lcdcolumns
   341  0499  3410               	retlw	16
   342                           
   343                           ;initializer for _lcdrows
   344  049A  3402               	retlw	2
   345                           
   346                           	psect	strings
   347  0384                     __pstrings:	
   348  0384                     stringtab:	
   349  0384                     __stringtab:	
   350                           
   351                           ;	String table - string pointers are 1 byte each
   352  0384  1BFF               	btfsc	btemp+1,7
   353  0385  2B8E               	ljmp	stringcode
   354  0386  1383               	bcf	3,7
   355  0387  187F               	btfsc	btemp+1,0
   356  0388  1783               	bsf	3,7
   357  0389  0800               	movf	0,w
   358  038A  0A84               	incf	4,f
   359  038B  1903               	skipnz
   360  038C  0AFF               	incf	btemp+1,f
   361  038D  0008               	return
   362  038E                     stringcode:	
   363  038E                     stringdir:	
   364  038E  3003               	movlw	high stringdir
   365  038F  008A               	movwf	10
   366  0390  0804               	movf	4,w
   367  0391  0A84               	incf	4,f
   368  0392  0782               	addwf	2,f
   369  0393                     __stringbase:	
   370  0393  3400               	retlw	0
   371  0394                     __end_of__stringtab:	
   372  0394                     _dpowers:	
   373  0394  3401               	retlw	1
   374  0395  3400               	retlw	0
   375  0396  340A               	retlw	10
   376  0397  3400               	retlw	0
   377  0398  3464               	retlw	100
   378  0399  3400               	retlw	0
   379  039A  34E8               	retlw	232
   380  039B  3403               	retlw	3
   381  039C  3410               	retlw	16
   382  039D  3427               	retlw	39
   383  039E                     __end_of_dpowers:	
   384  039E                     _rowaddr:	
   385  039E  3400               	retlw	0
   386  039F  3440               	retlw	64
   387  03A0  3414               	retlw	20
   388  03A1  3454               	retlw	84
   389  03A2                     __end_of_rowaddr:	
   390  03A2                     STR_1:	
   391  03A2  3444               	retlw	68	;'D'
   392  03A3  3469               	retlw	105	;'i'
   393  03A4  3473               	retlw	115	;'s'
   394  03A5  3474               	retlw	116	;'t'
   395  03A6  3461               	retlw	97	;'a'
   396  03A7  346E               	retlw	110	;'n'
   397  03A8  3463               	retlw	99	;'c'
   398  03A9  3469               	retlw	105	;'i'
   399  03AA  3461               	retlw	97	;'a'
   400  03AB  343A               	retlw	58	;':'
   401  03AC  3420               	retlw	32	;' '
   402  03AD  3400               	retlw	0
   403  03AE                     STR_2:	
   404  03AE  3425               	retlw	37	;'%'
   405  03AF  3464               	retlw	100	;'d'
   406  03B0  3400               	retlw	0
   407                           
   408                           ; #config settings
   409  0000                     
   410                           	psect	nvBANK0
   411  004C                     __pnvBANK0:	
   412  004C                     _iomode:	
   413  004C                     	ds	1
   414  000E                     _TMR1	set	14
   415  000B                     _INTCON	set	11
   416  000C                     _PIR1	set	12
   417  0005                     _PORTA	set	5
   418  0006                     _PORTB	set	6
   419  0007                     _PORTC	set	7
   420  0010                     _T1CON	set	16
   421  005F                     _GIE	set	95
   422  0030                     _RB0	set	48
   423  0034                     _RB4	set	52
   424  005B                     _RBIE	set	91
   425  0058                     _RBIF	set	88
   426  003A                     _RC2	set	58
   427  003B                     _RC3	set	59
   428  003C                     _RC4	set	60
   429  003D                     _RC5	set	61
   430  003E                     _RC6	set	62
   431  003F                     _RC7	set	63
   432  0080                     _TMR1ON	set	128
   433  0096                     _IOCB	set	150
   434  008F                     _OSCCON	set	143
   435  008C                     _PIE1	set	140
   436  0085                     _TRISA	set	133
   437  0086                     _TRISB	set	134
   438  0087                     _TRISC	set	135
   439  043A                     _TRISC2	set	1082
   440  043B                     _TRISC3	set	1083
   441  043C                     _TRISC4	set	1084
   442  043D                     _TRISC5	set	1085
   443  043E                     _TRISC6	set	1086
   444  043F                     _TRISC7	set	1087
   445  0188                     _ANSEL	set	392
   446  0189                     _ANSELH	set	393
   447                           
   448                           	psect	cinit
   449  0013                     start_initialization:	
   450  0013                     __initialization:	
   451                           
   452                           ; Clear objects allocated to BANK0
   453  0013  01C7               	clrf	__pbssBANK0& (0+127)
   454  0014  01C8               	clrf	(__pbssBANK0+1)& (0+127)
   455  0015  01C9               	clrf	(__pbssBANK0+2)& (0+127)
   456                           
   457                           ; Initialize objects allocated to BANK0
   458  0016  118A  2499  118A   	fcall	__pidataBANK0	;fetch initializer
   459  0019  00CA               	movwf	__pdataBANK0& (0+127)
   460  001A  118A  249A         	fcall	__pidataBANK0+1	;fetch initializer
   461  001C  00CB               	movwf	(__pdataBANK0+1)& (0+127)
   462  001D                     end_of_initialization:	
   463                           ;End of C runtime variable initialization code
   464                           
   465  001D                     __end_of__initialization:	
   466  001D  0183               	clrf	3
   467  001E  118A  2A0F         	ljmp	_main	;jump to C main() function
   468                           
   469                           	psect	bssBANK0
   470  0047                     __pbssBANK0:	
   471  0047                     _dist:	
   472  0047                     	ds	2
   473  0049                     _dispctrl:	
   474  0049                     	ds	1
   475                           
   476                           	psect	dataBANK0
   477  004A                     __pdataBANK0:	
   478  004A                     _lcdcolumns:	
   479  004A                     	ds	1
   480  004B                     _lcdrows:	
   481  004B                     	ds	1
   482                           
   483                           	psect	cstackCOMMON
   484  0070                     __pcstackCOMMON:	
   485  0070                     ?_Inicializaciones:	
   486  0070                     ?_lcd_clear:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_lcd_on:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_Trigger:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_main:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_echo:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_lcd_ioinit:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_lcd_iowrite4:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_lcd_iowrite8:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?i1___lwdiv:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     lcd_iowrite8@data:	
   514                           ; 2 bytes @ 0x0
   515                           
   516  0070                     i1___lwdiv@divisor:	
   517                           ; 1 bytes @ 0x0
   518                           
   519                           
   520                           ; 2 bytes @ 0x0
   521  0070                     	ds	2
   522  0072                     i1___lwdiv@dividend:	
   523                           
   524                           ; 2 bytes @ 0x2
   525  0072                     	ds	2
   526  0074                     ??i1___lwdiv:	
   527                           
   528                           ; 1 bytes @ 0x4
   529  0074                     	ds	1
   530  0075                     i1___lwdiv@quotient:	
   531                           
   532                           ; 2 bytes @ 0x5
   533  0075                     	ds	2
   534  0077                     i1___lwdiv@counter:	
   535                           
   536                           ; 1 bytes @ 0x7
   537  0077                     	ds	1
   538  0078                     ??_echo:	
   539                           
   540                           ; 1 bytes @ 0x8
   541  0078                     	ds	4
   542                           
   543                           	psect	cstackBANK0
   544  0020                     __pcstackBANK0:	
   545  0020                     ??_Inicializaciones:	
   546  0020                     ??_Trigger:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0020                     ?_lcd_ioset:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0020                     ??_lcd_iowrite8:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0020                     ?___lwdiv:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0020                     lcd_ioset@out:	
   559                           ; 2 bytes @ 0x0
   560                           
   561  0020                     ___lwdiv@divisor:	
   562                           ; 1 bytes @ 0x0
   563                           
   564                           
   565                           ; 2 bytes @ 0x0
   566  0020                     	ds	1
   567  0021                     ??_lcd_ioset:	
   568  0021                     lcd_ioset@pin:	
   569                           ; 1 bytes @ 0x1
   570                           
   571                           
   572                           ; 1 bytes @ 0x1
   573  0021                     	ds	1
   574  0022                     ??_lcd_ioinit:	
   575  0022                     ??_lcd_iowrite4:	
   576                           ; 1 bytes @ 0x2
   577                           
   578  0022                     ___lwdiv@dividend:	
   579                           ; 1 bytes @ 0x2
   580                           
   581                           
   582                           ; 2 bytes @ 0x2
   583  0022                     	ds	1
   584  0023                     lcd_ioinit@iodata:	
   585                           
   586                           ; 1 bytes @ 0x3
   587  0023                     	ds	1
   588  0024                     ??___lwdiv:	
   589  0024                     lcd_ioinit@i:	
   590                           ; 1 bytes @ 0x4
   591                           
   592  0024                     lcd_iowrite4@data:	
   593                           ; 1 bytes @ 0x4
   594                           
   595                           
   596                           ; 1 bytes @ 0x4
   597  0024                     	ds	1
   598  0025                     lcd_iowrite4@i:	
   599  0025                     ___lwdiv@quotient:	
   600                           ; 1 bytes @ 0x5
   601                           
   602                           
   603                           ; 2 bytes @ 0x5
   604  0025                     	ds	1
   605  0026                     ?_lcd_send:	
   606  0026                     lcd_send@rs:	
   607                           ; 1 bytes @ 0x6
   608                           
   609                           
   610                           ; 1 bytes @ 0x6
   611  0026                     	ds	1
   612  0027                     ??_lcd_send:	
   613  0027                     ___lwdiv@counter:	
   614                           ; 1 bytes @ 0x7
   615                           
   616                           
   617                           ; 1 bytes @ 0x7
   618  0027                     	ds	1
   619  0028                     ?___lwmod:	
   620  0028                     lcd_send@data:	
   621                           ; 2 bytes @ 0x8
   622                           
   623  0028                     ___lwmod@divisor:	
   624                           ; 1 bytes @ 0x8
   625                           
   626                           
   627                           ; 2 bytes @ 0x8
   628  0028                     	ds	1
   629  0029                     ?_lcd_init:	
   630  0029                     ??_lcd_clear:	
   631                           ; 1 bytes @ 0x9
   632                           
   633  0029                     ??_lcd_on:	
   634                           ; 1 bytes @ 0x9
   635                           
   636  0029                     ?_lcd_goto:	
   637                           ; 1 bytes @ 0x9
   638                           
   639  0029                     ?_lcd_puts:	
   640                           ; 1 bytes @ 0x9
   641                           
   642  0029                     lcd_init@cols:	
   643                           ; 1 bytes @ 0x9
   644                           
   645  0029                     lcd_goto@row:	
   646                           ; 1 bytes @ 0x9
   647                           
   648  0029                     lcd_puts@string:	
   649                           ; 1 bytes @ 0x9
   650                           
   651                           
   652                           ; 2 bytes @ 0x9
   653  0029                     	ds	1
   654  002A                     ??_lcd_goto:	
   655  002A                     lcd_init@rows:	
   656                           ; 1 bytes @ 0xA
   657                           
   658  002A                     ___lwmod@dividend:	
   659                           ; 1 bytes @ 0xA
   660                           
   661                           
   662                           ; 2 bytes @ 0xA
   663  002A                     	ds	1
   664  002B                     ??_lcd_init:	
   665  002B                     ??_lcd_puts:	
   666                           ; 1 bytes @ 0xB
   667                           
   668  002B                     lcd_goto@col:	
   669                           ; 1 bytes @ 0xB
   670                           
   671                           
   672                           ; 1 bytes @ 0xB
   673  002B                     	ds	1
   674  002C                     ??___lwmod:	
   675                           
   676                           ; 1 bytes @ 0xC
   677  002C                     	ds	1
   678  002D                     ___lwmod@counter:	
   679                           
   680                           ; 1 bytes @ 0xD
   681  002D                     	ds	1
   682  002E                     ?_sprintf:	
   683  002E                     lcd_init@iodata:	
   684                           ; 2 bytes @ 0xE
   685                           
   686  002E                     sprintf@f:	
   687                           ; 1 bytes @ 0xE
   688                           
   689                           
   690                           ; 1 bytes @ 0xE
   691  002E                     	ds	3
   692  0031                     ??_sprintf:	
   693                           
   694                           ; 1 bytes @ 0x11
   695  0031                     	ds	3
   696  0034                     sprintf@ap:	
   697                           
   698                           ; 1 bytes @ 0x14
   699  0034                     	ds	1
   700  0035                     sprintf@flag:	
   701                           
   702                           ; 1 bytes @ 0x15
   703  0035                     	ds	1
   704  0036                     sprintf@prec:	
   705                           
   706                           ; 1 bytes @ 0x16
   707  0036                     	ds	1
   708  0037                     sprintf@val:	
   709                           
   710                           ; 2 bytes @ 0x17
   711  0037                     	ds	2
   712  0039                     sprintf@sp:	
   713                           
   714                           ; 1 bytes @ 0x19
   715  0039                     	ds	1
   716  003A                     sprintf@c:	
   717                           
   718                           ; 1 bytes @ 0x1A
   719  003A                     	ds	1
   720  003B                     ??_main:	
   721                           
   722                           ; 1 bytes @ 0x1B
   723  003B                     	ds	2
   724  003D                     main@distancia:	
   725                           
   726                           ; 10 bytes @ 0x1D
   727  003D                     	ds	10
   728                           
   729                           	psect	maintext
   730  020F                     __pmaintext:	
   731 ;;
   732 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   733 ;;
   734 ;; *************** function _main *****************
   735 ;; Defined at:
   736 ;;		line 40 in file "main.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;  distancia      10   29[BANK0 ] unsigned char [10]
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : B00/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   750 ;;      Params:         0       0       0       0
   751 ;;      Locals:         0      10       0       0
   752 ;;      Temps:          0       2       0       0
   753 ;;      Totals:         0      12       0       0
   754 ;;Total ram usage:       12 bytes
   755 ;; Hardware stack levels required when called:    6
   756 ;; This function calls:
   757 ;;		_Inicializaciones
   758 ;;		_Trigger
   759 ;;		_lcd_clear
   760 ;;		_lcd_goto
   761 ;;		_lcd_init
   762 ;;		_lcd_on
   763 ;;		_lcd_puts
   764 ;;		_sprintf
   765 ;; This function is called by:
   766 ;;		Startup code after reset
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function _main
   772  020F                     _main:	
   773                           
   774                           ;main.c: 42: char distancia[10];
   775                           ;main.c: 44: Inicializaciones();
   776                           
   777                           ;incstack = 0
   778                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   779  020F  118A  23B1  118A   	fcall	_Inicializaciones
   780                           
   781                           ;main.c: 46: lcd_init(0, 16, 2);
   782  0212  3010               	movlw	16
   783  0213  1283               	bcf	3,5	;RP0=0, select bank0
   784  0214  1303               	bcf	3,6	;RP1=0, select bank0
   785  0215  00BB               	movwf	??_main
   786  0216  083B               	movf	??_main,w
   787  0217  00A9               	movwf	lcd_init@cols
   788  0218  3002               	movlw	2
   789  0219  00BC               	movwf	??_main+1
   790  021A  083C               	movf	??_main+1,w
   791  021B  00AA               	movwf	lcd_init@rows
   792  021C  3000               	movlw	0
   793  021D  118A  2020  118A   	fcall	_lcd_init
   794                           
   795                           ;main.c: 47: lcd_clear();
   796  0220  118A  246A  118A   	fcall	_lcd_clear
   797                           
   798                           ;main.c: 48: lcd_on();
   799  0223  118A  247D  118A   	fcall	_lcd_on
   800                           
   801                           ;main.c: 49: lcd_goto(0, 0);
   802  0226  1283               	bcf	3,5	;RP0=0, select bank0
   803  0227  1303               	bcf	3,6	;RP1=0, select bank0
   804  0228  01A9               	clrf	lcd_goto@row
   805  0229  3000               	movlw	0
   806  022A  118A  2449  118A   	fcall	_lcd_goto
   807                           
   808                           ;main.c: 50: lcd_puts("Distancia: ");
   809  022D  300F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   810  022E  1283               	bcf	3,5	;RP0=0, select bank0
   811  022F  1303               	bcf	3,6	;RP1=0, select bank0
   812  0230  00A9               	movwf	lcd_puts@string
   813  0231  3080               	movlw	128
   814  0232                     L1:	
   815  0232  00AA               	movwf	lcd_puts@string+1
   816  0233  118A  2428  118A   	fcall	_lcd_puts
   817                           
   818                           ;main.c: 52: {
   819                           ;main.c: 53: Trigger();
   820                           
   821                           ;main.c: 51: while(1)
   822  0236  118A  248D  118A   	fcall	_Trigger
   823                           
   824                           ;main.c: 54: _delay((unsigned long)((60)*(8000000/4000.0)));
   825  0239  309C               	movlw	156
   826  023A  1283               	bcf	3,5	;RP0=0, select bank0
   827  023B  1303               	bcf	3,6	;RP1=0, select bank0
   828  023C  00BC               	movwf	??_main+1
   829  023D  30D7               	movlw	215
   830  023E  00BB               	movwf	??_main
   831  023F                     u1217:	
   832  023F  0BBB               	decfsz	??_main,f
   833  0240  2A3F               	goto	u1217
   834  0241  0BBC               	decfsz	??_main+1,f
   835  0242  2A3F               	goto	u1217
   836                           
   837                           ;main.c: 55: lcd_goto(0, 1);
   838  0243  1283               	bcf	3,5	;RP0=0, select bank0
   839  0244  1303               	bcf	3,6	;RP1=0, select bank0
   840  0245  01A9               	clrf	lcd_goto@row
   841  0246  0AA9               	incf	lcd_goto@row,f
   842  0247  3000               	movlw	0
   843  0248  118A  2449  118A   	fcall	_lcd_goto
   844                           
   845                           ;main.c: 56: sprintf(distancia,"%d",dist);
   846  024B  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   847  024C  1283               	bcf	3,5	;RP0=0, select bank0
   848  024D  1303               	bcf	3,6	;RP1=0, select bank0
   849  024E  00BB               	movwf	??_main
   850  024F  083B               	movf	??_main,w
   851  0250  00AE               	movwf	sprintf@f
   852  0251  0848               	movf	_dist+1,w
   853  0252  00B0               	movwf	?_sprintf+2
   854  0253  0847               	movf	_dist,w
   855  0254  00AF               	movwf	?_sprintf+1
   856  0255  303D               	movlw	(low (main@distancia| 0))& (0+255)
   857  0256  118A  20F1  118A   	fcall	_sprintf
   858                           
   859                           ;main.c: 57: lcd_puts(distancia);
   860  0259  303D               	movlw	(low (main@distancia| 0))& (0+255)
   861  025A  1283               	bcf	3,5	;RP0=0, select bank0
   862  025B  1303               	bcf	3,6	;RP1=0, select bank0
   863  025C  00A9               	movwf	lcd_puts@string
   864  025D  3000               	movlw	0
   865  025E  2A32               	goto	L1
   866  025F                     __end_of_main:	
   867                           ;main.c: 58: }
   868                           ;main.c: 59: return;
   869                           
   870                           
   871                           	psect	text1
   872  00F1                     __ptext1:	
   873 ;; *************** function _sprintf *****************
   874 ;; Defined at:
   875 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  sp              1    wreg     PTR unsigned char 
   878 ;;		 -> main@distancia(10), 
   879 ;;  f               1   14[BANK0 ] PTR const unsigned char 
   880 ;;		 -> STR_2(3), 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  sp              1   25[BANK0 ] PTR unsigned char 
   883 ;;		 -> main@distancia(10), 
   884 ;;  tmpval          4    0        struct .
   885 ;;  val             2   23[BANK0 ] unsigned int 
   886 ;;  cp              2    0        PTR const unsigned char 
   887 ;;  len             2    0        unsigned int 
   888 ;;  c               1   26[BANK0 ] char 
   889 ;;  prec            1   22[BANK0 ] char 
   890 ;;  flag            1   21[BANK0 ] unsigned char 
   891 ;;  ap              1   20[BANK0 ] PTR void [1]
   892 ;;		 -> ?_sprintf(2), 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  2   14[BANK0 ] int 
   895 ;; Registers used:
   896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   902 ;;      Params:         0       3       0       0
   903 ;;      Locals:         0       7       0       0
   904 ;;      Temps:          0       3       0       0
   905 ;;      Totals:         0      13       0       0
   906 ;;Total ram usage:       13 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    3
   909 ;; This function calls:
   910 ;;		___lwdiv
   911 ;;		___lwmod
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _sprintf
   919  00F1                     _sprintf:	
   920                           
   921                           ;incstack = 0
   922                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   923                           ;sprintf@sp stored from wreg
   924  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   925  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   926  00F3  00B9               	movwf	sprintf@sp
   927                           
   928                           ;doprnt.c: 494: va_list ap;
   929                           ;doprnt.c: 499: signed char c;
   930                           ;doprnt.c: 506: signed char prec;
   931                           ;doprnt.c: 508: unsigned char flag;
   932                           ;doprnt.c: 523: union {
   933                           ;doprnt.c: 524: unsigned long vd;
   934                           ;doprnt.c: 525: double integ;
   935                           ;doprnt.c: 526: } tmpval;
   936                           ;doprnt.c: 528: unsigned int val;
   937                           ;doprnt.c: 529: unsigned len;
   938                           ;doprnt.c: 530: const char * cp;
   939                           ;doprnt.c: 533: *ap = __va_start();
   940  00F4  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   941  00F5  00B1               	movwf	??_sprintf
   942  00F6  0831               	movf	??_sprintf,w
   943  00F7  00B4               	movwf	sprintf@ap
   944  00F8                     l1367:	
   945                           ;doprnt.c: 536: while(c = *f++) {
   946                           
   947  00F8  3001               	movlw	1
   948  00F9  07AE               	addwf	sprintf@f,f
   949  00FA  30FF               	movlw	-1
   950  00FB  072E               	addwf	sprintf@f,w
   951  00FC  0084               	movwf	4
   952  00FD  118A  238E  118A   	fcall	stringdir
   953  0100  00B1               	movwf	??_sprintf
   954  0101  0831               	movf	??_sprintf,w
   955  0102  00BA               	movwf	sprintf@c
   956  0103  083A               	movf	sprintf@c,w
   957  0104  1903               	btfsc	3,2
   958  0105  29B2               	goto	l1369
   959                           
   960                           ;doprnt.c: 538: if(c != '%')
   961  0106  3025               	movlw	37
   962  0107  063A               	xorwf	sprintf@c,w
   963  0108  1903               	btfsc	3,2
   964  0109  2916               	goto	l1323
   965                           
   966                           ;doprnt.c: 540: {
   967                           ;doprnt.c: 541: ((*sp++ = (c)));
   968  010A  083A               	movf	sprintf@c,w
   969  010B  00B1               	movwf	??_sprintf
   970  010C  0839               	movf	sprintf@sp,w
   971  010D  0084               	movwf	4
   972  010E  0831               	movf	??_sprintf,w
   973  010F  1383               	bcf	3,7	;select IRP bank0
   974  0110  0080               	movwf	0
   975  0111  3001               	movlw	1
   976  0112  00B1               	movwf	??_sprintf
   977  0113  0831               	movf	??_sprintf,w
   978  0114  07B9               	addwf	sprintf@sp,f
   979                           
   980                           ;doprnt.c: 542: continue;
   981  0115  28F8               	goto	l1367
   982  0116                     l1323:	
   983                           
   984                           ;doprnt.c: 543: }
   985                           ;doprnt.c: 548: flag = 0;
   986  0116  01B5               	clrf	sprintf@flag
   987                           
   988                           ;doprnt.c: 822: }
   989                           
   990                           ;doprnt.c: 813: continue;
   991                           
   992                           ;doprnt.c: 802: default:
   993                           
   994                           ;doprnt.c: 698: case 'i':
   995                           ;doprnt.c: 699: break;
   996                           
   997                           ;doprnt.c: 697: case 'd':
   998                           
   999                           ;doprnt.c: 638: goto alldone;
  1000                           
  1001                           ;doprnt.c: 637: case 0:
  1002                           
  1003                           ;doprnt.c: 635: switch(c = *f++) {
  1004  0117  3001               	movlw	1
  1005  0118  07AE               	addwf	sprintf@f,f
  1006  0119  30FF               	movlw	-1
  1007  011A  072E               	addwf	sprintf@f,w
  1008  011B  0084               	movwf	4
  1009  011C  118A  238E  118A   	fcall	stringdir
  1010  011F  00BA               	movwf	sprintf@c
  1011                           
  1012                           ; Switch size 1, requested type "space"
  1013                           ; Number of cases is 3, Range of values is 0 to 105
  1014                           ; switch strategies available:
  1015                           ; Name         Instructions Cycles
  1016                           ; simple_byte           10     6 (average)
  1017                           ; direct_byte          219     7 (fixed)
  1018                           ; jumptable            260     6 (fixed)
  1019                           ;	Chosen strategy is simple_byte
  1020  0120  3A00               	xorlw	0	; case 0
  1021  0121  1903               	skipnz
  1022  0122  29B2               	goto	l1369
  1023  0123  3A64               	xorlw	100	; case 100
  1024  0124  1903               	skipnz
  1025  0125  292A               	goto	l1329
  1026  0126  3A0D               	xorlw	13	; case 105
  1027  0127  1903               	skipnz
  1028  0128  292A               	goto	l1329
  1029  0129  28F8               	goto	l1367
  1030  012A                     l1329:	
  1031                           
  1032                           ;doprnt.c: 1253: {
  1033                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1034  012A  0834               	movf	sprintf@ap,w
  1035  012B  0084               	movwf	4
  1036  012C  1383               	bcf	3,7	;select IRP bank0
  1037  012D  0800               	movf	0,w
  1038  012E  00B7               	movwf	sprintf@val
  1039  012F  0A84               	incf	4,f
  1040  0130  0800               	movf	0,w
  1041  0131  00B8               	movwf	sprintf@val+1
  1042  0132  3002               	movlw	2
  1043  0133  00B1               	movwf	??_sprintf
  1044  0134  0831               	movf	??_sprintf,w
  1045  0135  07B4               	addwf	sprintf@ap,f
  1046                           
  1047                           ;doprnt.c: 1261: if((int)val < 0) {
  1048  0136  1FB8               	btfss	sprintf@val+1,7
  1049  0137  2941               	goto	l1339
  1050                           
  1051                           ;doprnt.c: 1262: flag |= 0x03;
  1052  0138  3003               	movlw	3
  1053  0139  00B1               	movwf	??_sprintf
  1054  013A  0831               	movf	??_sprintf,w
  1055  013B  04B5               	iorwf	sprintf@flag,f
  1056                           
  1057                           ;doprnt.c: 1263: val = -val;
  1058  013C  09B7               	comf	sprintf@val,f
  1059  013D  09B8               	comf	sprintf@val+1,f
  1060  013E  0AB7               	incf	sprintf@val,f
  1061  013F  1903               	skipnz
  1062  0140  0AB8               	incf	sprintf@val+1,f
  1063  0141                     l1339:	
  1064                           
  1065                           ;doprnt.c: 1264: }
  1066                           ;doprnt.c: 1266: }
  1067                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1068  0141  01BA               	clrf	sprintf@c
  1069  0142  0ABA               	incf	sprintf@c,f
  1070  0143  3005               	movlw	5
  1071  0144  063A               	xorwf	sprintf@c,w
  1072  0145  1903               	btfsc	3,2
  1073  0146  2964               	goto	l1351
  1074  0147                     l1345:	
  1075                           
  1076                           ;doprnt.c: 1306: if(val < dpowers[c])
  1077  0147  083A               	movf	sprintf@c,w
  1078  0148  00B1               	movwf	??_sprintf
  1079  0149  0731               	addwf	??_sprintf,w
  1080  014A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1081  014B  0084               	movwf	4
  1082  014C  118A  238E  118A   	fcall	stringdir
  1083  014F  00B2               	movwf	??_sprintf+1
  1084  0150  118A  238E  118A   	fcall	stringdir
  1085  0153  00B3               	movwf	??_sprintf+2
  1086  0154  0833               	movf	??_sprintf+2,w
  1087  0155  0238               	subwf	sprintf@val+1,w
  1088  0156  1D03               	skipz
  1089  0157  295A               	goto	u1045
  1090  0158  0832               	movf	??_sprintf+1,w
  1091  0159  0237               	subwf	sprintf@val,w
  1092  015A                     u1045:	
  1093  015A  1C03               	btfss	3,0
  1094  015B  2964               	goto	l1351
  1095                           
  1096                           ;doprnt.c: 1307: break;
  1097  015C  3001               	movlw	1
  1098  015D  00B1               	movwf	??_sprintf
  1099  015E  0831               	movf	??_sprintf,w
  1100  015F  07BA               	addwf	sprintf@c,f
  1101  0160  3005               	movlw	5
  1102  0161  063A               	xorwf	sprintf@c,w
  1103  0162  1D03               	btfss	3,2
  1104  0163  2947               	goto	l1345
  1105  0164                     l1351:	
  1106                           
  1107                           ;doprnt.c: 1422: {
  1108                           ;doprnt.c: 1438: if(flag & 0x03)
  1109  0164  0835               	movf	sprintf@flag,w
  1110  0165  3903               	andlw	3
  1111  0166  1903               	btfsc	3,2
  1112  0167  2973               	goto	l1357
  1113                           
  1114                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1115  0168  302D               	movlw	45
  1116  0169  00B1               	movwf	??_sprintf
  1117  016A  0839               	movf	sprintf@sp,w
  1118  016B  0084               	movwf	4
  1119  016C  0831               	movf	??_sprintf,w
  1120  016D  1383               	bcf	3,7	;select IRP bank0
  1121  016E  0080               	movwf	0
  1122  016F  3001               	movlw	1
  1123  0170  00B1               	movwf	??_sprintf
  1124  0171  0831               	movf	??_sprintf,w
  1125  0172  07B9               	addwf	sprintf@sp,f
  1126  0173                     l1357:	
  1127                           
  1128                           ;doprnt.c: 1469: }
  1129                           ;doprnt.c: 1472: prec = c;
  1130  0173  083A               	movf	sprintf@c,w
  1131  0174  00B1               	movwf	??_sprintf
  1132  0175  0831               	movf	??_sprintf,w
  1133  0176  00B6               	movwf	sprintf@prec
  1134  0177                     l1365:	
  1135                           ;doprnt.c: 1474: while(prec--) {
  1136                           
  1137  0177  30FF               	movlw	255
  1138  0178  00B1               	movwf	??_sprintf
  1139  0179  0831               	movf	??_sprintf,w
  1140  017A  07B6               	addwf	sprintf@prec,f
  1141  017B  0A36               	incf	sprintf@prec,w
  1142  017C  1903               	btfsc	3,2
  1143  017D  28F8               	goto	l1367
  1144                           
  1145                           ;doprnt.c: 1478: {
  1146                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1147  017E  300A               	movlw	10
  1148  017F  00A8               	movwf	___lwmod@divisor
  1149  0180  3000               	movlw	0
  1150  0181  00A9               	movwf	___lwmod@divisor+1
  1151  0182  0836               	movf	sprintf@prec,w
  1152  0183  00B1               	movwf	??_sprintf
  1153  0184  0731               	addwf	??_sprintf,w
  1154  0185  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1155  0186  0084               	movwf	4
  1156  0187  118A  238E  118A   	fcall	stringdir
  1157  018A  00A0               	movwf	___lwdiv@divisor
  1158  018B  118A  238E  118A   	fcall	stringdir
  1159  018E  00A1               	movwf	___lwdiv@divisor+1
  1160  018F  0838               	movf	sprintf@val+1,w
  1161  0190  00A3               	movwf	___lwdiv@dividend+1
  1162  0191  0837               	movf	sprintf@val,w
  1163  0192  00A2               	movwf	___lwdiv@dividend
  1164  0193  118A  22A1  118A   	fcall	___lwdiv
  1165  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0198  0821               	movf	?___lwdiv+1,w
  1168  0199  00AB               	movwf	___lwmod@dividend+1
  1169  019A  0820               	movf	?___lwdiv,w
  1170  019B  00AA               	movwf	___lwmod@dividend
  1171  019C  118A  2350  118A   	fcall	___lwmod
  1172  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1173  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1174  01A1  0828               	movf	?___lwmod,w
  1175  01A2  3E30               	addlw	48
  1176  01A3  00B2               	movwf	??_sprintf+1
  1177  01A4  0832               	movf	??_sprintf+1,w
  1178  01A5  00BA               	movwf	sprintf@c
  1179                           
  1180                           ;doprnt.c: 1523: }
  1181                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1182  01A6  083A               	movf	sprintf@c,w
  1183  01A7  00B1               	movwf	??_sprintf
  1184  01A8  0839               	movf	sprintf@sp,w
  1185  01A9  0084               	movwf	4
  1186  01AA  0831               	movf	??_sprintf,w
  1187  01AB  1383               	bcf	3,7	;select IRP bank0
  1188  01AC  0080               	movwf	0
  1189  01AD  3001               	movlw	1
  1190  01AE  00B1               	movwf	??_sprintf
  1191  01AF  0831               	movf	??_sprintf,w
  1192  01B0  07B9               	addwf	sprintf@sp,f
  1193  01B1  2977               	goto	l1365
  1194  01B2                     l1369:	
  1195                           ;doprnt.c: 1525: }
  1196                           ;doprnt.c: 1533: }
  1197                           ;doprnt.c: 1535: alldone:
  1198                           
  1199                           
  1200                           ;doprnt.c: 1538: *sp = 0;
  1201  01B2  0839               	movf	sprintf@sp,w
  1202  01B3  0084               	movwf	4
  1203  01B4  1383               	bcf	3,7	;select IRP bank0
  1204  01B5  0180               	clrf	0
  1205  01B6  0008               	return
  1206  01B7                     __end_of_sprintf:	
  1207                           ;doprnt.c: 1540: return 0;
  1208                           ;	Return value of _sprintf is never used
  1209                           
  1210                           
  1211                           	psect	text2
  1212  0350                     __ptext2:	
  1213 ;; *************** function ___lwmod *****************
  1214 ;; Defined at:
  1215 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  divisor         2    8[BANK0 ] unsigned int 
  1218 ;;  dividend        2   10[BANK0 ] unsigned int 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  counter         1   13[BANK0 ] unsigned char 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  2    8[BANK0 ] unsigned int 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1230 ;;      Params:         0       4       0       0
  1231 ;;      Locals:         0       1       0       0
  1232 ;;      Temps:          0       1       0       0
  1233 ;;      Totals:         0       6       0       0
  1234 ;;Total ram usage:        6 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; Hardware stack levels required when called:    2
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_sprintf
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           
  1245                           ;psect for function ___lwmod
  1246  0350                     ___lwmod:	
  1247                           
  1248                           ;incstack = 0
  1249                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1250  0350  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0351  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0352  0828               	movf	___lwmod@divisor,w
  1253  0353  0429               	iorwf	___lwmod@divisor+1,w
  1254  0354  1903               	btfsc	3,2
  1255  0355  2B7F               	goto	l1205
  1256  0356  01AD               	clrf	___lwmod@counter
  1257  0357  0AAD               	incf	___lwmod@counter,f
  1258  0358                     l1195:	
  1259  0358  1BA9               	btfsc	___lwmod@divisor+1,7
  1260  0359  2B66               	goto	l1197
  1261  035A  3001               	movlw	1
  1262  035B                     u915:	
  1263  035B  1003               	clrc
  1264  035C  0DA8               	rlf	___lwmod@divisor,f
  1265  035D  0DA9               	rlf	___lwmod@divisor+1,f
  1266  035E  3EFF               	addlw	-1
  1267  035F  1D03               	skipz
  1268  0360  2B5B               	goto	u915
  1269  0361  3001               	movlw	1
  1270  0362  00AC               	movwf	??___lwmod
  1271  0363  082C               	movf	??___lwmod,w
  1272  0364  07AD               	addwf	___lwmod@counter,f
  1273  0365  2B58               	goto	l1195
  1274  0366                     l1197:	
  1275  0366  0829               	movf	___lwmod@divisor+1,w
  1276  0367  022B               	subwf	___lwmod@dividend+1,w
  1277  0368  1D03               	skipz
  1278  0369  2B6C               	goto	u935
  1279  036A  0828               	movf	___lwmod@divisor,w
  1280  036B  022A               	subwf	___lwmod@dividend,w
  1281  036C                     u935:	
  1282  036C  1C03               	skipc
  1283  036D  2B74               	goto	l1201
  1284  036E  0828               	movf	___lwmod@divisor,w
  1285  036F  02AA               	subwf	___lwmod@dividend,f
  1286  0370  0829               	movf	___lwmod@divisor+1,w
  1287  0371  1C03               	skipc
  1288  0372  03AB               	decf	___lwmod@dividend+1,f
  1289  0373  02AB               	subwf	___lwmod@dividend+1,f
  1290  0374                     l1201:	
  1291  0374  3001               	movlw	1
  1292  0375                     u945:	
  1293  0375  1003               	clrc
  1294  0376  0CA9               	rrf	___lwmod@divisor+1,f
  1295  0377  0CA8               	rrf	___lwmod@divisor,f
  1296  0378  3EFF               	addlw	-1
  1297  0379  1D03               	skipz
  1298  037A  2B75               	goto	u945
  1299  037B  3001               	movlw	1
  1300  037C  02AD               	subwf	___lwmod@counter,f
  1301  037D  1D03               	btfss	3,2
  1302  037E  2B66               	goto	l1197
  1303  037F                     l1205:	
  1304  037F  082B               	movf	___lwmod@dividend+1,w
  1305  0380  00A9               	movwf	?___lwmod+1
  1306  0381  082A               	movf	___lwmod@dividend,w
  1307  0382  00A8               	movwf	?___lwmod
  1308  0383  0008               	return
  1309  0384                     __end_of___lwmod:	
  1310                           
  1311                           	psect	text3
  1312  02A1                     __ptext3:	
  1313 ;; *************** function ___lwdiv *****************
  1314 ;; Defined at:
  1315 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  divisor         2    0[BANK0 ] unsigned int 
  1318 ;;  dividend        2    2[BANK0 ] unsigned int 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  quotient        2    5[BANK0 ] unsigned int 
  1321 ;;  counter         1    7[BANK0 ] unsigned char 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  2    0[BANK0 ] unsigned int 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1331 ;;      Params:         0       4       0       0
  1332 ;;      Locals:         0       3       0       0
  1333 ;;      Temps:          0       1       0       0
  1334 ;;      Totals:         0       8       0       0
  1335 ;;Total ram usage:        8 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    2
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_sprintf
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           
  1346                           ;psect for function ___lwdiv
  1347  02A1                     ___lwdiv:	
  1348                           
  1349                           ;incstack = 0
  1350                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1351  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1352  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1353  02A3  01A5               	clrf	___lwdiv@quotient
  1354  02A4  01A6               	clrf	___lwdiv@quotient+1
  1355  02A5  0820               	movf	___lwdiv@divisor,w
  1356  02A6  0421               	iorwf	___lwdiv@divisor+1,w
  1357  02A7  1903               	btfsc	3,2
  1358  02A8  2ADA               	goto	l1183
  1359  02A9  01A7               	clrf	___lwdiv@counter
  1360  02AA  0AA7               	incf	___lwdiv@counter,f
  1361  02AB                     l1171:	
  1362  02AB  1BA1               	btfsc	___lwdiv@divisor+1,7
  1363  02AC  2AB9               	goto	l1173
  1364  02AD  3001               	movlw	1
  1365  02AE                     u845:	
  1366  02AE  1003               	clrc
  1367  02AF  0DA0               	rlf	___lwdiv@divisor,f
  1368  02B0  0DA1               	rlf	___lwdiv@divisor+1,f
  1369  02B1  3EFF               	addlw	-1
  1370  02B2  1D03               	skipz
  1371  02B3  2AAE               	goto	u845
  1372  02B4  3001               	movlw	1
  1373  02B5  00A4               	movwf	??___lwdiv
  1374  02B6  0824               	movf	??___lwdiv,w
  1375  02B7  07A7               	addwf	___lwdiv@counter,f
  1376  02B8  2AAB               	goto	l1171
  1377  02B9                     l1173:	
  1378  02B9  3001               	movlw	1
  1379  02BA                     u865:	
  1380  02BA  1003               	clrc
  1381  02BB  0DA5               	rlf	___lwdiv@quotient,f
  1382  02BC  0DA6               	rlf	___lwdiv@quotient+1,f
  1383  02BD  3EFF               	addlw	-1
  1384  02BE  1D03               	skipz
  1385  02BF  2ABA               	goto	u865
  1386  02C0  0821               	movf	___lwdiv@divisor+1,w
  1387  02C1  0223               	subwf	___lwdiv@dividend+1,w
  1388  02C2  1D03               	skipz
  1389  02C3  2AC6               	goto	u875
  1390  02C4  0820               	movf	___lwdiv@divisor,w
  1391  02C5  0222               	subwf	___lwdiv@dividend,w
  1392  02C6                     u875:	
  1393  02C6  1C03               	skipc
  1394  02C7  2ACF               	goto	l1179
  1395  02C8  0820               	movf	___lwdiv@divisor,w
  1396  02C9  02A2               	subwf	___lwdiv@dividend,f
  1397  02CA  0821               	movf	___lwdiv@divisor+1,w
  1398  02CB  1C03               	skipc
  1399  02CC  03A3               	decf	___lwdiv@dividend+1,f
  1400  02CD  02A3               	subwf	___lwdiv@dividend+1,f
  1401  02CE  1425               	bsf	___lwdiv@quotient,0
  1402  02CF                     l1179:	
  1403  02CF  3001               	movlw	1
  1404  02D0                     u885:	
  1405  02D0  1003               	clrc
  1406  02D1  0CA1               	rrf	___lwdiv@divisor+1,f
  1407  02D2  0CA0               	rrf	___lwdiv@divisor,f
  1408  02D3  3EFF               	addlw	-1
  1409  02D4  1D03               	skipz
  1410  02D5  2AD0               	goto	u885
  1411  02D6  3001               	movlw	1
  1412  02D7  02A7               	subwf	___lwdiv@counter,f
  1413  02D8  1D03               	btfss	3,2
  1414  02D9  2AB9               	goto	l1173
  1415  02DA                     l1183:	
  1416  02DA  0826               	movf	___lwdiv@quotient+1,w
  1417  02DB  00A1               	movwf	?___lwdiv+1
  1418  02DC  0825               	movf	___lwdiv@quotient,w
  1419  02DD  00A0               	movwf	?___lwdiv
  1420  02DE  0008               	return
  1421  02DF                     __end_of___lwdiv:	
  1422                           
  1423                           	psect	text4
  1424  0428                     __ptext4:	
  1425 ;; *************** function _lcd_puts *****************
  1426 ;; Defined at:
  1427 ;;		line 178 in file "LCD.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  string          2    9[BANK0 ] PTR const unsigned char 
  1430 ;;		 -> main@distancia(10), STR_1(12), 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1442 ;;      Params:         0       2       0       0
  1443 ;;      Locals:         0       0       0       0
  1444 ;;      Temps:          0       0       0       0
  1445 ;;      Totals:         0       2       0       0
  1446 ;;Total ram usage:        2 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    5
  1449 ;; This function calls:
  1450 ;;		_lcd_send
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           
  1457                           ;psect for function _lcd_puts
  1458  0428                     _lcd_puts:	
  1459  0428                     l1307:	
  1460                           ;LCD.c: 180: while (*string != '\0')
  1461                           
  1462                           ;incstack = 0
  1463                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1464                           
  1465  0428  1283               	bcf	3,5	;RP0=0, select bank0
  1466  0429  1303               	bcf	3,6	;RP1=0, select bank0
  1467  042A  082A               	movf	lcd_puts@string+1,w
  1468  042B  00FF               	movwf	127
  1469  042C  0829               	movf	lcd_puts@string,w
  1470  042D  0084               	movwf	4
  1471  042E  118A  2384  118A   	fcall	stringtab
  1472  0431  3A00               	xorlw	0
  1473  0432  1903               	btfsc	3,2
  1474  0433  0008               	return
  1475                           
  1476                           ;LCD.c: 181: lcd_send( *string++, 1 );
  1477  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0436  01A6               	clrf	lcd_send@rs
  1480  0437  0AA6               	incf	lcd_send@rs,f
  1481  0438  082A               	movf	lcd_puts@string+1,w
  1482  0439  00FF               	movwf	127
  1483  043A  0829               	movf	lcd_puts@string,w
  1484  043B  0084               	movwf	4
  1485  043C  118A  2384  118A   	fcall	stringtab
  1486  043F  118A  231B  118A   	fcall	_lcd_send
  1487  0442  3001               	movlw	1
  1488  0443  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0444  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0445  07A9               	addwf	lcd_puts@string,f
  1491  0446  1803               	skipnc
  1492  0447  0AAA               	incf	lcd_puts@string+1,f
  1493  0448  2C28               	goto	l1307
  1494  0449                     __end_of_lcd_puts:	
  1495                           
  1496                           	psect	text5
  1497  047D                     __ptext5:	
  1498 ;; *************** function _lcd_on *****************
  1499 ;; Defined at:
  1500 ;;		line 91 in file "LCD.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;		None
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;		None
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1514 ;;      Params:         0       0       0       0
  1515 ;;      Locals:         0       0       0       0
  1516 ;;      Temps:          0       1       0       0
  1517 ;;      Totals:         0       1       0       0
  1518 ;;Total ram usage:        1 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:    5
  1521 ;; This function calls:
  1522 ;;		_lcd_send
  1523 ;; This function is called by:
  1524 ;;		_main
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           
  1529                           ;psect for function _lcd_on
  1530  047D                     _lcd_on:	
  1531                           
  1532                           ;LCD.c: 93: dispctrl |= (1<<2);
  1533                           
  1534                           ;incstack = 0
  1535                           ; Regs used in _lcd_on: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1536  047D  1283               	bcf	3,5	;RP0=0, select bank0
  1537  047E  1303               	bcf	3,6	;RP1=0, select bank0
  1538  047F  1549               	bsf	_dispctrl,2
  1539                           
  1540                           ;LCD.c: 94: lcd_send( E_DISPLAY_ON_OFF_CTRL | dispctrl, 0 );
  1541  0480  01A6               	clrf	lcd_send@rs
  1542  0481  0849               	movf	_dispctrl,w
  1543  0482  3808               	iorlw	8
  1544  0483  118A  231B  118A   	fcall	_lcd_send
  1545                           
  1546                           ;LCD.c: 95: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1547  0486  3021               	movlw	33
  1548  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0489  00A9               	movwf	??_lcd_on
  1551  048A                     u1227:	
  1552  048A  0BA9               	decfsz	??_lcd_on,f
  1553  048B  2C8A               	goto	u1227
  1554  048C  0008               	return
  1555  048D                     __end_of_lcd_on:	
  1556                           
  1557                           	psect	text6
  1558  0020                     __ptext6:	
  1559 ;; *************** function _lcd_init *****************
  1560 ;; Defined at:
  1561 ;;		line 33 in file "LCD.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  iodata          1    wreg     PTR void 
  1564 ;;		 -> NULL(0), 
  1565 ;;  cols            1    9[BANK0 ] unsigned char 
  1566 ;;  rows            1   10[BANK0 ] unsigned char 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  iodata          1   14[BANK0 ] PTR void 
  1569 ;;		 -> NULL(0), 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      unsigned char 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1579 ;;      Params:         0       2       0       0
  1580 ;;      Locals:         0       1       0       0
  1581 ;;      Temps:          0       3       0       0
  1582 ;;      Totals:         0       6       0       0
  1583 ;;Total ram usage:        6 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    5
  1586 ;; This function calls:
  1587 ;;		_lcd_ioinit
  1588 ;;		_lcd_iowrite4
  1589 ;;		_lcd_send
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           
  1596                           ;psect for function _lcd_init
  1597  0020                     _lcd_init:	
  1598                           
  1599                           ;incstack = 0
  1600                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1601                           ;lcd_init@iodata stored from wreg
  1602  0020  1283               	bcf	3,5	;RP0=0, select bank0
  1603  0021  1303               	bcf	3,6	;RP1=0, select bank0
  1604  0022  00AE               	movwf	lcd_init@iodata
  1605                           
  1606                           ;LCD.c: 36: iomode = lcd_ioinit(iodata);
  1607  0023  082E               	movf	lcd_init@iodata,w
  1608  0024  118A  2405  118A   	fcall	_lcd_ioinit
  1609  0027  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0028  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0029  00AB               	movwf	??_lcd_init
  1612  002A  082B               	movf	??_lcd_init,w
  1613  002B  00CC               	movwf	_iomode
  1614                           
  1615                           ;LCD.c: 37: lcdrows = rows;
  1616  002C  082A               	movf	lcd_init@rows,w
  1617  002D  00AB               	movwf	??_lcd_init
  1618  002E  082B               	movf	??_lcd_init,w
  1619  002F  00CB               	movwf	_lcdrows
  1620                           
  1621                           ;LCD.c: 38: lcdcolumns = cols;
  1622  0030  0829               	movf	lcd_init@cols,w
  1623  0031  00AB               	movwf	??_lcd_init
  1624  0032  082B               	movf	??_lcd_init,w
  1625  0033  00CA               	movwf	_lcdcolumns
  1626                           
  1627                           ;LCD.c: 41: _delay((unsigned long)((100)*(8000000/4000.0)));
  1628  0034  3002               	movlw	2
  1629  0035  00AD               	movwf	??_lcd_init+2
  1630  0036  3004               	movlw	4
  1631  0037  00AC               	movwf	??_lcd_init+1
  1632  0038  30BA               	movlw	186
  1633  0039  00AB               	movwf	??_lcd_init
  1634  003A                     u1237:	
  1635  003A  0BAB               	decfsz	??_lcd_init,f
  1636  003B  283A               	goto	u1237
  1637  003C  0BAC               	decfsz	??_lcd_init+1,f
  1638  003D  283A               	goto	u1237
  1639  003E  0BAD               	decfsz	??_lcd_init+2,f
  1640  003F  283A               	goto	u1237
  1641  0040  0000               	nop
  1642                           
  1643                           ;LCD.c: 44: if (iomode == 4) {
  1644  0041  3004               	movlw	4
  1645  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1646  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1647  0044  064C               	xorwf	_iomode,w
  1648  0045  1D03               	btfss	3,2
  1649  0046  2885               	goto	l1257
  1650                           
  1651                           ;LCD.c: 47: lcd_iowrite4(0x03);
  1652  0047  3003               	movlw	3
  1653  0048  118A  225F  118A   	fcall	_lcd_iowrite4
  1654                           
  1655                           ;LCD.c: 48: _delay((unsigned long)((5)*(8000000/4000.0)));
  1656  004B  300D               	movlw	13
  1657  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1658  004D  1303               	bcf	3,6	;RP1=0, select bank0
  1659  004E  00AC               	movwf	??_lcd_init+1
  1660  004F  30FB               	movlw	251
  1661  0050  00AB               	movwf	??_lcd_init
  1662  0051                     u1247:	
  1663  0051  0BAB               	decfsz	??_lcd_init,f
  1664  0052  2851               	goto	u1247
  1665  0053  0BAC               	decfsz	??_lcd_init+1,f
  1666  0054  2851               	goto	u1247
  1667  0055  2856               	nop2
  1668                           
  1669                           ;LCD.c: 49: lcd_iowrite4(0x03);
  1670  0056  3003               	movlw	3
  1671  0057  118A  225F  118A   	fcall	_lcd_iowrite4
  1672                           
  1673                           ;LCD.c: 50: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1674  005A  304F               	movlw	79
  1675  005B  1283               	bcf	3,5	;RP0=0, select bank0
  1676  005C  1303               	bcf	3,6	;RP1=0, select bank0
  1677  005D  00AB               	movwf	??_lcd_init
  1678  005E                     u1257:	
  1679  005E  0BAB               	decfsz	??_lcd_init,f
  1680  005F  285E               	goto	u1257
  1681  0060  2861               	nop2	;nop
  1682                           
  1683                           ;LCD.c: 51: lcd_iowrite4(0x03);
  1684  0061  3003               	movlw	3
  1685  0062  118A  225F  118A   	fcall	_lcd_iowrite4
  1686                           
  1687                           ;LCD.c: 52: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1688  0065  304F               	movlw	79
  1689  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1690  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1691  0068  00AB               	movwf	??_lcd_init
  1692  0069                     u1267:	
  1693  0069  0BAB               	decfsz	??_lcd_init,f
  1694  006A  2869               	goto	u1267
  1695  006B  286C               	nop2	;nop
  1696                           
  1697                           ;LCD.c: 53: lcd_iowrite4(0x02);
  1698  006C  3002               	movlw	2
  1699  006D  118A  225F  118A   	fcall	_lcd_iowrite4
  1700                           
  1701                           ;LCD.c: 54: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1702  0070  304F               	movlw	79
  1703  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1704  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1705  0073  00AB               	movwf	??_lcd_init
  1706  0074                     u1277:	
  1707  0074  0BAB               	decfsz	??_lcd_init,f
  1708  0075  2874               	goto	u1277
  1709  0076  2877               	nop2	;nop
  1710                           
  1711                           ;LCD.c: 55: lcd_send( E_FUNCTION_SET | 0 | (1<<3) | (1<<2), 0 );
  1712  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0079  01A6               	clrf	lcd_send@rs
  1715  007A  302C               	movlw	44
  1716  007B  118A  231B  118A   	fcall	_lcd_send
  1717                           
  1718                           ;LCD.c: 56: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1719  007E  3021               	movlw	33
  1720  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1721  0080  1303               	bcf	3,6	;RP1=0, select bank0
  1722  0081  00AB               	movwf	??_lcd_init
  1723  0082                     u1287:	
  1724  0082  0BAB               	decfsz	??_lcd_init,f
  1725  0083  2882               	goto	u1287
  1726                           
  1727                           ;LCD.c: 57: } else if (iomode == 8) {
  1728  0084  28C4               	goto	l1271
  1729  0085                     l1257:	
  1730  0085  3008               	movlw	8
  1731  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0088  064C               	xorwf	_iomode,w
  1734  0089  1D03               	btfss	3,2
  1735  008A  28C4               	goto	l1271
  1736                           
  1737                           ;LCD.c: 59: lcd_send( E_FUNCTION_SET, 0 );
  1738  008B  01A6               	clrf	lcd_send@rs
  1739  008C  3020               	movlw	32
  1740  008D  118A  231B  118A   	fcall	_lcd_send
  1741                           
  1742                           ;LCD.c: 60: _delay((unsigned long)((5)*(8000000/4000.0)));
  1743  0090  300D               	movlw	13
  1744  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0093  00AC               	movwf	??_lcd_init+1
  1747  0094  30FB               	movlw	251
  1748  0095  00AB               	movwf	??_lcd_init
  1749  0096                     u1297:	
  1750  0096  0BAB               	decfsz	??_lcd_init,f
  1751  0097  2896               	goto	u1297
  1752  0098  0BAC               	decfsz	??_lcd_init+1,f
  1753  0099  2896               	goto	u1297
  1754  009A  289B               	nop2
  1755                           
  1756                           ;LCD.c: 61: lcd_send( E_FUNCTION_SET, 0 );
  1757  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1758  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1759  009D  01A6               	clrf	lcd_send@rs
  1760  009E  3020               	movlw	32
  1761  009F  118A  231B  118A   	fcall	_lcd_send
  1762                           
  1763                           ;LCD.c: 62: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1764  00A2  304F               	movlw	79
  1765  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1766  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1767  00A5  00AB               	movwf	??_lcd_init
  1768  00A6                     u1307:	
  1769  00A6  0BAB               	decfsz	??_lcd_init,f
  1770  00A7  28A6               	goto	u1307
  1771  00A8  28A9               	nop2	;nop
  1772                           
  1773                           ;LCD.c: 63: lcd_send( E_FUNCTION_SET, 0 );
  1774  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1775  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1776  00AB  01A6               	clrf	lcd_send@rs
  1777  00AC  3020               	movlw	32
  1778  00AD  118A  231B  118A   	fcall	_lcd_send
  1779                           
  1780                           ;LCD.c: 64: _delay((unsigned long)((120)*(8000000/4000000.0)));
  1781  00B0  304F               	movlw	79
  1782  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1783  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1784  00B3  00AB               	movwf	??_lcd_init
  1785  00B4                     u1317:	
  1786  00B4  0BAB               	decfsz	??_lcd_init,f
  1787  00B5  28B4               	goto	u1317
  1788  00B6  28B7               	nop2	;nop
  1789                           
  1790                           ;LCD.c: 65: lcd_send( E_FUNCTION_SET | (1<<4) | (1<<3) | (1<<2), 0 );
  1791  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1792  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1793  00B9  01A6               	clrf	lcd_send@rs
  1794  00BA  303C               	movlw	60
  1795  00BB  118A  231B  118A   	fcall	_lcd_send
  1796                           
  1797                           ;LCD.c: 66: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1798  00BE  3021               	movlw	33
  1799  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1800  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1801  00C1  00AB               	movwf	??_lcd_init
  1802  00C2                     u1327:	
  1803  00C2  0BAB               	decfsz	??_lcd_init,f
  1804  00C3  28C2               	goto	u1327
  1805  00C4                     l1271:	
  1806                           
  1807                           ;LCD.c: 67: }
  1808                           ;LCD.c: 69: lcd_send( E_DISPLAY_ON_OFF_CTRL | 0, 0 );
  1809  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1810  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1811  00C6  01A6               	clrf	lcd_send@rs
  1812  00C7  3008               	movlw	8
  1813  00C8  118A  231B  118A   	fcall	_lcd_send
  1814                           
  1815                           ;LCD.c: 70: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1816  00CB  3021               	movlw	33
  1817  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1818  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1819  00CE  00AB               	movwf	??_lcd_init
  1820  00CF                     u1337:	
  1821  00CF  0BAB               	decfsz	??_lcd_init,f
  1822  00D0  28CF               	goto	u1337
  1823                           
  1824                           ;LCD.c: 71: lcd_send( E_CLEAR_DISPLAY, 0 );
  1825  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1826  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1827  00D3  01A6               	clrf	lcd_send@rs
  1828  00D4  3001               	movlw	1
  1829  00D5  118A  231B  118A   	fcall	_lcd_send
  1830                           
  1831                           ;LCD.c: 72: _delay((unsigned long)((2)*(8000000/4000.0)));
  1832  00D8  3006               	movlw	6
  1833  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1834  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1835  00DB  00AC               	movwf	??_lcd_init+1
  1836  00DC  3030               	movlw	48
  1837  00DD  00AB               	movwf	??_lcd_init
  1838  00DE                     u1347:	
  1839  00DE  0BAB               	decfsz	??_lcd_init,f
  1840  00DF  28DE               	goto	u1347
  1841  00E0  0BAC               	decfsz	??_lcd_init+1,f
  1842  00E1  28DE               	goto	u1347
  1843  00E2  0000               	nop
  1844                           
  1845                           ;LCD.c: 73: lcd_send( E_ENTRY_MODE_SET | 0 | (1<<1), 0 );
  1846  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1847  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1848  00E5  01A6               	clrf	lcd_send@rs
  1849  00E6  3006               	movlw	6
  1850  00E7  118A  231B  118A   	fcall	_lcd_send
  1851                           
  1852                           ;LCD.c: 74: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1853  00EA  3021               	movlw	33
  1854  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1855  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1856  00ED  00AB               	movwf	??_lcd_init
  1857  00EE                     u1357:	
  1858  00EE  0BAB               	decfsz	??_lcd_init,f
  1859  00EF  28EE               	goto	u1357
  1860  00F0  0008               	return
  1861  00F1                     __end_of_lcd_init:	
  1862                           ;LCD.c: 76: return 1;
  1863                           ;	Return value of _lcd_init is never used
  1864                           
  1865                           
  1866                           	psect	text7
  1867  0405                     __ptext7:	
  1868 ;; *************** function _lcd_ioinit *****************
  1869 ;; Defined at:
  1870 ;;		line 48 in file "LCD-PIC16.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  iodata          1    wreg     PTR void 
  1873 ;;		 -> NULL(0), 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  iodata          1    3[BANK0 ] PTR void 
  1876 ;;		 -> NULL(0), 
  1877 ;;  i               1    4[BANK0 ] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      unsigned char 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1887 ;;      Params:         0       0       0       0
  1888 ;;      Locals:         0       2       0       0
  1889 ;;      Temps:          0       1       0       0
  1890 ;;      Totals:         0       3       0       0
  1891 ;;Total ram usage:        3 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    3
  1894 ;; This function calls:
  1895 ;;		_lcd_ioset
  1896 ;; This function is called by:
  1897 ;;		_lcd_init
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           
  1902                           ;psect for function _lcd_ioinit
  1903  0405                     _lcd_ioinit:	
  1904                           
  1905                           ;LCD-PIC16.c: 50: uint8_t i = 0;
  1906                           
  1907                           ;incstack = 0
  1908                           ; Regs used in _lcd_ioinit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1909  0405  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0406  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0407  01A4               	clrf	lcd_ioinit@i
  1912                           
  1913                           ;LCD-PIC16.c: 53: TRISC2 = 0;
  1914  0408  1683               	bsf	3,5	;RP0=1, select bank1
  1915  0409  1303               	bcf	3,6	;RP1=0, select bank1
  1916  040A  1107               	bcf	7,2	;volatile
  1917                           
  1918                           ;LCD-PIC16.c: 54: TRISC3 = 0;
  1919  040B  1187               	bcf	7,3	;volatile
  1920                           
  1921                           ;LCD-PIC16.c: 60: TRISC4 = 0;
  1922  040C  1207               	bcf	7,4	;volatile
  1923                           
  1924                           ;LCD-PIC16.c: 61: TRISC5 = 0;
  1925  040D  1287               	bcf	7,5	;volatile
  1926                           
  1927                           ;LCD-PIC16.c: 62: TRISC6 = 0;
  1928  040E  1307               	bcf	7,6	;volatile
  1929                           
  1930                           ;LCD-PIC16.c: 63: TRISC7 = 0;
  1931  040F  1387               	bcf	7,7	;volatile
  1932                           
  1933                           ;LCD-PIC16.c: 75: for (i = 0; i < 11; i++)
  1934  0410  1283               	bcf	3,5	;RP0=0, select bank0
  1935  0411  1303               	bcf	3,6	;RP1=0, select bank0
  1936  0412  01A4               	clrf	lcd_ioinit@i
  1937  0413  300B               	movlw	11
  1938  0414  0224               	subwf	lcd_ioinit@i,w
  1939  0415  1803               	btfsc	3,0
  1940  0416  2C26               	goto	l1145
  1941  0417                     l1139:	
  1942                           
  1943                           ;LCD-PIC16.c: 76: lcd_ioset(i, 0);
  1944  0417  01A0               	clrf	lcd_ioset@out
  1945  0418  0824               	movf	lcd_ioinit@i,w
  1946  0419  118A  21B7  118A   	fcall	_lcd_ioset
  1947  041C  3001               	movlw	1
  1948  041D  1283               	bcf	3,5	;RP0=0, select bank0
  1949  041E  1303               	bcf	3,6	;RP1=0, select bank0
  1950  041F  00A2               	movwf	??_lcd_ioinit
  1951  0420  0822               	movf	??_lcd_ioinit,w
  1952  0421  07A4               	addwf	lcd_ioinit@i,f
  1953  0422  300B               	movlw	11
  1954  0423  0224               	subwf	lcd_ioinit@i,w
  1955  0424  1C03               	skipc
  1956  0425  2C17               	goto	l1139
  1957  0426                     l1145:	
  1958                           
  1959                           ;LCD-PIC16.c: 80: return 4;
  1960  0426  3004               	movlw	4
  1961  0427  0008               	return
  1962  0428                     __end_of_lcd_ioinit:	
  1963                           
  1964                           	psect	text8
  1965  0449                     __ptext8:	
  1966 ;; *************** function _lcd_goto *****************
  1967 ;; Defined at:
  1968 ;;		line 149 in file "LCD.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  col             1    wreg     unsigned char 
  1971 ;;  row             1    9[BANK0 ] unsigned char 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  col             1   11[BANK0 ] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1983 ;;      Params:         0       1       0       0
  1984 ;;      Locals:         0       1       0       0
  1985 ;;      Temps:          0       1       0       0
  1986 ;;      Totals:         0       3       0       0
  1987 ;;Total ram usage:        3 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    5
  1990 ;; This function calls:
  1991 ;;		_lcd_send
  1992 ;; This function is called by:
  1993 ;;		_main
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function _lcd_goto
  1999  0449                     _lcd_goto:	
  2000                           
  2001                           ;incstack = 0
  2002                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2003                           ;lcd_goto@col stored from wreg
  2004  0449  1283               	bcf	3,5	;RP0=0, select bank0
  2005  044A  1303               	bcf	3,6	;RP1=0, select bank0
  2006  044B  00AB               	movwf	lcd_goto@col
  2007                           
  2008                           ;LCD.c: 152: if (row >= lcdrows)
  2009  044C  084B               	movf	_lcdrows,w
  2010  044D  0229               	subwf	lcd_goto@row,w
  2011  044E  1C03               	skipc
  2012  044F  2C55               	goto	l1295
  2013                           
  2014                           ;LCD.c: 153: row = lcdrows - 1;
  2015  0450  084B               	movf	_lcdrows,w
  2016  0451  3EFF               	addlw	255
  2017  0452  00AA               	movwf	??_lcd_goto
  2018  0453  082A               	movf	??_lcd_goto,w
  2019  0454  00A9               	movwf	lcd_goto@row
  2020  0455                     l1295:	
  2021                           
  2022                           ;LCD.c: 154: if (col >= lcdcolumns)
  2023  0455  084A               	movf	_lcdcolumns,w
  2024  0456  022B               	subwf	lcd_goto@col,w
  2025  0457  1C03               	skipc
  2026  0458  2C5E               	goto	l1299
  2027                           
  2028                           ;LCD.c: 155: col = lcdcolumns - 1;
  2029  0459  084A               	movf	_lcdcolumns,w
  2030  045A  3EFF               	addlw	255
  2031  045B  00AA               	movwf	??_lcd_goto
  2032  045C  082A               	movf	??_lcd_goto,w
  2033  045D  00AB               	movwf	lcd_goto@col
  2034  045E                     l1299:	
  2035                           
  2036                           ;LCD.c: 157: lcd_send( E_SET_DDRAM_ADDR | (col + rowaddr[ row ]), 0 );
  2037  045E  01A6               	clrf	lcd_send@rs
  2038  045F  0829               	movf	lcd_goto@row,w
  2039  0460  3E0B               	addlw	low ((_rowaddr-__stringbase)| (0+32768))
  2040  0461  0084               	movwf	4
  2041  0462  118A  238E  118A   	fcall	stringdir
  2042  0465  072B               	addwf	lcd_goto@col,w
  2043  0466  3880               	iorlw	128
  2044  0467  118A  231B         	fcall	_lcd_send
  2045  0469  0008               	return
  2046  046A                     __end_of_lcd_goto:	
  2047                           
  2048                           	psect	text9
  2049  046A                     __ptext9:	
  2050 ;; *************** function _lcd_clear *****************
  2051 ;; Defined at:
  2052 ;;		line 79 in file "LCD.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2066 ;;      Params:         0       0       0       0
  2067 ;;      Locals:         0       0       0       0
  2068 ;;      Temps:          0       2       0       0
  2069 ;;      Totals:         0       2       0       0
  2070 ;;Total ram usage:        2 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    5
  2073 ;; This function calls:
  2074 ;;		_lcd_send
  2075 ;; This function is called by:
  2076 ;;		_main
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           
  2081                           ;psect for function _lcd_clear
  2082  046A                     _lcd_clear:	
  2083                           
  2084                           ;LCD.c: 81: lcd_send( E_CLEAR_DISPLAY, 0 );
  2085                           
  2086                           ;incstack = 0
  2087                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2088  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2089  046B  1303               	bcf	3,6	;RP1=0, select bank0
  2090  046C  01A6               	clrf	lcd_send@rs
  2091  046D  3001               	movlw	1
  2092  046E  118A  231B  118A   	fcall	_lcd_send
  2093                           
  2094                           ;LCD.c: 82: _delay((unsigned long)((2)*(8000000/4000.0)));
  2095  0471  3006               	movlw	6
  2096  0472  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0473  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0474  00AA               	movwf	??_lcd_clear+1
  2099  0475  3030               	movlw	48
  2100  0476  00A9               	movwf	??_lcd_clear
  2101  0477                     u1367:	
  2102  0477  0BA9               	decfsz	??_lcd_clear,f
  2103  0478  2C77               	goto	u1367
  2104  0479  0BAA               	decfsz	??_lcd_clear+1,f
  2105  047A  2C77               	goto	u1367
  2106  047B  0000               	nop
  2107  047C  0008               	return
  2108  047D                     __end_of_lcd_clear:	
  2109                           
  2110                           	psect	text10
  2111  031B                     __ptext10:	
  2112 ;; *************** function _lcd_send *****************
  2113 ;; Defined at:
  2114 ;;		line 160 in file "LCD.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  data            1    wreg     unsigned char 
  2117 ;;  rs              1    6[BANK0 ] unsigned char 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  data            1    8[BANK0 ] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2129 ;;      Params:         0       1       0       0
  2130 ;;      Locals:         0       1       0       0
  2131 ;;      Temps:          0       1       0       0
  2132 ;;      Totals:         0       3       0       0
  2133 ;;Total ram usage:        3 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    4
  2136 ;; This function calls:
  2137 ;;		_lcd_ioset
  2138 ;;		_lcd_iowrite4
  2139 ;;		_lcd_iowrite8
  2140 ;; This function is called by:
  2141 ;;		_lcd_init
  2142 ;;		_lcd_clear
  2143 ;;		_lcd_on
  2144 ;;		_lcd_goto
  2145 ;;		_lcd_puts
  2146 ;;		_lcd_home
  2147 ;;		_lcd_off
  2148 ;;		_lcd_cursor
  2149 ;;		_lcd_cursor_left
  2150 ;;		_lcd_cursor_right
  2151 ;;		_lcd_scroll_left
  2152 ;;		_lcd_scroll_right
  2153 ;;		_lcd_autoscroll_on
  2154 ;;		_lcd_autoscroll_off
  2155 ;;		_lcd_create_char
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _lcd_send
  2161  031B                     _lcd_send:	
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in _lcd_send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2165                           ;lcd_send@data stored from wreg
  2166  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2167  031C  1303               	bcf	3,6	;RP1=0, select bank0
  2168  031D  00A8               	movwf	lcd_send@data
  2169                           
  2170                           ;LCD.c: 163: if (rs)
  2171  031E  0826               	movf	lcd_send@rs,w
  2172  031F  1903               	btfsc	3,2
  2173  0320  2B24               	goto	l1153
  2174                           
  2175                           ;LCD.c: 164: lcd_ioset(E_RS_PIN,1);
  2176  0321  01A0               	clrf	lcd_ioset@out
  2177  0322  0AA0               	incf	lcd_ioset@out,f
  2178  0323  2B27               	goto	L2
  2179  0324                     l1153:	
  2180                           
  2181                           ;LCD.c: 165: else
  2182                           ;LCD.c: 166: lcd_ioset(E_RS_PIN,0);
  2183  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2184  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2185  0326  01A0               	clrf	lcd_ioset@out
  2186  0327                     L2:	
  2187  0327  3009               	movlw	9
  2188  0328  118A  21B7  118A   	fcall	_lcd_ioset
  2189                           
  2190                           ;LCD.c: 168: lcd_ioset(E_RW_PIN,0);
  2191  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2192  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2193  032D  01A0               	clrf	lcd_ioset@out
  2194  032E  300A               	movlw	10
  2195  032F  118A  21B7  118A   	fcall	_lcd_ioset
  2196                           
  2197                           ;LCD.c: 170: if (iomode == 4) {
  2198  0332  3004               	movlw	4
  2199  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0335  064C               	xorwf	_iomode,w
  2202  0336  1D03               	btfss	3,2
  2203  0337  2B4A               	goto	l1159
  2204                           
  2205                           ;LCD.c: 171: lcd_iowrite4(data >> 4);
  2206  0338  0828               	movf	lcd_send@data,w
  2207  0339  00A7               	movwf	??_lcd_send
  2208  033A  3004               	movlw	4
  2209  033B                     u825:	
  2210  033B  1003               	clrc
  2211  033C  0CA7               	rrf	??_lcd_send,f
  2212  033D  3EFF               	addlw	-1
  2213  033E  1D03               	skipz
  2214  033F  2B3B               	goto	u825
  2215  0340  0827               	movf	??_lcd_send,w
  2216  0341  118A  225F  118A   	fcall	_lcd_iowrite4
  2217                           
  2218                           ;LCD.c: 172: lcd_iowrite4(data);
  2219  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0346  0828               	movf	lcd_send@data,w
  2222  0347  118A  225F         	fcall	_lcd_iowrite4
  2223                           
  2224                           ;LCD.c: 173: } else {
  2225  0349  0008               	return
  2226  034A                     l1159:	
  2227                           
  2228                           ;LCD.c: 174: lcd_iowrite8(data);
  2229  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2230  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2231  034C  0828               	movf	lcd_send@data,w
  2232  034D  118A  249B         	fcall	_lcd_iowrite8
  2233  034F  0008               	return
  2234  0350                     __end_of_lcd_send:	
  2235                           
  2236                           	psect	text11
  2237  049B                     __ptext11:	
  2238 ;; *************** function _lcd_iowrite8 *****************
  2239 ;; Defined at:
  2240 ;;		line 143 in file "LCD-PIC16.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  data            1    wreg     unsigned char 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  data            1    0[COMMON] unsigned char 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2254 ;;      Params:         0       0       0       0
  2255 ;;      Locals:         0       0       0       0
  2256 ;;      Temps:          0       0       0       0
  2257 ;;      Totals:         0       0       0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    2
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_lcd_send
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           
  2269                           ;psect for function _lcd_iowrite8
  2270  049B                     _lcd_iowrite8:	
  2271                           
  2272                           ;incstack = 0
  2273                           ; Regs used in _lcd_iowrite8: [wreg]
  2274  049B  0008               	return
  2275  049C                     __end_of_lcd_iowrite8:	
  2276                           
  2277                           	psect	text12
  2278  025F                     __ptext12:	
  2279 ;; *************** function _lcd_iowrite4 *****************
  2280 ;; Defined at:
  2281 ;;		line 129 in file "LCD-PIC16.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  data            1    wreg     unsigned char 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  data            1    4[BANK0 ] unsigned char 
  2286 ;;  i               1    5[BANK0 ] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2296 ;;      Params:         0       0       0       0
  2297 ;;      Locals:         0       2       0       0
  2298 ;;      Temps:          0       2       0       0
  2299 ;;      Totals:         0       4       0       0
  2300 ;;Total ram usage:        4 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    3
  2303 ;; This function calls:
  2304 ;;		_lcd_ioset
  2305 ;; This function is called by:
  2306 ;;		_lcd_init
  2307 ;;		_lcd_send
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _lcd_iowrite4
  2313  025F                     _lcd_iowrite4:	
  2314                           
  2315                           ;incstack = 0
  2316                           ; Regs used in _lcd_iowrite4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2317                           ;lcd_iowrite4@data stored from wreg
  2318  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0261  00A4               	movwf	lcd_iowrite4@data
  2321                           
  2322                           ;LCD-PIC16.c: 132: uint8_t i;
  2323                           ;LCD-PIC16.c: 134: for (i = 4; i < 8; i++)
  2324  0262  3004               	movlw	4
  2325  0263  00A2               	movwf	??_lcd_iowrite4
  2326  0264  0822               	movf	??_lcd_iowrite4,w
  2327  0265  00A5               	movwf	lcd_iowrite4@i
  2328  0266  3008               	movlw	8
  2329  0267  0225               	subwf	lcd_iowrite4@i,w
  2330  0268  1803               	btfsc	3,0
  2331  0269  2A8D               	goto	l1115
  2332  026A                     l1109:	
  2333                           
  2334                           ;LCD-PIC16.c: 135: lcd_ioset(i, (data & (1 << i - 4)) ? 1 : 0);
  2335  026A  3001               	movlw	1
  2336  026B  00A2               	movwf	??_lcd_iowrite4
  2337  026C  0825               	movf	lcd_iowrite4@i,w
  2338  026D  3EFC               	addlw	-4
  2339  026E  3E01               	addlw	1
  2340  026F  2A72               	goto	u744
  2341  0270                     u745:	
  2342  0270  1003               	clrc
  2343  0271  0DA2               	rlf	??_lcd_iowrite4,f
  2344  0272                     u744:	
  2345  0272  3EFF               	addlw	-1
  2346  0273  1D03               	skipz
  2347  0274  2A70               	goto	u745
  2348  0275  0822               	movf	??_lcd_iowrite4,w
  2349  0276  0524               	andwf	lcd_iowrite4@data,w
  2350  0277  1903               	btfsc	3,2
  2351  0278  2A7B               	goto	u750
  2352  0279  3001               	movlw	1
  2353  027A  2A7C               	goto	u760
  2354  027B                     u750:	
  2355  027B  3000               	movlw	0
  2356  027C                     u760:	
  2357  027C  00A3               	movwf	??_lcd_iowrite4+1
  2358  027D  0823               	movf	??_lcd_iowrite4+1,w
  2359  027E  00A0               	movwf	lcd_ioset@out
  2360  027F  0825               	movf	lcd_iowrite4@i,w
  2361  0280  118A  21B7  118A   	fcall	_lcd_ioset
  2362  0283  3001               	movlw	1
  2363  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2364  0285  1303               	bcf	3,6	;RP1=0, select bank0
  2365  0286  00A2               	movwf	??_lcd_iowrite4
  2366  0287  0822               	movf	??_lcd_iowrite4,w
  2367  0288  07A5               	addwf	lcd_iowrite4@i,f
  2368  0289  3008               	movlw	8
  2369  028A  0225               	subwf	lcd_iowrite4@i,w
  2370  028B  1C03               	skipc
  2371  028C  2A6A               	goto	l1109
  2372  028D                     l1115:	
  2373                           
  2374                           ;LCD-PIC16.c: 137: lcd_ioset(E_EN_PIN,1);
  2375  028D  01A0               	clrf	lcd_ioset@out
  2376  028E  0AA0               	incf	lcd_ioset@out,f
  2377  028F  3008               	movlw	8
  2378  0290  118A  21B7  118A   	fcall	_lcd_ioset
  2379                           
  2380                           ;LCD-PIC16.c: 138: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2381  0293  3006               	movlw	6
  2382  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0295  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0296  00A2               	movwf	??_lcd_iowrite4
  2385  0297                     u1377:	
  2386  0297  0BA2               	decfsz	??_lcd_iowrite4,f
  2387  0298  2A97               	goto	u1377
  2388  0299  0000               	nop
  2389                           
  2390                           ;LCD-PIC16.c: 139: lcd_ioset(E_EN_PIN,0);
  2391  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2392  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2393  029C  01A0               	clrf	lcd_ioset@out
  2394  029D  3008               	movlw	8
  2395  029E  118A  21B7         	fcall	_lcd_ioset
  2396  02A0  0008               	return
  2397  02A1                     __end_of_lcd_iowrite4:	
  2398                           
  2399                           	psect	text13
  2400  01B7                     __ptext13:	
  2401 ;; *************** function _lcd_ioset *****************
  2402 ;; Defined at:
  2403 ;;		line 86 in file "LCD-PIC16.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  pin             1    wreg     enum E42
  2406 ;;  out             1    0[BANK0 ] unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  pin             1    1[BANK0 ] enum E42
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2418 ;;      Params:         0       1       0       0
  2419 ;;      Locals:         0       1       0       0
  2420 ;;      Temps:          0       0       0       0
  2421 ;;      Totals:         0       2       0       0
  2422 ;;Total ram usage:        2 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    2
  2425 ;; This function calls:
  2426 ;;		Nothing
  2427 ;; This function is called by:
  2428 ;;		_lcd_ioinit
  2429 ;;		_lcd_iowrite4
  2430 ;;		_lcd_send
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           
  2435                           ;psect for function _lcd_ioset
  2436  01B7                     _lcd_ioset:	
  2437                           
  2438                           ;incstack = 0
  2439                           ; Regs used in _lcd_ioset: [wreg-fsr0h+status,2+status,0]
  2440                           ;lcd_ioset@pin stored from wreg
  2441  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  2442  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  2443  01B9  00A1               	movwf	lcd_ioset@pin
  2444                           
  2445                           ;LCD-PIC16.c: 88: switch (pin) {
  2446  01BA  29F7               	goto	l1103
  2447  01BB                     l119:	
  2448                           ;LCD-PIC16.c: 103: case E_D4_PIN:
  2449                           
  2450                           
  2451                           ;LCD-PIC16.c: 104: RC4 = out;
  2452  01BB  1C20               	btfss	lcd_ioset@out,0
  2453  01BC  29C1               	goto	u610
  2454  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2455  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2456  01BF  1607               	bsf	7,4	;volatile
  2457  01C0  0008               	return
  2458  01C1                     u610:	
  2459  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2460  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2461  01C3  1207               	bcf	7,4	;volatile
  2462                           
  2463                           ;LCD-PIC16.c: 105: break;
  2464  01C4  0008               	return
  2465  01C5                     l121:	
  2466                           ;LCD-PIC16.c: 106: case E_D5_PIN:
  2467                           
  2468                           
  2469                           ;LCD-PIC16.c: 107: RC5 = out;
  2470  01C5  1C20               	btfss	lcd_ioset@out,0
  2471  01C6  29CB               	goto	u630
  2472  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2473  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2474  01C9  1687               	bsf	7,5	;volatile
  2475  01CA  0008               	return
  2476  01CB                     u630:	
  2477  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  2478  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  2479  01CD  1287               	bcf	7,5	;volatile
  2480                           
  2481                           ;LCD-PIC16.c: 108: break;
  2482  01CE  0008               	return
  2483  01CF                     l122:	
  2484                           ;LCD-PIC16.c: 109: case E_D6_PIN:
  2485                           
  2486                           
  2487                           ;LCD-PIC16.c: 110: RC6 = out;
  2488  01CF  1C20               	btfss	lcd_ioset@out,0
  2489  01D0  29D5               	goto	u650
  2490  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  2491  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  2492  01D3  1707               	bsf	7,6	;volatile
  2493  01D4  0008               	return
  2494  01D5                     u650:	
  2495  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2496  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2497  01D7  1307               	bcf	7,6	;volatile
  2498                           
  2499                           ;LCD-PIC16.c: 111: break;
  2500  01D8  0008               	return
  2501  01D9                     l123:	
  2502                           ;LCD-PIC16.c: 112: case E_D7_PIN:
  2503                           
  2504                           
  2505                           ;LCD-PIC16.c: 113: RC7 = out;
  2506  01D9  1C20               	btfss	lcd_ioset@out,0
  2507  01DA  29DF               	goto	u670
  2508  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2509  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2510  01DD  1787               	bsf	7,7	;volatile
  2511  01DE  0008               	return
  2512  01DF                     u670:	
  2513  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2514  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2515  01E1  1387               	bcf	7,7	;volatile
  2516                           
  2517                           ;LCD-PIC16.c: 114: break;
  2518  01E2  0008               	return
  2519  01E3                     l124:	
  2520                           ;LCD-PIC16.c: 115: case E_RS_PIN:
  2521                           
  2522                           
  2523                           ;LCD-PIC16.c: 116: RC3 = out;
  2524  01E3  1C20               	btfss	lcd_ioset@out,0
  2525  01E4  29E9               	goto	u690
  2526  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  2527  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  2528  01E7  1587               	bsf	7,3	;volatile
  2529  01E8  0008               	return
  2530  01E9                     u690:	
  2531  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2532  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2533  01EB  1187               	bcf	7,3	;volatile
  2534                           
  2535                           ;LCD-PIC16.c: 117: break;
  2536  01EC  0008               	return
  2537  01ED                     l125:	
  2538                           ;LCD-PIC16.c: 118: case E_EN_PIN:
  2539                           
  2540                           
  2541                           ;LCD-PIC16.c: 119: RC2 = out;
  2542  01ED  1C20               	btfss	lcd_ioset@out,0
  2543  01EE  29F3               	goto	u710
  2544  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2545  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2546  01F1  1507               	bsf	7,2	;volatile
  2547  01F2  0008               	return
  2548  01F3                     u710:	
  2549  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  2550  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  2551  01F5  1107               	bcf	7,2	;volatile
  2552                           
  2553                           ;LCD-PIC16.c: 126: }
  2554                           
  2555                           ;LCD-PIC16.c: 125: break;
  2556                           
  2557                           ;LCD-PIC16.c: 121: case E_RW_PIN:
  2558                           
  2559                           ;LCD-PIC16.c: 120: break;
  2560  01F6  0008               	return
  2561  01F7                     l1103:	
  2562  01F7  0821               	movf	lcd_ioset@pin,w
  2563                           
  2564                           ; Switch size 1, requested type "space"
  2565                           ; Number of cases is 7, Range of values is 4 to 10
  2566                           ; switch strategies available:
  2567                           ; Name         Instructions Cycles
  2568                           ; simple_byte           22    12 (average)
  2569                           ; direct_byte           24    10 (fixed)
  2570                           ; jumptable            263     9 (fixed)
  2571                           ;	Chosen strategy is simple_byte
  2572  01F8  3A04               	xorlw	4	; case 4
  2573  01F9  1903               	skipnz
  2574  01FA  29BB               	goto	l119
  2575  01FB  3A01               	xorlw	1	; case 5
  2576  01FC  1903               	skipnz
  2577  01FD  29C5               	goto	l121
  2578  01FE  3A03               	xorlw	3	; case 6
  2579  01FF  1903               	skipnz
  2580  0200  29CF               	goto	l122
  2581  0201  3A01               	xorlw	1	; case 7
  2582  0202  1903               	skipnz
  2583  0203  29D9               	goto	l123
  2584  0204  3A0F               	xorlw	15	; case 8
  2585  0205  1903               	skipnz
  2586  0206  29ED               	goto	l125
  2587  0207  3A01               	xorlw	1	; case 9
  2588  0208  1903               	skipnz
  2589  0209  29E3               	goto	l124
  2590  020A  3A03               	xorlw	3	; case 10
  2591  020B  1903               	skipnz
  2592  020C  2A0E               	goto	l127
  2593  020D  2A0E               	goto	l127
  2594  020E                     l127:	
  2595  020E  0008               	return
  2596  020F                     __end_of_lcd_ioset:	
  2597                           
  2598                           	psect	text14
  2599  048D                     __ptext14:	
  2600 ;; *************** function _Trigger *****************
  2601 ;; Defined at:
  2602 ;;		line 36 in file "Funciones.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2616 ;;      Params:         0       0       0       0
  2617 ;;      Locals:         0       0       0       0
  2618 ;;      Temps:          0       1       0       0
  2619 ;;      Totals:         0       1       0       0
  2620 ;;Total ram usage:        1 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    2
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           
  2631                           ;psect for function _Trigger
  2632  048D                     _Trigger:	
  2633                           
  2634                           ;Funciones.c: 37: RB0 = 1;
  2635                           
  2636                           ;incstack = 0
  2637                           ; Regs used in _Trigger: [wreg]
  2638  048D  1283               	bcf	3,5	;RP0=0, select bank0
  2639  048E  1303               	bcf	3,6	;RP1=0, select bank0
  2640  048F  1406               	bsf	6,0	;volatile
  2641                           
  2642                           ;Funciones.c: 38: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2643  0490  3006               	movlw	6
  2644  0491  00A0               	movwf	??_Trigger
  2645  0492                     u1387:	
  2646  0492  0BA0               	decfsz	??_Trigger,f
  2647  0493  2C92               	goto	u1387
  2648  0494  0000               	nop
  2649                           
  2650                           ;Funciones.c: 39: RB0 = 0;
  2651  0495  1283               	bcf	3,5	;RP0=0, select bank0
  2652  0496  1303               	bcf	3,6	;RP1=0, select bank0
  2653  0497  1006               	bcf	6,0	;volatile
  2654  0498  0008               	return
  2655  0499                     __end_of_Trigger:	
  2656                           
  2657                           	psect	text15
  2658  03B1                     __ptext15:	
  2659 ;; *************** function _Inicializaciones *****************
  2660 ;; Defined at:
  2661 ;;		line 4 in file "Funciones.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2675 ;;      Params:         0       0       0       0
  2676 ;;      Locals:         0       0       0       0
  2677 ;;      Temps:          0       0       0       0
  2678 ;;      Totals:         0       0       0       0
  2679 ;;Total ram usage:        0 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    2
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_main
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           
  2690                           ;psect for function _Inicializaciones
  2691  03B1                     _Inicializaciones:	
  2692                           
  2693                           ;Funciones.c: 5: OSCCON = 0b01110101;
  2694                           
  2695                           ;incstack = 0
  2696                           ; Regs used in _Inicializaciones: [wreg+status,2]
  2697  03B1  3075               	movlw	117
  2698  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  2699  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  2700  03B4  008F               	movwf	15	;volatile
  2701                           
  2702                           ;Funciones.c: 8: TRISA = 0b11110000;
  2703  03B5  30F0               	movlw	240
  2704  03B6  0085               	movwf	5	;volatile
  2705                           
  2706                           ;Funciones.c: 9: PORTA = 0b00000000;
  2707  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2708  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2709  03B9  0185               	clrf	5	;volatile
  2710                           
  2711                           ;Funciones.c: 10: ANSEL = 0b00000000;
  2712  03BA  1683               	bsf	3,5	;RP0=1, select bank3
  2713  03BB  1703               	bsf	3,6	;RP1=1, select bank3
  2714  03BC  0188               	clrf	8	;volatile
  2715                           
  2716                           ;Funciones.c: 13: TRISB = 0b11110000;
  2717  03BD  30F0               	movlw	240
  2718  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  2719  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  2720  03C0  0086               	movwf	6	;volatile
  2721                           
  2722                           ;Funciones.c: 14: PORTB = 0b00000000;
  2723  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  2724  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  2725  03C3  0186               	clrf	6	;volatile
  2726                           
  2727                           ;Funciones.c: 15: ANSELH = 0b00000000;
  2728  03C4  1683               	bsf	3,5	;RP0=1, select bank3
  2729  03C5  1703               	bsf	3,6	;RP1=1, select bank3
  2730  03C6  0189               	clrf	9	;volatile
  2731                           
  2732                           ;Funciones.c: 18: TRISC = 0b00000011;
  2733  03C7  3003               	movlw	3
  2734  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  2735  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  2736  03CA  0087               	movwf	7	;volatile
  2737                           
  2738                           ;Funciones.c: 19: PORTC = 0b00000000;
  2739  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2740  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2741  03CD  0187               	clrf	7	;volatile
  2742                           
  2743                           ;Funciones.c: 25: T1CON = 0b00010000;
  2744  03CE  3010               	movlw	16
  2745  03CF  0090               	movwf	16	;volatile
  2746                           
  2747                           ;Funciones.c: 28: INTCON = 0b00001000;
  2748  03D0  3008               	movlw	8
  2749  03D1  008B               	movwf	11	;volatile
  2750                           
  2751                           ;Funciones.c: 29: IOCB = 0b11110000;
  2752  03D2  30F0               	movlw	240
  2753  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2754  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2755  03D5  0096               	movwf	22	;volatile
  2756                           
  2757                           ;Funciones.c: 30: PIE1 = 0b00000001;
  2758  03D6  3001               	movlw	1
  2759  03D7  008C               	movwf	12	;volatile
  2760                           
  2761                           ;Funciones.c: 31: PIR1 = 0b00000000;
  2762  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2763  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2764  03DA  018C               	clrf	12	;volatile
  2765                           
  2766                           ;Funciones.c: 32: GIE = 1;
  2767  03DB  178B               	bsf	11,7	;volatile
  2768  03DC  0008               	return
  2769  03DD                     __end_of_Inicializaciones:	
  2770                           
  2771                           	psect	text16
  2772  03DD                     __ptext16:	
  2773 ;; *************** function _echo *****************
  2774 ;; Defined at:
  2775 ;;		line 63 in file "main.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;		None
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;		None
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0, pclath, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2789 ;;      Params:         0       0       0       0
  2790 ;;      Locals:         0       0       0       0
  2791 ;;      Temps:          4       0       0       0
  2792 ;;      Totals:         4       0       0       0
  2793 ;;Total ram usage:        4 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; Hardware stack levels required when called:    1
  2796 ;; This function calls:
  2797 ;;		i1___lwdiv
  2798 ;; This function is called by:
  2799 ;;		Interrupt level 1
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           
  2804                           ;psect for function _echo
  2805  03DD                     _echo:	
  2806                           
  2807                           ;main.c: 65: if(RBIF == 1)
  2808  03DD  1C0B               	btfss	11,0	;volatile
  2809  03DE  2BFA               	goto	i1l42
  2810                           
  2811                           ;main.c: 66: {
  2812                           ;main.c: 67: RBIE = 0;
  2813  03DF  118B               	bcf	11,3	;volatile
  2814                           
  2815                           ;main.c: 68: if(RB4 == 1)
  2816  03E0  1E06               	btfss	6,4	;volatile
  2817  03E1  2BE6               	goto	i1l40
  2818                           
  2819                           ;main.c: 69: {
  2820                           ;main.c: 70: TMR1 = 0;
  2821  03E2  018E               	clrf	14	;volatile
  2822  03E3  018F               	clrf	15	;volatile
  2823                           
  2824                           ;main.c: 71: TMR1ON = 1;
  2825  03E4  1410               	bsf	16,0	;volatile
  2826                           
  2827                           ;main.c: 72: }
  2828  03E5  2BF8               	goto	i1l1431
  2829  03E6                     i1l40:	
  2830                           
  2831                           ;main.c: 73: else
  2832                           ;main.c: 74: {
  2833                           ;main.c: 75: TMR1ON = 0;
  2834  03E6  1010               	bcf	16,0	;volatile
  2835                           
  2836                           ;main.c: 79: dist = TMR1/58;
  2837  03E7  303A               	movlw	58
  2838  03E8  00F0               	movwf	i1___lwdiv@divisor
  2839  03E9  3000               	movlw	0
  2840  03EA  00F1               	movwf	i1___lwdiv@divisor+1
  2841  03EB  080F               	movf	15,w	;volatile
  2842  03EC  00F3               	movwf	i1___lwdiv@dividend+1
  2843  03ED  080E               	movf	14,w	;volatile
  2844  03EE  00F2               	movwf	i1___lwdiv@dividend
  2845  03EF  118A  22DF  118A   	fcall	i1___lwdiv
  2846  03F2  0871               	movf	?i1___lwdiv+1,w
  2847  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2848  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2849  03F5  00C8               	movwf	_dist+1
  2850  03F6  0870               	movf	?i1___lwdiv,w
  2851  03F7  00C7               	movwf	_dist
  2852  03F8                     i1l1431:	
  2853                           
  2854                           ;main.c: 80: }
  2855                           ;main.c: 81: RBIF = 0;
  2856  03F8  100B               	bcf	11,0	;volatile
  2857                           
  2858                           ;main.c: 82: RBIE = 1;
  2859  03F9  158B               	bsf	11,3	;volatile
  2860  03FA                     i1l42:	
  2861  03FA  087B               	movf	??_echo+3,w
  2862  03FB  00FF               	movwf	127
  2863  03FC  087A               	movf	??_echo+2,w
  2864  03FD  008A               	movwf	10
  2865  03FE  0879               	movf	??_echo+1,w
  2866  03FF  0084               	movwf	4
  2867  0400  0E78               	swapf	??_echo^(0+-128),w
  2868  0401  0083               	movwf	3
  2869  0402  0EFE               	swapf	126,f
  2870  0403  0E7E               	swapf	126,w
  2871  0404  0009               	retfie
  2872  0405                     __end_of_echo:	
  2873                           
  2874                           	psect	intentry
  2875  0004                     __pintentry:	
  2876                           ;incstack = 0
  2877                           ; Regs used in _echo: [wreg+status,2+status,0+pclath+cstack]
  2878                           
  2879  0004                     interrupt_function:	
  2880  007E                     saved_w	set	btemp
  2881  0004  00FE               	movwf	btemp
  2882  0005  0E03               	swapf	3,w
  2883  0006  00F8               	movwf	??_echo
  2884  0007  0804               	movf	4,w
  2885  0008  00F9               	movwf	??_echo+1
  2886  0009  080A               	movf	10,w
  2887  000A  00FA               	movwf	??_echo+2
  2888  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2889  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2890  000D  087F               	movf	btemp+1,w
  2891  000E  00FB               	movwf	??_echo+3
  2892  000F  118A  2BDD         	ljmp	_echo
  2893                           
  2894                           	psect	text17
  2895  02DF                     __ptext17:	
  2896 ;; *************** function i1___lwdiv *****************
  2897 ;; Defined at:
  2898 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  divisor         2    0[COMMON] unsigned int 
  2901 ;;  dividend        2    2[COMMON] unsigned int 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  __lwdiv         2    5[COMMON] unsigned int 
  2904 ;;  __lwdiv         1    7[COMMON] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  2    0[COMMON] unsigned int 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2914 ;;      Params:         4       0       0       0
  2915 ;;      Locals:         3       0       0       0
  2916 ;;      Temps:          1       0       0       0
  2917 ;;      Totals:         8       0       0       0
  2918 ;;Total ram usage:        8 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_echo
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function i1___lwdiv
  2929  02DF                     i1___lwdiv:	
  2930                           
  2931                           ;incstack = 0
  2932                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  2933  02DF  01F5               	clrf	i1___lwdiv@quotient
  2934  02E0  01F6               	clrf	i1___lwdiv@quotient+1
  2935  02E1  0870               	movf	i1___lwdiv@divisor,w
  2936  02E2  0471               	iorwf	i1___lwdiv@divisor+1,w
  2937  02E3  1903               	btfsc	3,2
  2938  02E4  2B16               	goto	i1l1395
  2939  02E5  01F7               	clrf	i1___lwdiv@counter
  2940  02E6  0AF7               	incf	i1___lwdiv@counter,f
  2941  02E7                     i1l1383:	
  2942  02E7  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  2943  02E8  2AF5               	goto	i1l1385
  2944  02E9  3001               	movlw	1
  2945  02EA                     u110_25:	
  2946  02EA  1003               	clrc
  2947  02EB  0DF0               	rlf	i1___lwdiv@divisor,f
  2948  02EC  0DF1               	rlf	i1___lwdiv@divisor+1,f
  2949  02ED  3EFF               	addlw	-1
  2950  02EE  1D03               	skipz
  2951  02EF  2AEA               	goto	u110_25
  2952  02F0  3001               	movlw	1
  2953  02F1  00F4               	movwf	??i1___lwdiv
  2954  02F2  0874               	movf	??i1___lwdiv,w
  2955  02F3  07F7               	addwf	i1___lwdiv@counter,f
  2956  02F4  2AE7               	goto	i1l1383
  2957  02F5                     i1l1385:	
  2958  02F5  3001               	movlw	1
  2959  02F6                     u112_25:	
  2960  02F6  1003               	clrc
  2961  02F7  0DF5               	rlf	i1___lwdiv@quotient,f
  2962  02F8  0DF6               	rlf	i1___lwdiv@quotient+1,f
  2963  02F9  3EFF               	addlw	-1
  2964  02FA  1D03               	skipz
  2965  02FB  2AF6               	goto	u112_25
  2966  02FC  0871               	movf	i1___lwdiv@divisor+1,w
  2967  02FD  0273               	subwf	i1___lwdiv@dividend+1,w
  2968  02FE  1D03               	skipz
  2969  02FF  2B02               	goto	u113_25
  2970  0300  0870               	movf	i1___lwdiv@divisor,w
  2971  0301  0272               	subwf	i1___lwdiv@dividend,w
  2972  0302                     u113_25:	
  2973  0302  1C03               	skipc
  2974  0303  2B0B               	goto	i1l1391
  2975  0304  0870               	movf	i1___lwdiv@divisor,w
  2976  0305  02F2               	subwf	i1___lwdiv@dividend,f
  2977  0306  0871               	movf	i1___lwdiv@divisor+1,w
  2978  0307  1C03               	skipc
  2979  0308  03F3               	decf	i1___lwdiv@dividend+1,f
  2980  0309  02F3               	subwf	i1___lwdiv@dividend+1,f
  2981  030A  1475               	bsf	i1___lwdiv@quotient,0
  2982  030B                     i1l1391:	
  2983  030B  3001               	movlw	1
  2984  030C                     u114_25:	
  2985  030C  1003               	clrc
  2986  030D  0CF1               	rrf	i1___lwdiv@divisor+1,f
  2987  030E  0CF0               	rrf	i1___lwdiv@divisor,f
  2988  030F  3EFF               	addlw	-1
  2989  0310  1D03               	skipz
  2990  0311  2B0C               	goto	u114_25
  2991  0312  3001               	movlw	1
  2992  0313  02F7               	subwf	i1___lwdiv@counter,f
  2993  0314  1D03               	btfss	3,2
  2994  0315  2AF5               	goto	i1l1385
  2995  0316                     i1l1395:	
  2996  0316  0876               	movf	i1___lwdiv@quotient+1,w
  2997  0317  00F1               	movwf	?i1___lwdiv+1
  2998  0318  0875               	movf	i1___lwdiv@quotient,w
  2999  0319  00F0               	movwf	?i1___lwdiv
  3000  031A  0008               	return
  3001  031B                     __end_ofi1___lwdiv:	
  3002  007E                     btemp	set	126	;btemp
  3003  007E                     wtemp	set	126
  3004  007E                     wtemp0	set	126
  3005  0080                     wtemp1	set	128
  3006  0082                     wtemp2	set	130
  3007  0084                     wtemp3	set	132
  3008  0086                     wtemp4	set	134
  3009  0088                     wtemp5	set	136
  3010  007F                     wtemp6	set	127
  3011  007E                     ttemp	set	126
  3012  007E                     ttemp0	set	126
  3013  0081                     ttemp1	set	129
  3014  0084                     ttemp2	set	132
  3015  0087                     ttemp3	set	135
  3016  007F                     ttemp4	set	127
  3017  007E                     ltemp	set	126
  3018  007E                     ltemp0	set	126
  3019  0082                     ltemp1	set	130
  3020  0086                     ltemp2	set	134
  3021  0080                     ltemp3	set	128


Data Sizes:
    Strings     15
    Constant    14
    Data        2
    BSS         3
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     39      45
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    lcd_ioinit@iodata	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> main@distancia(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_puts@string	PTR const unsigned char  size(2) Largest target is 12
		 -> main@distancia(BANK0[10]), STR_1(CODE[12]), 

    lcd_init@iodata	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _echo in COMMON

    _echo->i1___lwdiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_puts->_lcd_send
    _lcd_on->_lcd_send
    _lcd_init->_lcd_send
    _lcd_ioinit->_lcd_ioset
    _lcd_goto->_lcd_send
    _lcd_clear->_lcd_send
    _lcd_send->_lcd_iowrite4
    _lcd_iowrite4->_lcd_ioset

Critical Paths under _echo in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _echo in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _echo in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   15347
                                             27 BANK0     12    12      0
                   _Inicializaciones
                            _Trigger
                          _lcd_clear
                           _lcd_goto
                           _lcd_init
                             _lcd_on
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1144
                                             14 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     322
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2    2620
                                              9 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (1) _lcd_on                                               1     1      0    2469
                                              9 BANK0      1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             6     4      2    3926
                                              9 BANK0      6     4      2
                         _lcd_ioinit
                       _lcd_iowrite4
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_ioinit                                           3     3      0     621
                                              2 BANK0      3     3      0
                          _lcd_ioset
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             3     2      1    2665
                                              9 BANK0      3     2      1
                           _lcd_send
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0    2469
                                              9 BANK0      2     2      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             3     2      1    2469
                                              6 BANK0      3     2      1
                          _lcd_ioset
                       _lcd_iowrite4
                       _lcd_iowrite8
 ---------------------------------------------------------------------------------
 (3) _lcd_iowrite8                                         1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_iowrite4                                         4     4      0     637
                                              2 BANK0      4     4      0
                          _lcd_ioset
 ---------------------------------------------------------------------------------
 (4) _lcd_ioset                                            2     1      1     525
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _Trigger                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Inicializaciones                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _echo                                                 4     4      0     214
                                              8 COMMON     4     4      0
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (6) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Inicializaciones
   _Trigger
   _lcd_clear
     _lcd_send
       _lcd_ioset
       _lcd_iowrite4
         _lcd_ioset
       _lcd_iowrite8
   _lcd_goto
     _lcd_send
       _lcd_ioset
       _lcd_iowrite4
         _lcd_ioset
       _lcd_iowrite8
   _lcd_init
     _lcd_ioinit
       _lcd_ioset
     _lcd_iowrite4
       _lcd_ioset
     _lcd_send
       _lcd_ioset
       _lcd_iowrite4
         _lcd_ioset
       _lcd_iowrite8
   _lcd_on
     _lcd_send
       _lcd_ioset
       _lcd_iowrite4
         _lcd_ioset
       _lcd_iowrite8
   _lcd_puts
     _lcd_send
       _lcd_ioset
       _lcd_iowrite4
         _lcd_ioset
       _lcd_iowrite8
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _echo (ROOT)
   i1___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     27      2D       3       56.3%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      39      10        0.0%
ABS                  0      0      39       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Mar 02 12:44:20 2016

__size_of_Inicializaciones 002C              ?_lcd_iowrite4 0070              ?_lcd_iowrite8 0070  
                        pc 0002                __CFG_CP$OFF 0000                         fsr 0004  
                      l121 01C5                        l122 01CF                        l123 01D9  
                      l124 01E3                        l125 01ED                        l127 020E  
                      l119 01BB                        _GIE 005F                        _RB0 0030  
                      _RC2 003A                        _RB4 0034                        _RC3 003B  
                      _RC4 003C                        _RC5 003D                        _RC6 003E  
                      _RC7 003F                        u610 01C1               __CFG_CPD$OFF 0000  
                      u710 01F3                        u630 01CB                        u650 01D5  
                      u670 01DF                        u750 027B                        u760 027C  
                      u744 0272                        u745 0270                        u825 033B  
                      u690 01E9                        u915 035B                        u845 02AE  
                      u935 036C                        u865 02BA                        u945 0375  
                      u875 02C6                        u885 02D0           lcd_ioinit@iodata 0023  
                      fsr0 0004                        indf 0000                lcd_goto@col 002B  
              lcd_goto@row 0029               __CFG_IESO$ON 0000                lcd_ioinit@i 0024  
             __CFG_LVP$OFF 0000                       l1103 01F7                       l1201 0374  
                     l1115 028D                       l1109 026A                       l1205 037F  
                     l1153 0324                       l1145 0426                       l1139 0417  
                     l1307 0428                       l1171 02AB                       l1323 0116  
                     l1173 02B9                       l1159 034A                       l1271 00C4  
                     l1183 02DA                       l1351 0164                       l1257 0085  
                     l1345 0147                       l1329 012A                       l1179 02CF  
                     l1195 0358                       l1339 0141                       l1197 0366  
                     l1365 0177                       l1357 0173                       l1295 0455  
                     l1367 00F8                       l1369 01B2                       l1299 045E  
                     STR_1 03A2                       STR_2 03AE                       u1045 015A  
                     u1217 023F                       u1307 00A6                       u1227 048A  
                     _IOCB 0096                       u1317 00B4                       u1237 003A  
                     u1327 00C2                       u1247 0051                       u1337 00CF  
                     u1257 005E                       u1347 00DE                       u1267 0069  
                     u1357 00EE                       u1277 0074                       u1367 0477  
                     u1287 0082                       u1377 0297                       u1297 0096  
                     u1387 0492                       _PIE1 008C                       _RBIE 005B  
                     i1l40 03E6                       _RBIF 0058                       i1l42 03FA  
                     _PIR1 000C                       _TMR1 000E               __CFG_WRT$OFF 0000  
            __CFG_FCMEN$ON 0000                       _echo 03DD                       _dist 0047  
                     _main 020F                       btemp 007E               lcd_init@cols 0029  
            __CFG_BOREN$ON 0000               lcd_init@rows 002A                       ltemp 007E  
                     start 0011                       ttemp 007E                       wtemp 007E  
            __CFG_MCLRE$ON 0000             ??_lcd_iowrite4 0022             ??_lcd_iowrite8 0020  
             lcd_ioset@pin 0021               lcd_ioset@out 0020               lcd_send@data 0028  
                    ?_echo 0070            __end_of_Trigger 0499                      ?_main 0070  
            __CFG_WDTE$OFF 0000                      _ANSEL 0188                      _T1CON 0010  
          __end_of___lwdiv 02DF            __end_of___lwmod 0384                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087            __end_of_dpowers 039E  
                    pclath 000A                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080            __end_of_rowaddr 03A2  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F            __end_of_sprintf 01B7         __size_ofi1___lwdiv 003C  
          __initialization 0013               __end_of_echo 0405               __end_of_main 025F  
                   ??_echo 0078                     ??_main 003B              lcd_iowrite4@i 0025  
            main@distancia 003D                     _ANSELH 0189                     u110_25 02EA  
                   i1l1431 03F8                     u112_25 02F6                     i1l1391 030B  
                   i1l1383 02E7                     i1l1385 02F5                     i1l1395 0316  
                   u113_25 0302                     u114_25 030C                     _INTCON 000B  
                   _OSCCON 008F                     _TMR1ON 0080                     _TRISC2 043A  
                   _TRISC3 043B                     _TRISC4 043C                     _TRISC5 043D  
                   _TRISC6 043E                     _TRISC7 043F             __CFG_PWRTE$OFF 0000  
         __end_of_lcd_init 00F1           __end_of_lcd_goto 046A           __end_of_lcd_send 0350  
         _Inicializaciones 03B1           __end_of_lcd_puts 0449                  ??_Trigger 0020  
                ??___lwdiv 0024                  ??___lwmod 002C                     _lcd_on 047D  
                   _iomode 004C             lcd_init@iodata 002E          __end_ofi1___lwdiv 031B  
                   saved_w 007E       __end_of_lcd_iowrite4 02A1       __end_of_lcd_iowrite8 049C  
                ??_sprintf 0031    __end_of__initialization 001D             __pcstackCOMMON 0070  
             __pidataBANK0 0499           lcd_iowrite4@data 0024           lcd_iowrite8@data 0070  
       __size_of_lcd_clear 0013         __size_of_lcd_ioset 0058                 __pbssBANK0 0047  
               __pmaintext 020F                 __pintentry 0004                    ?_lcd_on 0070  
               _lcd_ioinit 0405                 _lcdcolumns 004A                  ?_lcd_init 0029  
                ?_lcd_goto 0029                  ?_lcd_send 0026                  ?_lcd_puts 0029  
               __stringtab 0384          __end_of_lcd_clear 047D          __end_of_lcd_ioset 020F  
                  _Trigger 048D                    ___lwdiv 02A1                    ___lwmod 0350  
          __size_of_lcd_on 0010                    __ptext1 00F1                    __ptext2 0350  
                  __ptext3 02A1                    __ptext4 0428                    __ptext5 047D  
                  __ptext6 0020                    __ptext7 0405                    __ptext8 0449  
                  __ptext9 046A      __size_of_lcd_iowrite4 0042      __size_of_lcd_iowrite8 0001  
                  _lcdrows 004B                    _dpowers 0394          i1___lwdiv@divisor 0070  
        i1___lwdiv@counter 0077   __end_of_Inicializaciones 03DD                    _rowaddr 039E  
                  _sprintf 00F1                 ??_lcd_init 002B                 ??_lcd_goto 002A  
               ??_lcd_send 0027                 ??_lcd_puts 002B       end_of_initialization 001D  
           lcd_puts@string 0029               _lcd_iowrite4 025F               _lcd_iowrite8 049B  
              ?_lcd_ioinit 0070                  i1___lwdiv 02DF                 lcd_send@rs 0026  
           __end_of_lcd_on 048D        start_initialization 0013                 ?i1___lwdiv 0070  
      __size_of_lcd_ioinit 0023                   ??_lcd_on 0029                __pdataBANK0 004A  
                ___latbits 0001              __pcstackBANK0 0020     __CFG_FOSC$INTRC_CLKOUT 0000  
        __size_of_lcd_init 00D1          __size_of_lcd_goto 0021          __size_of_lcd_send 0035  
              sprintf@flag 0035          __size_of_lcd_puts 0021                sprintf@prec 0036  
                __pnvBANK0 004C           ___lwdiv@dividend 0022                   ?_Trigger 0070  
                 ?___lwdiv 0020                   ?___lwmod 0028                  _lcd_clear 046A  
                _lcd_ioset 01B7                  __pstrings 0384           ___lwdiv@quotient 0025  
              ??i1___lwdiv 0074          ?_Inicializaciones 0070                   ?_sprintf 002E  
       ??_Inicializaciones 0020          interrupt_function 0004                 ?_lcd_clear 0070  
               ?_lcd_ioset 0020                __stringbase 0393               ??_lcd_ioinit 0022  
       __end_of_lcd_ioinit 0428           __size_of_Trigger 000C           __size_of___lwdiv 003E  
         __size_of___lwmod 0034         __end_of__stringtab 0394                 sprintf@val 0037  
          ___lwdiv@divisor 0020            ___lwdiv@counter 0027                   __ptext10 031B  
                 __ptext11 049B                   __ptext12 025F                   __ptext13 01B7  
                 __ptext14 048D                   __ptext15 03B1                   __ptext16 03DD  
                 __ptext17 02DF          __CFG_BOR4V$BOR21V 0000                   _lcd_init 0020  
                 _lcd_goto 0449                   _lcd_send 031B                   _dispctrl 0049  
                 _lcd_puts 0428           __size_of_sprintf 00C6         i1___lwdiv@dividend 0072  
            __size_of_echo 0028              __size_of_main 0050                ??_lcd_clear 0029  
              ??_lcd_ioset 0021         i1___lwdiv@quotient 0075                   intlevel1 0000  
                sprintf@ap 0034                  sprintf@sp 0039           ___lwmod@dividend 002A  
                stringcode 038E                   sprintf@c 003A                   sprintf@f 002E  
          ___lwmod@divisor 0028            ___lwmod@counter 002D                   stringdir 038E  
                 stringtab 0384  
